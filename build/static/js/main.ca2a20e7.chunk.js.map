{"version":3,"sources":["views/LogIn/styles.js","constants/urls.js","actions/userActions.js","constants/userConstants.js","views/LogIn/LogIn.jsx","views/SignUp/styles.js","views/SignUp/SignUp.jsx","views/ForgotPassword/styles.js","views/ForgotPassword/ForgotPassword.jsx","views/ResetPassword/styles.js","views/ResetPassword/ResetPassword.jsx","views/Home/styles.js","components/Sidebar/styles.js","components/Sidebar/Header/styles.js","components/Sidebar/Header/AddFriends/styles.js","components/global/Message/styles.js","components/global/Message/Message.jsx","actions/roomActions.js","constants/roomConstants.js","components/Sidebar/Header/AddFriends/AddFriends.jsx","components/Sidebar/Header/Header.jsx","constants/messagesConstants.js","components/Sidebar/SearchBox/styles.js","components/Sidebar/SearchBox/SearchBox.jsx","components/Sidebar/ChatsContainer/styles.js","components/Sidebar/ChatsContainer/ChatGo/styles.js","components/Sidebar/ChatsContainer/ChatGo/ChatGo.jsx","components/Sidebar/ChatsContainer/ChatsContainer.jsx","components/Sidebar/Sidebar.jsx","components/ChatBox/styles.js","components/ChatBox/NoChat/styles.js","components/ChatBox/NoChat/NoChat.jsx","components/ChatBox/ChatMsg/styles.js","components/ChatBox/ChatMsg/Header/styles.js","components/ChatBox/ChatMsg/Header/Header.jsx","components/ChatBox/ChatMsg/MessagesContainer/styles.js","components/ChatBox/ChatMsg/MessagesContainer/Message/styles.js","components/ChatBox/ChatMsg/MessagesContainer/Message/MessageStatus/MessageStatus.jsx","components/ChatBox/ChatMsg/MessagesContainer/Message/Message.jsx","components/ChatBox/ChatMsg/MessagesContainer/MessagesContainer.jsx","components/ChatBox/ChatMsg/ChatController/styles.js","actions/messageActions.js","components/ChatBox/ChatMsg/ChatController/ChatController.jsx","components/global/MessageWrapper/styles.js","components/global/MessageWrapper/MessageWrapper.jsx","components/ChatBox/ChatMsg/AcceptChat/styles.js","components/ChatBox/ChatMsg/AcceptChat/AcceptChat.jsx","components/ChatBox/ChatMsg/Block/styles.js","components/ChatBox/ChatMsg/Block/Block.jsx","components/ChatBox/ChatMsg/ChatMsg.jsx","components/ChatBox/ChatBox.jsx","views/Home/Home.jsx","actions/socketActions.js","constants/socketConstants.js","Tests/Test.jsx","App/App.jsx","reducers/messageReducers.js","store.js","reducers/userReducers.js","reducers/roomReducers.js","reducers/socketReducers.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","height","background","position","zIndex","boxShadow","display","textAlign","paddingTop","emailInput","fontWeight","passwordInput","InputBorder","borderColor","loginBtn","backgroundColor","marginTop","notSignedUp","signUpLink","textDecoration","color","lonInTopHeader","margin","alignItems","justifyContent","loginLogo","host","console","log","process","usersUrl","roomsUrl","messagesUrl","blocksUrl","setCurrentChattingUserData","userObj","options","type","force","dispatch","getState","a","currentOpenRoom","userToShowOnRoom","userId","_id","payload","currentUserDate","currentChattingUserData","userObjToSaveInLocalStorage","localStorage","setItem","JSON","stringify","token","loginUser","user","config","headers","authorization","axios","get","urls","data","status","onlineId","userData","response","message","createMuiTheme","palette","primary","green","LogIn","history","useState","email","password","setUserData","classes","useDispatch","useSelector","s","logInLoading","loading","loggedInUser","logInError","err","successLogIn","success","Alert","props","elevation","variant","handleInputChange","e","target","name","value","useEffect","push","Snackbar","open","autoHideDuration","anchorOrigin","horizontal","vertical","severity","className","Container","maxWidth","Typography","style","src","alt","loginFrom","onSubmit","preventDefault","post","loginUserAction","ThemeProvider","TextField","fullWidth","label","required","id","disabled","autoComplete","onChange","InputProps","notchedOutline","inputProps","minLength","Button","endIcon","CircularProgress","to","photoContainer","photoInput","inputLabel","borderRadius","border","cursor","opacity","cameraIconContainer","avatarContainer","resetPhotoBtn","fontSize","top","left","transform","profileImage","SignUp","firstName","lastName","passwordConfirm","photo","uploading","setUploading","signupLoading","signupError","signupSuccess","uploadFileHandler","stopPropagation","file","files","formData","FormData","append","path","alert","signupUserAction","Grid","container","spacing","item","sm","xs","accept","htmlFor","CameraAlt","photoUploading","onClick","Close","Avatar","ForgotPassword","setEmail","userForgotPassword","loadingForgotPassword","successForgotPassword","errForgotPassword","userForgotPasswordAction","ResetPassword","match","params","userResetPassword","loadingResetPassword","successResetPassword","errResetPassword","setTimeout","userResetPasswordAction","minWidth","flexDirection","overflow","borderRight","flex","padding","text","addChat","sidebarIcons","menuItem","addChatDialogBtn","Message","children","useStyle","setCurrentOpenRoomAction","currentRoomId","currentOpenRoomId","updateRoomAction","room","blockRoomAction","roomId","otherUser","unblockRoomAction","updateCurrentOpenRoomAction","acceptedRoomId","AddFriends","setOpen","createRoom","createRoomLoading","createRoomSuccess","createRoomErr","handleCloseDialog","Dialog","test","onClose","aria-labelledby","DialogTitle","otherUserEmail","trim","DialogContent","autoFocus","DialogActions","length","Header","handleLogout","removeItem","socket","disconnect","React","anchorEl","setAnchorEl","openMenu","Boolean","handleCloseMenu","IconButton","Add","aria-label","aria-controls","aria-haspopup","event","currentTarget","Menu","keepMounted","PaperProps","maxHeight","ITEM_HEIGHT","MenuItem","borderBottom","main","searchBox","outline","searchIcon","marginRight","SearchBox","placeholder","btnBase","info","infoTop","marginBottom","whiteSpace","textOverflow","fontFamily","date","lastMsg","newChat","ChatGo","ButtonBase","messageInput","document","getElementById","focus","fullName","moment","lastMessage","createdAt","format","new","messageTXT","ChatsContainer","myRooms","loadingMyRooms","rooms","errGettingMyRooms","map","key","Sidebar","mainLogo","mainText","subTitle","lineHeight","contactMe","NoChat","bgObjects","backgroundImage","backgroundSize","backgroundPosition","acceptChat","userInfoBtnBase","userInfo","openDialog","setOpenDialog","handleDeleteChat","delete","handleBlock","lastSeenAt","myBlock","aria-describedby","DialogContentText","scrollBehavior","earlierMessagesBtn","right","bottom","otherMessage","otherMessageText","overflowWrap","otherMessageDate","myMessage","myMessageText","myMessageDate","msgStatus","paddingLeft","adminMessage","textTransform","userSelect","MessageStatus","xmlns","viewBox","fill","d","msg","sender","messageDate","setMessageDate","adminMessageText","MessagesContainer","displayedMessages","scrollToEnd","scrollTo","scrollHeight","scrollTop","clientHeight","downArrow","onscroll","Math","random","minHeight","msgBox","paddingRight","msgInput","resize","send","updateRoomMessagesAction","myId","senderId","messageRoomId","msgServerId","addMyMessage","updateMyMessage","addOtherMessage","ChatController","setMessage","typing","setTyping","emit","typingUserId","onlineUserId","typingUserOnlineId","messageObj","receiver","clientId","uuidV4","createMessageAction","rows","Send","MessageWrapper","AcceptChat","onAccept","onBlock","Block","onUnBlock","ChatMsg","roomMessages","loadingMessages","messages","errGettingMessages","otherUserBlock","accepted","ChatBox","currentOpenRoomData","App","socketIOClient","connect","query","replace","on","currentChattingUser","senderOnlineId","updateRoomAfterOneDeletedAction","block","appBar","title","marginLeft","Transition","forwardRef","ref","Slide","direction","FullScreenDialog","handleClose","fullScreen","TransitionComponent","AppBar","Toolbar","edge","List","ListItem","button","ListItemText","secondary","Divider","component","Home","Test","exact","updateAnArray","array","newObj","identifier","oldObj","find","oldObjIndex","indexOf","splice","reducer","combineReducers","state","action","filter","unshift","roomIdToDelete","roomsAfterDeleting","newModifiedMessages","createMessage","getItem","parse","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render"],"mappings":"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","file":"static/js/main.ca2a20e7.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '90vw',\r\n    height: '90vh',\r\n    background: 'white',\r\n    position: 'relative',\r\n    zIndex: '2',\r\n    boxShadow: ' -2px -2px 10px grey',\r\n    display: 'flex',\r\n    textAlign: 'center',\r\n    paddingTop: '30px',\r\n  },\r\n  emailInput: {\r\n    fontWeight: 'bold',\r\n    '& >.MuiInputLabel-outlined': {\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  passwordInput: {\r\n    '& >.MuiInputLabel-outlined': {\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  InputBorder: {\r\n    borderColor: '#019688',\r\n  },\r\n  loginBtn: {\r\n    backgroundColor: '#019688',\r\n    fontWeight: 'bold',\r\n    marginTop: '25px',\r\n    '&:hover': {\r\n      backgroundColor: '#008276',\r\n    },\r\n  },\r\n  notSignedUp: {\r\n    paddingTop: '20px',\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n  },\r\n  signUpLink: {\r\n    textDecoration: 'none',\r\n    color: '#019688',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n  lonInTopHeader: {\r\n    display: 'inline-flex',\r\n    margin: 'auto',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  loginLogo: {\r\n    textAlign: 'center',\r\n    display: 'inline-block',\r\n    width: '75px',\r\n    height: '75px',\r\n    margin: 'auto',\r\n    '&>img': {\r\n      width: '100%',\r\n      height: '100%',\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","export const host = 'https://amh-whatapp-clone.herokuapp.com';\r\n// export const host = 'http://localhost:5000';\r\n\r\nconsole.log(process.env.NODE_ENV);\r\n\r\nexport const usersUrl = `${host}/api/v1/users`;\r\nexport const roomsUrl = `${host}/api/v1/rooms`;\r\nexport const messagesUrl = `${host}/api/v1/messages`;\r\nexport const blocksUrl = `${host}/api/v1/blocks`;\r\n","import * as c from '../constants/userConstants';\r\nimport {\r\n  CURRENT_OPEN_ROOM_RESET,\r\n  GET_MY_ROOMS_RESET,\r\n} from '../constants/roomConstants';\r\nimport * as urls from '../constants/urls';\r\nimport { GET_ROOM_MESSAGES_RESET } from '../constants/messagesConstants';\r\nimport axios from 'axios';\r\n\r\nexport const loginUserAction = (userData) => async (dispatch, getState) => {\r\n  try {\r\n    // const isToken = typeof userData === 'string';\r\n    dispatch({\r\n      type: c.LOGIN_REQUEST,\r\n    });\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      `${urls.usersUrl}/login`,\r\n      userData,\r\n      config\r\n    );\r\n\r\n    const { token, user } = data;\r\n    const payload = { ...user, token };\r\n\r\n    dispatch({\r\n      type: c.LOGIN_SUCCESS,\r\n      payload,\r\n    });\r\n\r\n    localStorage.setItem('loggedInUser', JSON.stringify(payload));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.LOGIN_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logoutUser = () => (dispatch, getState) => {\r\n  dispatch({\r\n    type: c.LOGOUT_USER,\r\n  });\r\n  dispatch({\r\n    type: CURRENT_OPEN_ROOM_RESET,\r\n  });\r\n  dispatch({\r\n    type: c.CURRENT_USER_DATA_RESET,\r\n  });\r\n  dispatch({\r\n    type: GET_MY_ROOMS_RESET,\r\n  });\r\n  dispatch({\r\n    type: GET_ROOM_MESSAGES_RESET,\r\n  });\r\n\r\n  localStorage.removeItem('loggedInUser');\r\n  localStorage.removeItem('currentRoom');\r\n  localStorage.removeItem('currentChattingUserData');\r\n  localStorage.removeItem('currentOpenRoomId');\r\n  const socket = getState().socket;\r\n  socket.disconnect();\r\n};\r\n\r\nexport const signupUserAction = (userData) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: c.SIGNUP_REQUEST,\r\n    });\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      `${urls.usersUrl}/signup`,\r\n      userData,\r\n      config\r\n    );\r\n\r\n    const { token, user } = data;\r\n    const payload = { ...user, token };\r\n\r\n    dispatch({\r\n      type: c.SIGNUP_SUCCESS,\r\n      payload,\r\n    });\r\n\r\n    localStorage.setItem('loggedInUser', JSON.stringify(payload));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.SIGNUP_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const userForgotPasswordAction = (email) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    // const isToken = typeof userData === 'string';\r\n    dispatch({\r\n      type: c.FORGOT_PASSWORD_REQUEST,\r\n    });\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    await axios.post(`${urls.usersUrl}/forgotPassword`, { email }, config);\r\n\r\n    dispatch({\r\n      type: c.FORGOT_PASSWORD_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.FORGOT_PASSWORD_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const userResetPasswordAction = (token, userData) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    // const isToken = typeof userData === 'string';\r\n    dispatch({\r\n      type: c.RESET_PASSWORD_REQUEST,\r\n    });\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    await axios.post(\r\n      `${urls.usersUrl}/resetPassword/${token}`,\r\n      userData,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: c.RESET_PASSWORD_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.RESET_PASSWORD_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\n// export const updateUserStatus = (userObj) => async (dispatch, getState) => {\r\n//   let currentOpenRoom = getState().currentOpenRoom.currentOpenRoom || {};\r\n//   if (\r\n//     !currentOpenRoom.userToShowOnRoom ||\r\n//     userObj.userId !== currentOpenRoom.userToShowOnRoom._id\r\n//   ) {\r\n//     return;\r\n//   }\r\n\r\n//   let userToShowOnRoom = currentOpenRoom.userToShowOnRoom;\r\n\r\n//   let onlineId = '';\r\n//   let lastSeenAt = '';\r\n\r\n//   if (userObj.onlineId) {\r\n//     onlineId = userObj.onlineId;\r\n//   } else if (userObj.lastSeenAt) {\r\n//     lastSeenAt = userObj.lastSeenAt;\r\n//   }\r\n\r\n//   userToShowOnRoom = {\r\n//     ...userToShowOnRoom,\r\n//     onlineId,\r\n//     lastSeenAt,\r\n//   };\r\n//   currentOpenRoom = { ...currentOpenRoom, userToShowOnRoom };\r\n//   dispatch({\r\n//     type: UPDATE_CURRENT_OPEN_ROOM,\r\n//     payload: currentOpenRoom,\r\n//   });\r\n// };\r\n\r\n// export const setUserTyping = (userObj) => (dispatch, getState) => {\r\n//   let currentOpenRoom = getState().currentOpenRoom.currentOpenRoom || {};\r\n//   if (\r\n//     !currentOpenRoom.userToShowOnRoom ||\r\n//     userObj.userId !== currentOpenRoom.userToShowOnRoom._id\r\n//   ) {\r\n//     return;\r\n//   }\r\n\r\n//   let typing = '';\r\n//   if (userObj.typing) {\r\n//     typing = 'typing';\r\n//   } else {\r\n//     typing = '';\r\n//   }\r\n\r\n//   dispatch({\r\n//     type: TYPING_MESSAGE,\r\n//     payload: typing,\r\n//   });\r\n// };\r\n\r\nexport const setCurrentChattingUserData = (\r\n  userObj,\r\n  options = { type: 'update', force: false }\r\n) => async (dispatch, getState) => {\r\n  //? options object will have a steady prop called type:'new' or 'update'=> default is update\r\n  //!\r\n  //? if type is update then we will check if the user id matches with\r\n  if (options.type === 'update') {\r\n    let currentOpenRoom = getState().currentOpenRoom.currentOpenRoom || {};\r\n    if (\r\n      !currentOpenRoom.userToShowOnRoom ||\r\n      userObj.userId !== currentOpenRoom.userToShowOnRoom._id\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    //? userObj will have fullName firstName lastName email\r\n\r\n    //? status      | => the userObj content\r\n    //? ------------|-----------------------------------------------\r\n    //? online      | => userId, onlineId\r\n    //? offline     | => userId, lastSeenAt\r\n    //? startTyping | => userId, typing:true , typingUserOnlineId\r\n    //? stopTyping  | => userId, typing:false, typingUserOnlineId\r\n\r\n    dispatch({\r\n      type: c.CURRENT_USER_DATA,\r\n      payload: userObj,\r\n    });\r\n\r\n    const currentUserDate = getState().currentChattingUserData;\r\n    const userObjToSaveInLocalStorage = { ...currentUserDate, ...userObj };\r\n    localStorage.setItem(\r\n      'currentChattingUserData',\r\n      JSON.stringify(userObjToSaveInLocalStorage)\r\n    );\r\n  } else if (options.type === 'new') {\r\n    try {\r\n      let currentOpenRoom = getState().currentOpenRoom.currentOpenRoom || {\r\n        userToShowOnRoom: {},\r\n      };\r\n      //? checking if that request is made when we reload the current chatting user data\r\n      //? from server when it is saved to locale storage but we need to update it\r\n      if (\r\n        currentOpenRoom.userToShowOnRoom._id === userObj.userId &&\r\n        !options.force\r\n      ) {\r\n        return;\r\n      }\r\n      //? here checking if the userId exists\r\n      if (!userObj.userId) {\r\n        return;\r\n      }\r\n\r\n      const token = `Bearer ${getState().loginUser.user.token}`;\r\n      const config = {\r\n        headers: {\r\n          authorization: token,\r\n        },\r\n      };\r\n\r\n      const {\r\n        data: { data },\r\n      } = await axios.get(\r\n        `${urls.usersUrl}/getUserData/${userObj.userId}`,\r\n        config\r\n      );\r\n\r\n      const status = data.onlineId ? 'online' : 'offline';\r\n      const userData = { status, ...data };\r\n      dispatch({\r\n        type: c.CURRENT_USER_DATA_RESET,\r\n      });\r\n      dispatch({\r\n        type: c.CURRENT_USER_DATA,\r\n        payload: userData,\r\n      });\r\n\r\n      localStorage.setItem('currentChattingUserData', JSON.stringify(userData));\r\n    } catch (err) {\r\n      dispatch({\r\n        type: c.CURRENT_USER_DATA_FAIL,\r\n        payload:\r\n          err.response && err.response.data.message\r\n            ? err.response.data.message\r\n            : err.message,\r\n      });\r\n    }\r\n  }\r\n};\r\n","export const LOGIN_REQUEST = 'LOGIN_REQUEST';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\n\r\nexport const SIGNUP_REQUEST = 'SIGNUP_REQUEST';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\r\n\r\nexport const FORGOT_PASSWORD_REQUEST = 'FORGOT_PASSWORD_REQUEST';\r\nexport const FORGOT_PASSWORD_SUCCESS = 'FORGOT_PASSWORD_SUCCESS';\r\nexport const FORGOT_PASSWORD_FAIL = 'FORGOT_PASSWORD_FAIL';\r\n\r\nexport const RESET_PASSWORD_REQUEST = 'RESET_PASSWORD_REQUEST';\r\nexport const RESET_PASSWORD_SUCCESS = 'RESET_PASSWORD_SUCCESS';\r\nexport const RESET_PASSWORD_FAIL = 'RESET_PASSWORD_FAIL';\r\n\r\nexport const CURRENT_USER_DATA = 'CURRENT_USER_DATA';\r\nexport const CURRENT_USER_DATA_FAIL = 'CURRENT_USER_DATA_FAIL';\r\nexport const CURRENT_USER_DATA_RESET = 'CURRENT_USER_DATA_RESET';\r\n\r\nexport const LOGOUT_USER = 'LOGOUT_USER';\r\n","import React, { useEffect, useState } from 'react';\r\nimport useStyles from './styles';\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Container,\r\n  createMuiTheme,\r\n  ThemeProvider,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { Link } from 'react-router-dom';\r\nimport { loginUserAction } from '../../actions/userActions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: green,\r\n  },\r\n});\r\n\r\nconst LogIn = ({ history }) => {\r\n  //? setting local state\r\n  const [userData, setUserData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  //? defining some variables\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  //? getting user data from redux\r\n  const loginUser = useSelector((s) => s.loginUser);\r\n  const {\r\n    loading: logInLoading,\r\n    user: loggedInUser,\r\n    err: logInError,\r\n    success: successLogIn,\r\n  } = loginUser;\r\n\r\n  //? some functions\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant='filled' {...props} />;\r\n  }\r\n  const handleLoginSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(loginUserAction(userData));\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUserData({\r\n      ...userData,\r\n      [name]: value,\r\n    });\r\n  };\r\n  //? some useEffect functions\r\n  useEffect(() => {\r\n    if (loggedInUser && loggedInUser.token) {\r\n      history.push('/home');\r\n    }\r\n    //! try applying this in the main App.jsx to login every time with userToken\r\n    //! else if (loggedInUser && loggedInUser.token) {\r\n    //! add here the code to log user in with his token\r\n    //! to check if the token is expired or not\r\n    //! add this to backend too , to login with token\r\n    //! dispatch(loginUserAction(loggedInUser.token));\r\n    //! }\r\n  }, [dispatch, history, loggedInUser, successLogIn]);\r\n  return (\r\n    <>\r\n      {successLogIn ? (\r\n        <Snackbar\r\n          open={successLogIn}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='success'>Logged in successfully</Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {logInLoading ? (\r\n        <Snackbar\r\n          open={logInLoading}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='info'>Logging in</Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {logInError ? (\r\n        <Snackbar\r\n          open={logInError && true}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='error'>{logInError}</Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      <div className={classes.root}>\r\n        <Container maxWidth='xs'>\r\n          <Typography\r\n            className={classes.lonInTopHeader}\r\n            style={{ textAlign: 'center' }}\r\n            variant='h2'\r\n          >\r\n            Login\r\n            <div className={classes.loginLogo}>\r\n              <img src='images/login/loginLogo.png' alt='Login Logo' />\r\n            </div>\r\n          </Typography>\r\n          <form className={classes.loginFrom} onSubmit={handleLoginSubmit}>\r\n            <ThemeProvider theme={theme}>\r\n              <TextField\r\n                fullWidth\r\n                margin='normal'\r\n                variant='outlined'\r\n                label='Email'\r\n                required\r\n                name='email'\r\n                type='email'\r\n                id='email'\r\n                disabled={logInLoading}\r\n                autoComplete='current-email'\r\n                onChange={handleInputChange}\r\n                value={userData.email}\r\n                className={classes.emailInput}\r\n                InputProps={{\r\n                  className: classes.emailInput,\r\n                  classes: {\r\n                    notchedOutline: classes.InputBorder,\r\n                  },\r\n                }}\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                margin='normal'\r\n                variant='outlined'\r\n                label='Password'\r\n                required\r\n                name='password'\r\n                type='password'\r\n                id='password'\r\n                disabled={logInLoading}\r\n                autoComplete='current-password'\r\n                onChange={handleInputChange}\r\n                value={userData.password}\r\n                inputProps={{\r\n                  minLength: 8,\r\n                }}\r\n                className={classes.passwordInput}\r\n                InputProps={{\r\n                  className: classes.passwordInput,\r\n                  classes: {\r\n                    notchedOutline: classes.InputBorder,\r\n                  },\r\n                }}\r\n              />\r\n            </ThemeProvider>\r\n\r\n            <Button\r\n              type='submit'\r\n              variant='contained'\r\n              color='primary'\r\n              className={classes.loginBtn}\r\n              style={{ backgroundColor: '#019688' }}\r\n              fullWidth\r\n              disabled={logInLoading}\r\n              endIcon={\r\n                logInLoading && (\r\n                  <CircularProgress\r\n                    style={{ color: 'black', width: '20px', height: '20px' }}\r\n                  />\r\n                )\r\n              }\r\n            >\r\n              Login\r\n            </Button>\r\n          </form>\r\n          <Typography className={classes.notSignedUp}>\r\n            Don't have email ?{' '}\r\n            <Link className={classes.signUpLink} to='/signup'>\r\n              {' '}\r\n              Signup\r\n            </Link>\r\n          </Typography>\r\n          <Typography className={classes.notSignedUp}>\r\n            <Link className={classes.signUpLink} to='/forgotPassword'>\r\n              Forgot password\r\n            </Link>{' '}\r\n            ?\r\n          </Typography>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LogIn;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '90vw',\r\n    height: '90vh',\r\n    background: 'white',\r\n    position: 'relative',\r\n    zIndex: '2',\r\n    boxShadow: ' -2px -2px 10px grey',\r\n    display: 'flex',\r\n    textAlign: 'center',\r\n    paddingTop: '30px',\r\n  },\r\n  emailInput: {\r\n    fontWeight: 'bold',\r\n    '& >.MuiInputLabel-outlined': {\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  passwordInput: {\r\n    '& >.MuiInputLabel-outlined': {\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  InputBorder: {\r\n    borderColor: '#019688',\r\n  },\r\n  loginBtn: {\r\n    backgroundColor: '#019688',\r\n    fontWeight: 'bold',\r\n    marginTop: '25px',\r\n    '&:hover': {\r\n      backgroundColor: '#008276',\r\n    },\r\n  },\r\n  notSignedUp: {\r\n    paddingTop: '20px',\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n  },\r\n  signUpLink: {\r\n    textDecoration: 'none',\r\n    color: '#019688',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n  lonInTopHeader: {\r\n    display: 'inline-flex',\r\n    margin: 'auto',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  loginLogo: {\r\n    textAlign: 'center',\r\n    display: 'inline-block',\r\n    width: '75px',\r\n    height: '75px',\r\n    margin: 'auto',\r\n    '&>img': {\r\n      width: '100%',\r\n      height: '100%',\r\n    },\r\n  },\r\n  photoContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'center',\r\n  },\r\n\r\n  photoInput: {\r\n    display: 'none',\r\n  },\r\n  inputLabel: {\r\n    width: '60px',\r\n    height: '60px',\r\n    borderRadius: '50%',\r\n    backgroundColor: '#eee',\r\n    border: '2px solid #ddd',\r\n    cursor: 'pointer',\r\n    '&>div:hover': {\r\n      opacity: '1',\r\n    },\r\n  },\r\n  cameraIconContainer: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    opacity: '0.5',\r\n    '&>*': {\r\n      width: '70%',\r\n      height: '70%',\r\n      position: 'absolute',\r\n    },\r\n  },\r\n  avatarContainer: {\r\n    width: '100%',\r\n    height: '100%',\r\n    position: 'relative',\r\n    '&:hover>span': {\r\n      opacity: '1',\r\n    },\r\n    '& .MuiAvatar-root': {\r\n      width: '100%',\r\n      height: '100%',\r\n    },\r\n  },\r\n  resetPhotoBtn: {\r\n    opacity: '0',\r\n    zIndex: '10',\r\n    width: '100%',\r\n    height: '100%',\r\n    backgroundColor: 'rgba(255,0,0,0.5)',\r\n    borderRadius: '50%',\r\n    position: 'absolute',\r\n    color: 'white',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    fontSize: '10px',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%,-50%)',\r\n    '&>*': {\r\n      width: '90%',\r\n      height: '90%',\r\n    },\r\n  },\r\n\r\n  profileImage: {\r\n    position: 'absolute',\r\n    zIndex: '1',\r\n    width: '100%',\r\n    height: '100%',\r\n    borderRadius: '50%',\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React, { useEffect, useState } from 'react';\r\nimport useStyles from './styles';\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Container,\r\n  createMuiTheme,\r\n  ThemeProvider,\r\n  Typography,\r\n  Grid,\r\n  Avatar,\r\n  CircularProgress,\r\n} from '@material-ui/core';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { Link } from 'react-router-dom';\r\nimport { signupUserAction } from '../../actions/userActions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport axios from 'axios';\r\nimport * as urls from '../../constants/urls';\r\nimport { CameraAlt, Close } from '@material-ui/icons';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: green,\r\n  },\r\n});\r\n\r\nconst SignUp = ({ history }) => {\r\n  //? setting local state\r\n  const [userData, setUserData] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    password: '',\r\n    passwordConfirm: '',\r\n    photo: '',\r\n  });\r\n\r\n  //? defining some variables\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  //? getting user data from redux\r\n  const loginUser = useSelector((s) => s.loginUser);\r\n  const {\r\n    loading: signupLoading,\r\n    user: loggedInUser,\r\n    err: signupError,\r\n    success: signupSuccess,\r\n  } = loginUser;\r\n\r\n  //? some functions\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant='filled' {...props} />;\r\n  }\r\n  const handleSignupSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(signupUserAction(userData));\r\n  };\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    if (!e.target.value) return;\r\n    setUserData({ ...userData, photo: '' });\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append('photo', file);\r\n    setUploading(true);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        `${urls.host}/api/v1/upload`,\r\n        formData,\r\n        config\r\n      );\r\n      setUserData({ ...userData, photo: data.path });\r\n      setUploading(false);\r\n    } catch (err) {\r\n      alert('ERROR UPLOADING YOUR IMAGE');\r\n      console.log(err);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUserData({\r\n      ...userData,\r\n      [name]: value,\r\n    });\r\n  };\r\n  //? some useEffect functions\r\n  useEffect(() => {\r\n    if (loggedInUser && loggedInUser.token) {\r\n      history.push('/home');\r\n    }\r\n    //! try applying this in the main App.jsx to login every time with userToken\r\n    //! else if (loggedInUser && loggedInUser.token) {\r\n    //! add here the code to log user in with his token\r\n    //! to check if the token is expired or not\r\n    //! add this to backend too , to login with token\r\n    //! dispatch(loginUserAction(loggedInUser.token));\r\n    //! }\r\n  }, [dispatch, history, loggedInUser]);\r\n  return (\r\n    <>\r\n      {signupSuccess ? (\r\n        <Snackbar\r\n          open={signupSuccess}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='success'>Signed up successfully</Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {signupLoading ? (\r\n        <Snackbar\r\n          open={signupLoading}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='info'>Signing up</Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {signupError ? (\r\n        <Snackbar\r\n          open={signupError && true}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='error'>{signupError}</Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      <div className={classes.root}>\r\n        <Container maxWidth='xs'>\r\n          <Typography\r\n            className={classes.lonInTopHeader}\r\n            style={{ textAlign: 'center' }}\r\n            variant='h2'\r\n          >\r\n            Signup\r\n            <div className={classes.loginLogo}>\r\n              <img src='images/login/loginLogo.png' alt='Login Logo' />\r\n            </div>\r\n          </Typography>\r\n          <form className={classes.loginFrom} onSubmit={handleSignupSubmit}>\r\n            <ThemeProvider theme={theme}>\r\n              <Grid container spacing={2}>\r\n                <Grid item sm={9} xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    margin='normal'\r\n                    variant='outlined'\r\n                    label='Name'\r\n                    required\r\n                    name='firstName'\r\n                    type='text'\r\n                    id='firstName'\r\n                    disabled={signupLoading}\r\n                    autoComplete='first-name'\r\n                    onChange={handleInputChange}\r\n                    value={userData.firstName}\r\n                    className={classes.emailInput}\r\n                    InputProps={{\r\n                      className: classes.emailInput,\r\n                      classes: {\r\n                        notchedOutline: classes.InputBorder,\r\n                      },\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item sm={3} xs={12} className={classes.photoContainer}>\r\n                  {/* <TextField\r\n                    fullWidth\r\n                    margin='normal'\r\n                    variant='outlined'\r\n                    label='Last Name'\r\n                    required\r\n                    name='lastName'\r\n                    disabled={signupLoading}\r\n                    type='text'\r\n                    id='lastName'\r\n                    autoComplete='last-name'\r\n                    onChange={handleInputChange}\r\n                    value={userData.lastName}\r\n                    className={classes.emailInput}\r\n                    InputProps={{\r\n                      className: classes.emailInput,\r\n                      classes: {\r\n                        notchedOutline: classes.InputBorder,\r\n                      },\r\n                    }}\r\n                  /> */}\r\n                  <input\r\n                    type='file'\r\n                    id='profile-photo'\r\n                    label='Choose your image'\r\n                    onChange={uploadFileHandler}\r\n                    accept='image/*'\r\n                    className={classes.photoInput}\r\n                  />\r\n                  <label htmlFor='profile-photo' className={classes.inputLabel}>\r\n                    <div\r\n                      style={userData.photo ? { display: 'none' } : {}}\r\n                      className={classes.cameraIconContainer}\r\n                    >\r\n                      <CameraAlt style={uploading ? { display: 'none' } : {}} />\r\n                      <CircularProgress\r\n                        style={!uploading ? { display: 'none' } : {}}\r\n                        className={classes.photoUploading}\r\n                        color='secondary'\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={userData.photo ? {} : { display: 'none' }}\r\n                      className={classes.avatarContainer}\r\n                    >\r\n                      <span\r\n                        onClick={(e) => {\r\n                          setUserData({ ...userData, photo: '' });\r\n                          e.preventDefault();\r\n                          e.stopPropagation();\r\n                        }}\r\n                        className={classes.resetPhotoBtn}\r\n                      >\r\n                        <Close />\r\n                      </span>\r\n                      <Avatar\r\n                        src={userData.photo}\r\n                        alt='user profile'\r\n                        className={classes.profileImage}\r\n                      />\r\n                    </div>\r\n                  </label>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <TextField\r\n                fullWidth\r\n                margin='normal'\r\n                variant='outlined'\r\n                label='Email'\r\n                required\r\n                disabled={signupLoading}\r\n                name='email'\r\n                type='email'\r\n                id='email'\r\n                autoComplete='current-email'\r\n                onChange={handleInputChange}\r\n                value={userData.email}\r\n                className={classes.emailInput}\r\n                InputProps={{\r\n                  className: classes.emailInput,\r\n                  classes: {\r\n                    notchedOutline: classes.InputBorder,\r\n                  },\r\n                }}\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                margin='normal'\r\n                variant='outlined'\r\n                label='Password'\r\n                required\r\n                name='password'\r\n                disabled={signupLoading}\r\n                type='password'\r\n                id='password'\r\n                autoComplete='current-password'\r\n                onChange={handleInputChange}\r\n                value={userData.password}\r\n                inputProps={{\r\n                  minLength: 8,\r\n                }}\r\n                className={classes.passwordInput}\r\n                InputProps={{\r\n                  className: classes.passwordInput,\r\n                  classes: {\r\n                    notchedOutline: classes.InputBorder,\r\n                  },\r\n                }}\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                margin='normal'\r\n                variant='outlined'\r\n                label='Password Confirmation'\r\n                required\r\n                name='passwordConfirm'\r\n                disabled={signupLoading}\r\n                type='password'\r\n                id='passwordConfirm'\r\n                autoComplete='current-passwordConfirm'\r\n                onChange={handleInputChange}\r\n                value={userData.passwordConfirm}\r\n                inputProps={{\r\n                  minLength: 8,\r\n                }}\r\n                className={classes.passwordInput}\r\n                InputProps={{\r\n                  className: classes.passwordInput,\r\n                  classes: {\r\n                    notchedOutline: classes.InputBorder,\r\n                  },\r\n                }}\r\n              />\r\n            </ThemeProvider>\r\n\r\n            <Button\r\n              type='submit'\r\n              variant='contained'\r\n              color='primary'\r\n              className={classes.loginBtn}\r\n              fullWidth\r\n              disabled={signupLoading}\r\n              endIcon={\r\n                signupLoading && (\r\n                  <CircularProgress\r\n                    style={{ color: 'black', width: '20px', height: '20px' }}\r\n                  />\r\n                )\r\n              }\r\n            >\r\n              Signup\r\n            </Button>\r\n          </form>\r\n          <Typography className={classes.notSignedUp}>\r\n            Have an account ?{' '}\r\n            <Link className={classes.signUpLink} to='/login'>\r\n              {' '}\r\n              Login\r\n            </Link>\r\n          </Typography>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '90vw',\r\n    height: '90vh',\r\n    background: 'white',\r\n    position: 'relative',\r\n    zIndex: '2',\r\n    boxShadow: ' -2px -2px 10px grey',\r\n    display: 'flex',\r\n    textAlign: 'center',\r\n    paddingTop: '30px',\r\n  },\r\n  emailInput: {\r\n    fontWeight: 'bold',\r\n    '& >.MuiInputLabel-outlined': {\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  passwordInput: {\r\n    '& >.MuiInputLabel-outlined': {\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  InputBorder: {\r\n    borderColor: '#019688',\r\n  },\r\n  loginBtn: {\r\n    backgroundColor: '#019688',\r\n    fontWeight: 'bold',\r\n    marginTop: '25px',\r\n    '&:hover': {\r\n      backgroundColor: '#008276',\r\n    },\r\n  },\r\n  notSignedUp: {\r\n    paddingTop: '20px',\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n  },\r\n  signUpLink: {\r\n    textDecoration: 'none',\r\n    color: '#019688',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n  lonInTopHeader: {\r\n    display: 'inline-flex',\r\n    margin: 'auto',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    fontSize: '30px',\r\n  },\r\n  loginLogo: {\r\n    textAlign: 'center',\r\n    display: 'inline-block',\r\n    width: '75px',\r\n    height: '75px',\r\n    margin: 'auto',\r\n    '&>img': {\r\n      width: '100%',\r\n      height: '100%',\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React, { useEffect, useState } from 'react';\r\nimport useStyles from './styles';\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Container,\r\n  createMuiTheme,\r\n  ThemeProvider,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { userForgotPasswordAction } from '../../actions/userActions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: green,\r\n  },\r\n});\r\n\r\nconst ForgotPassword = ({ history }) => {\r\n  //? setting local state\r\n  const [email, setEmail] = useState('');\r\n\r\n  //? defining some variables\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  //? getting user data from redux\r\n  const { user } = useSelector((s) => s.loginUser);\r\n  const userForgotPassword = useSelector((s) => s.userForgotPassword);\r\n  const {\r\n    loading: loadingForgotPassword,\r\n    success: successForgotPassword,\r\n    err: errForgotPassword,\r\n  } = userForgotPassword;\r\n\r\n  //? some functions\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant='filled' {...props} />;\r\n  }\r\n\r\n  const handleForgotPasswordSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(userForgotPasswordAction(email));\r\n  };\r\n\r\n  //? some useEffect functions\r\n  useEffect(() => {\r\n    if (user && user.token) {\r\n      history.push('/home');\r\n    }\r\n    //! try applying this in the main App.jsx to login every time with userToken\r\n    //! else if (loggedInUser && loggedInUser.token) {\r\n    //! add here the code to log user in with his token\r\n    //! to check if the token is expired or not\r\n    //! add this to backend too , to login with token\r\n    //! dispatch(loginUserAction(loggedInUser.token));\r\n    //! }\r\n  }, [dispatch, history, user]);\r\n  return (\r\n    <>\r\n      {/* //? edit from here */}\r\n      {successForgotPassword ? (\r\n        <Snackbar\r\n          open={successForgotPassword}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='success'>\r\n            Please check you email for resetting password link <br />\r\n            You can close this window now\r\n          </Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {loadingForgotPassword ? (\r\n        <Snackbar\r\n          open={loadingForgotPassword}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='info'>Sending your request</Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {errForgotPassword ? (\r\n        <Snackbar\r\n          open={errForgotPassword && true}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='error'>{errForgotPassword}</Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {/* //? to here */}\r\n      <div className={classes.root}>\r\n        <Container maxWidth='xs'>\r\n          <Typography\r\n            className={classes.lonInTopHeader}\r\n            style={{ textAlign: 'center' }}\r\n            variant='h2'\r\n          >\r\n            Enter your email\r\n          </Typography>\r\n          <form\r\n            className={classes.loginFrom}\r\n            onSubmit={handleForgotPasswordSubmit}\r\n          >\r\n            <ThemeProvider theme={theme}>\r\n              <TextField\r\n                fullWidth\r\n                margin='normal'\r\n                variant='outlined'\r\n                label='Email'\r\n                required\r\n                name='email'\r\n                type='email'\r\n                id='email'\r\n                disabled={loadingForgotPassword}\r\n                autoComplete='current-email'\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                value={email}\r\n                className={classes.emailInput}\r\n                InputProps={{\r\n                  className: classes.emailInput,\r\n                  classes: {\r\n                    notchedOutline: classes.InputBorder,\r\n                  },\r\n                }}\r\n              />\r\n            </ThemeProvider>\r\n\r\n            <Button\r\n              type='submit'\r\n              variant='contained'\r\n              color='primary'\r\n              className={classes.loginBtn}\r\n              fullWidth\r\n              disabled={loadingForgotPassword}\r\n              endIcon={\r\n                loadingForgotPassword && (\r\n                  <CircularProgress\r\n                    style={{ color: 'black', width: '20px', height: '20px' }}\r\n                  />\r\n                )\r\n              }\r\n            >\r\n              Send\r\n            </Button>\r\n          </form>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '90vw',\r\n    height: '90vh',\r\n    background: 'white',\r\n    position: 'relative',\r\n    zIndex: '2',\r\n    boxShadow: ' -2px -2px 10px grey',\r\n    display: 'flex',\r\n    textAlign: 'center',\r\n    paddingTop: '30px',\r\n  },\r\n  emailInput: {\r\n    fontWeight: 'bold',\r\n    '& >.MuiInputLabel-outlined': {\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  passwordInput: {\r\n    '& >.MuiInputLabel-outlined': {\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  InputBorder: {\r\n    borderColor: '#019688',\r\n  },\r\n  loginBtn: {\r\n    backgroundColor: '#019688',\r\n    fontWeight: 'bold',\r\n    marginTop: '25px',\r\n    '&:hover': {\r\n      backgroundColor: '#008276',\r\n    },\r\n  },\r\n  notSignedUp: {\r\n    paddingTop: '20px',\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n  },\r\n  signUpLink: {\r\n    textDecoration: 'none',\r\n    color: '#019688',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n  lonInTopHeader: {\r\n    display: 'inline-flex',\r\n    margin: 'auto',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    fontSize: '30px',\r\n  },\r\n  loginLogo: {\r\n    textAlign: 'center',\r\n    display: 'inline-block',\r\n    width: '75px',\r\n    height: '75px',\r\n    margin: 'auto',\r\n    '&>img': {\r\n      width: '100%',\r\n      height: '100%',\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React, { useEffect, useState } from 'react';\r\nimport useStyles from './styles';\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Container,\r\n  createMuiTheme,\r\n  ThemeProvider,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { userResetPasswordAction } from '../../actions/userActions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: green,\r\n  },\r\n});\r\n\r\nconst ResetPassword = ({ history, match }) => {\r\n  const token = match.params.token;\r\n  //? setting local state\r\n  const [userData, setUserData] = useState({\r\n    email: '',\r\n    password: '',\r\n    passwordConfirm: '',\r\n  });\r\n\r\n  //? defining some variables\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  //? getting user data from redux\r\n  const { user } = useSelector((s) => s.loginUser);\r\n  const userResetPassword = useSelector((s) => s.userResetPassword);\r\n  const {\r\n    loading: loadingResetPassword,\r\n    success: successResetPassword,\r\n    err: errResetPassword,\r\n  } = userResetPassword;\r\n\r\n  //? some functions\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant='filled' {...props} />;\r\n  }\r\n  const handleResetPasswordSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(userResetPasswordAction(token, userData));\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUserData({\r\n      ...userData,\r\n      [name]: value,\r\n    });\r\n  };\r\n  //? some useEffect functions\r\n  useEffect(() => {\r\n    if (user && user.token) {\r\n      history.push('/home');\r\n    }\r\n    //! try applying this in the main App.jsx to login every time with userToken\r\n    //! else if (loggedInUser && loggedInUser.token) {\r\n    //! add here the code to log user in with his token\r\n    //! to check if the token is expired or not\r\n    //! add this to backend too , to login with token\r\n    //! dispatch(loginUserAction(loggedInUser.token));\r\n    //! }\r\n  }, [dispatch, history, user]);\r\n\r\n  useEffect(() => {\r\n    if (successResetPassword) {\r\n      setTimeout(() => {\r\n        history.push('/login');\r\n      }, 2000);\r\n    }\r\n  }, [history, successResetPassword]);\r\n  return (\r\n    <>\r\n      {successResetPassword ? (\r\n        <Snackbar\r\n          open={successResetPassword}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='success'>Password updated successfully</Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {loadingResetPassword ? (\r\n        <Snackbar\r\n          open={loadingResetPassword}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='info'>Sending Your Request</Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {errResetPassword ? (\r\n        <Snackbar\r\n          open={errResetPassword && true}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='error'>{errResetPassword}</Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      <div className={classes.root}>\r\n        <Container maxWidth='xs'>\r\n          <Typography\r\n            className={classes.lonInTopHeader}\r\n            style={{ textAlign: 'center' }}\r\n            variant='h2'\r\n          >\r\n            Reset your password password\r\n          </Typography>\r\n          <form\r\n            className={classes.loginFrom}\r\n            onSubmit={handleResetPasswordSubmit}\r\n          >\r\n            <ThemeProvider theme={theme}>\r\n              <TextField\r\n                fullWidth\r\n                margin='normal'\r\n                variant='outlined'\r\n                label='Email'\r\n                required\r\n                name='email'\r\n                type='email'\r\n                id='email'\r\n                disabled={loadingResetPassword}\r\n                autoComplete='current-email'\r\n                onChange={handleInputChange}\r\n                value={userData.email}\r\n                className={classes.emailInput}\r\n                InputProps={{\r\n                  className: classes.emailInput,\r\n                  classes: {\r\n                    notchedOutline: classes.InputBorder,\r\n                  },\r\n                }}\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                margin='normal'\r\n                variant='outlined'\r\n                label='New Password'\r\n                required\r\n                name='password'\r\n                type='password'\r\n                id='password'\r\n                disabled={loadingResetPassword}\r\n                autoComplete='current-password'\r\n                onChange={handleInputChange}\r\n                value={userData.password}\r\n                inputProps={{\r\n                  minLength: 8,\r\n                }}\r\n                className={classes.passwordInput}\r\n                InputProps={{\r\n                  className: classes.passwordInput,\r\n                  classes: {\r\n                    notchedOutline: classes.InputBorder,\r\n                  },\r\n                }}\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                margin='normal'\r\n                variant='outlined'\r\n                label='New Password Again'\r\n                required\r\n                name='passwordConfirm'\r\n                type='password'\r\n                id='passwordConfirm'\r\n                disabled={loadingResetPassword}\r\n                autoComplete='current-password'\r\n                onChange={handleInputChange}\r\n                value={userData.passwordConfirm}\r\n                inputProps={{\r\n                  minLength: 8,\r\n                }}\r\n                className={classes.passwordInput}\r\n                InputProps={{\r\n                  className: classes.passwordInput,\r\n                  classes: {\r\n                    notchedOutline: classes.InputBorder,\r\n                  },\r\n                }}\r\n              />\r\n            </ThemeProvider>\r\n\r\n            <Button\r\n              type='submit'\r\n              variant='contained'\r\n              color='primary'\r\n              className={classes.loginBtn}\r\n              fullWidth\r\n              disabled={loadingResetPassword}\r\n              endIcon={\r\n                loadingResetPassword && (\r\n                  <CircularProgress\r\n                    style={{ color: 'black', width: '20px', height: '20px' }}\r\n                  />\r\n                )\r\n              }\r\n            >\r\n              Send\r\n            </Button>\r\n          </form>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '90vw',\r\n    height: '90vh',\r\n    minWidth: '650px',\r\n    background: 'white',\r\n    position: 'relative',\r\n    zIndex: '2',\r\n    boxShadow: ' -2px -2px 10px grey',\r\n    display: 'flex',\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    overflow: 'hidden',\r\n    borderRight: '2px solid #E5E5E6',\r\n    flex: '0.35',\r\n    //? you can control width to 0 by setting flex=0 && width=0\r\n    //? for full screen remove width=0 && set flex=1\r\n    //? on large screens remove width=0 && set flex=0.35\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: '10px 0',\r\n    width: '100%',\r\n    height: '59px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    position: 'relative',\r\n    justifyContent: 'space-between',\r\n    backgroundColor: '#EDEDED',\r\n    zIndex: '10',\r\n  },\r\n  text: {\r\n    fontWeight: 'bold',\r\n    color: '#009688',\r\n  },\r\n  addChat: {\r\n    border: '1px solid #009688',\r\n    color: '#009688',\r\n  },\r\n  sidebarIcons: {\r\n    '& *': {\r\n      color: '#696969',\r\n    },\r\n  },\r\n\r\n  menuItem: {\r\n    fontWeight: 'bold',\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '90vw',\r\n    height: '90vh',\r\n  },\r\n\r\n  addChatDialogBtn: {\r\n    color: 'white',\r\n    backgroundColor: '#009688',\r\n    fontWeight: 'bold',\r\n    '&:hover': {\r\n      backgroundColor: 'rgba(0, 148, 133, 0.66)',\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: '0 auto',\r\n    fontWeight: 'bold',\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport useStyle from './styles';\r\n\r\nconst Message = ({ severity, message, children }) => {\r\n  const classes = useStyle();\r\n\r\n  return (\r\n    <>\r\n      <Alert className={classes.root} severity={severity || 'info'}>\r\n        {message}\r\n      </Alert>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import * as c from '../constants/roomConstants';\r\nimport * as urls from '../constants/urls';\r\nimport axios from 'axios';\r\n\r\nexport const getMyRoomsAction = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: c.GET_MY_ROOMS_REQUEST,\r\n    });\r\n    const token = `Bearer ${getState().loginUser.user.token}`;\r\n    const config = {\r\n      headers: {\r\n        authorization: token,\r\n      },\r\n    };\r\n\r\n    const {\r\n      data: { data },\r\n    } = await axios.get(`${urls.roomsUrl}/getMyRooms`, config);\r\n    dispatch({\r\n      type: c.GET_MY_ROOMS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.GET_MY_ROOMS_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createRoomAction = (otherUserEmail) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: c.CREATE_ROOM_REQUEST,\r\n    });\r\n    const token = `Bearer ${getState().loginUser.user.token}`;\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: token,\r\n      },\r\n    };\r\n\r\n    const {\r\n      data: { data },\r\n    } = await axios.post(\r\n      `${urls.roomsUrl}/createNewRoom`,\r\n      { otherUserEmail },\r\n      config\r\n    );\r\n    dispatch({\r\n      type: c.CREATE_ROOM_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.CREATE_ROOM_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const setCurrentOpenRoomAction = (currentRoomId) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const currentOpenRoomId = getState().currentOpenRoom.currentOpenRoomId;\r\n  const currentOpenRoom = getState().currentOpenRoom.currentOpenRoom;\r\n  if (currentRoomId === currentOpenRoomId && currentOpenRoom) {\r\n    return;\r\n  }\r\n  try {\r\n    // dispatch({\r\n    //   type: c.CURRENT_OPEN_ROOM_REQUEST,\r\n    // });\r\n\r\n    const token = `Bearer ${getState().loginUser.user.token}`;\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: token,\r\n      },\r\n    };\r\n\r\n    const {\r\n      data: { data },\r\n    } = await axios.get(`${urls.roomsUrl}/${currentRoomId}`, config);\r\n    dispatch({\r\n      type: c.CURRENT_OPEN_ROOM_SUCCESS,\r\n      payload: data,\r\n    });\r\n    localStorage.setItem('currentOpenRoomId', currentRoomId);\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.CURRENT_OPEN_ROOM_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\n//? when any user send message we will get rooms from server again\r\nexport const updateRoomAction = (room) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: c.UPDATE_ROOM_PUT_UP,\r\n      payload: room,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.GET_MY_ROOMS_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const acceptRoomAction = (roomId) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: c.HANDLE_ACCEPT_ROOM_REQUEST,\r\n    });\r\n    const token = `Bearer ${getState().loginUser.user.token}`;\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: token,\r\n      },\r\n    };\r\n\r\n    const {\r\n      data: { data },\r\n    } = await axios.post(\r\n      `${urls.roomsUrl}/acceptRoom`,\r\n      { room: roomId },\r\n      config\r\n    );\r\n    dispatch({\r\n      type: c.HANDLE_ACCEPT_ROOM_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.HANDLE_ACCEPT_ROOM_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const blockRoomAction = (roomId, otherUser) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: c.HANDLE_BLOCK_ROOM_REQUEST,\r\n    });\r\n    const token = `Bearer ${getState().loginUser.user.token}`;\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: token,\r\n      },\r\n    };\r\n\r\n    const {\r\n      data: { data },\r\n    } = await axios.post(\r\n      `${urls.blocksUrl}`,\r\n      { room: roomId, otherUser: otherUser },\r\n      config\r\n    );\r\n    dispatch({\r\n      type: c.HANDLE_BLOCK_ROOM_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.HANDLE_BLOCK_ROOM_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const unblockRoomAction = (roomId, otherUser) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: c.HANDLE_UNBLOCK_ROOM_REQUEST,\r\n    });\r\n    const token = `Bearer ${getState().loginUser.user.token}`;\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: token,\r\n      },\r\n    };\r\n\r\n    const {\r\n      data: { data },\r\n    } = await axios.post(\r\n      `${urls.blocksUrl}/deleteBlock`,\r\n      { room: roomId, otherUser: otherUser },\r\n      config\r\n    );\r\n    dispatch({\r\n      type: c.HANDLE_UNBLOCK_ROOM_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.HANDLE_UNBLOCK_ROOM_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateRoomWithIdAction = (roomId) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    const token = `Bearer ${getState().loginUser.user.token}`;\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: token,\r\n      },\r\n    };\r\n\r\n    const {\r\n      data: { data },\r\n    } = await axios.get(`${urls.roomsUrl}/${roomId}`, config);\r\n    dispatch({\r\n      type: c.UPDATE_ROOM_PUT_UP,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.HANDLE_ACCEPT_ROOM_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateCurrentOpenRoomAction = (acceptedRoomId) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const currentOpenRoom = getState().currentOpenRoom.currentOpenRoom;\r\n\r\n  if (currentOpenRoom._id !== acceptedRoomId) {\r\n    return;\r\n  }\r\n  try {\r\n    const token = `Bearer ${getState().loginUser.user.token}`;\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: token,\r\n      },\r\n    };\r\n\r\n    const {\r\n      data: { data },\r\n    } = await axios.get(`${urls.roomsUrl}/${acceptedRoomId}`, config);\r\n    dispatch({\r\n      type: c.UPDATE_CURRENT_OPEN_ROOM,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem('currentRoom', JSON.stringify(data));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.HANDLE_ACCEPT_ROOM_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteRoomAction = (roomId) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: c.DELETE_ROOM_REQUEST,\r\n    });\r\n    const token = `Bearer ${getState().loginUser.user.token}`;\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: token,\r\n      },\r\n    };\r\n\r\n    const {\r\n      data: { data },\r\n    } = await axios.delete(`${urls.roomsUrl}/${roomId}`, config);\r\n    dispatch({\r\n      type: c.DELETE_ROOM_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.DELETE_ROOM_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateRoomAfterOneDeletedAction = (roomId) => (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const currentOpenRoomId = getState().currentOpenRoom.currentOpenRoom._id;\r\n  if (currentOpenRoomId === roomId) {\r\n    localStorage.removeItem('currentRoom');\r\n    dispatch({\r\n      type: c.CURRENT_OPEN_ROOM_RESET,\r\n      payload: roomId,\r\n    });\r\n  }\r\n\r\n  dispatch({\r\n    type: c.UPDATE_ROOMS_AFTER_DELETING,\r\n    payload: roomId,\r\n  });\r\n};\r\n","export const GET_MY_ROOMS_REQUEST = 'GET_MY_ROOMS_REQUEST';\r\nexport const GET_MY_ROOMS_SUCCESS = 'GET_MY_ROOMS_SUCCESS';\r\nexport const GET_MY_ROOMS_FAIL = 'GET_MY_ROOMS_FAIL';\r\nexport const GET_MY_ROOMS_RESET = 'GET_MY_ROOMS_RESET';\r\n\r\nexport const CREATE_ROOM_REQUEST = 'CREATE_ROOM_REQUEST';\r\nexport const CREATE_ROOM_SUCCESS = 'CREATE_ROOM_SUCCESS';\r\nexport const CREATE_ROOM_FAIL = 'CREATE_ROOM_FAIL';\r\nexport const CREATE_ROOM_RESET = 'CREATE_ROOM_RESET';\r\n\r\nexport const HANDLE_ACCEPT_ROOM_REQUEST = 'HANDLE_ACCEPT_ROOM_REQUEST';\r\nexport const HANDLE_ACCEPT_ROOM_SUCCESS = 'HANDLE_ACCEPT_ROOM_SUCCESS';\r\nexport const HANDLE_ACCEPT_ROOM_FAIL = 'HANDLE_ACCEPT_ROOM_FAIL';\r\n\r\nexport const HANDLE_BLOCK_ROOM_REQUEST = 'HANDLE_BLOCK_ROOM_REQUEST';\r\nexport const HANDLE_BLOCK_ROOM_SUCCESS = 'HANDLE_BLOCK_ROOM_SUCCESS';\r\nexport const HANDLE_BLOCK_ROOM_FAIL = 'HANDLE_BLOCK_ROOM_FAIL';\r\nexport const HANDLE_BLOCK_ROOM_RESET = 'HANDLE_BLOCK_ROOM_RESET';\r\n\r\nexport const HANDLE_UNBLOCK_ROOM_REQUEST = 'HANDLE_UNBLOCK_ROOM_REQUEST';\r\nexport const HANDLE_UNBLOCK_ROOM_SUCCESS = 'HANDLE_UNBLOCK_ROOM_SUCCESS';\r\nexport const HANDLE_UNBLOCK_ROOM_FAIL = 'HANDLE_UNBLOCK_ROOM_FAIL';\r\nexport const HANDLE_UNBLOCK_ROOM_RESET = 'HANDLE_UNBLOCK_ROOM_RESET';\r\n\r\nexport const DELETE_ROOM_REQUEST = 'DELETE_ROOM_REQUEST';\r\nexport const DELETE_ROOM_SUCCESS = 'DELETE_ROOM_SUCCESS';\r\nexport const DELETE_ROOM_FAIL = 'DELETE_ROOM_FAIL';\r\nexport const DELETE_ROOM_RESET = 'DELETE_ROOM_RESET';\r\n\r\nexport const CURRENT_OPEN_ROOM_REQUEST = 'CURRENT_OPEN_ROOM_REQUEST';\r\nexport const CURRENT_OPEN_ROOM_SUCCESS = 'CURRENT_OPEN_ROOM_SUCCESS';\r\nexport const CURRENT_OPEN_ROOM_FAIL = 'CURRENT_OPEN_ROOM_REQUEST';\r\nexport const CURRENT_OPEN_ROOM_RESET = 'CURRENT_OPEN_ROOM_RESET3';\r\n\r\n//? non related constants\r\nexport const UPDATE_ROOM_PUT_UP = 'UPDATE_ROOM_PUT_UP';\r\nexport const UPDATE_ROOM_WITHOUT_PUT_UP = 'UPDATE_ROOM_WITHOUT_PUT_UP';\r\nexport const UPDATE_CURRENT_OPEN_ROOM = 'UPDATE_CURRENT_OPEN_ROOM';\r\nexport const UPDATE_ROOMS_AFTER_DELETING = 'UPDATE_ROOMS_AFTER_DELETING';\r\nexport const TYPING_MESSAGE = 'TYPING_MESSAGE';\r\n//? non related constants\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useStyle from './styles.js';\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  TextField,\r\n  createMuiTheme,\r\n  DialogActions,\r\n  ThemeProvider,\r\n  Button,\r\n  CircularProgress,\r\n} from '@material-ui/core';\r\nimport Message from '../../../global/Message/Message';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { createRoomAction } from '../../../../actions/roomActions';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: green,\r\n  },\r\n});\r\n\r\nconst AddFriends = ({ open, setOpen }) => {\r\n  const classes = useStyle();\r\n  const dispatch = useDispatch();\r\n\r\n  const [email, setEmail] = useState('');\r\n\r\n  const createRoom = useSelector((s) => s.createRoom);\r\n  const {\r\n    loading: createRoomLoading,\r\n    success: createRoomSuccess,\r\n    err: createRoomErr,\r\n  } = createRoom;\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpen(false);\r\n    setEmail('');\r\n  };\r\n\r\n  const handleAddNewChat = (e) => {\r\n    e.preventDefault();\r\n    dispatch(createRoomAction(`${email}`.trim()));\r\n  };\r\n\r\n  useEffect(() => {\r\n    createRoomSuccess && setEmail('');\r\n  }, [createRoomSuccess]);\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth={true}\r\n      maxWidth='md'\r\n      className={classes.test}\r\n      open={open}\r\n      onClose={handleCloseDialog}\r\n      aria-labelledby='form-dialog-title'\r\n    >\r\n      {createRoomLoading ? (\r\n        <Message message='Creating new chat ...' />\r\n      ) : createRoomErr ? (\r\n        <Message severity='error' message={createRoomErr} />\r\n      ) : createRoomSuccess ? (\r\n        <Message severity='success' message='Room created successfully' />\r\n      ) : (\r\n        <DialogTitle id='form-dialog-title'>\r\n          Enter Other Person Email{' '}\r\n        </DialogTitle>\r\n      )}\r\n      <form onSubmit={handleAddNewChat}>\r\n        <DialogContent>\r\n          <ThemeProvider theme={theme}>\r\n            <TextField\r\n              className={classes.text}\r\n              autoFocus\r\n              margin='dense'\r\n              id='email'\r\n              label='Email Address'\r\n              type='email'\r\n              fullWidth\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              value={email}\r\n              disabled={createRoomLoading}\r\n            />\r\n          </ThemeProvider>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            className={classes.addChatDialogBtn}\r\n            onClick={handleCloseDialog}\r\n            variant='contained'\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            className={classes.addChatDialogBtn}\r\n            disabled={email.length < 1 || createRoomLoading}\r\n            variant='contained'\r\n            type='submit'\r\n            endIcon={\r\n              createRoomLoading && (\r\n                <CircularProgress\r\n                  style={{ color: 'black', width: '20px', height: '20px' }}\r\n                />\r\n              )\r\n            }\r\n          >\r\n            Add Chat\r\n          </Button>\r\n        </DialogActions>\r\n      </form>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AddFriends;\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Avatar, IconButton, Menu, MenuItem } from '@material-ui/core';\r\nimport { Add } from '@material-ui/icons';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport useStyle from './styles';\r\nimport { logoutUser } from '../../../actions/userActions';\r\nimport AddFriends from './AddFriends/AddFriends.jsx';\r\n\r\nconst Header = () => {\r\n  const classes = useStyle();\r\n  const dispatch = useDispatch();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const loginUser = useSelector((s) => s.loginUser);\r\n  const { user } = loginUser;\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logoutUser());\r\n  };\r\n\r\n  //? for 3 dots menu\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const openMenu = Boolean(anchorEl);\r\n  const ITEM_HEIGHT = 48;\r\n\r\n  const handleOpenMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseMenu = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  //? end for 3 dots menu\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton>\r\n        <Avatar src={`${user.photo}`} />\r\n      </IconButton>\r\n      {/* <span>{user.firstName}</span> */}\r\n      <div className={classes.sidebarIcons}>\r\n        <AddFriends open={open} setOpen={setOpen} />\r\n\r\n        <IconButton onClick={() => setOpen(true)} className={classes.addChat}>\r\n          <Add />\r\n        </IconButton>\r\n        <IconButton>\r\n          <ChatIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          aria-label='more'\r\n          aria-controls='long-menu'\r\n          aria-haspopup='true'\r\n          onClick={handleOpenMenu}\r\n        >\r\n          <MoreVertIcon />\r\n        </IconButton>\r\n        <div>\r\n          <Menu\r\n            id='long-menu'\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={openMenu}\r\n            onClose={handleCloseMenu}\r\n            PaperProps={{\r\n              style: {\r\n                maxHeight: ITEM_HEIGHT * 4.5,\r\n                width: '20ch',\r\n              },\r\n            }}\r\n          >\r\n            <MenuItem\r\n              onClick={() => {\r\n                handleLogout();\r\n                handleCloseMenu();\r\n              }}\r\n              className={classes.menuItem}\r\n            >\r\n              Logout\r\n            </MenuItem>\r\n          </Menu>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export const GET_ROOM_MESSAGES_REQUEST = 'GET_ROOM_MESSAGES_REQUEST';\r\nexport const GET_ROOM_MESSAGES_SUCCESS = 'GET_ROOM_MESSAGES_SUCCESS';\r\nexport const GET_ROOM_MESSAGES_FAIL = 'GET_ROOM_MESSAGES_FAIL';\r\nexport const GET_ROOM_MESSAGES_RESET = 'GET_ROOM_MESSAGES_RESET';\r\n\r\nexport const CREATE_MESSAGE_REQUEST = 'CREATE_MESSAGE_REQUEST';\r\nexport const CREATE_MESSAGE_SUCCESS = 'CREATE_MESSAGE_SUCCESS';\r\nexport const CREATE_MESSAGE_FAIL = 'CREATE_MESSAGE_FAIL';\r\nexport const CREATE_MESSAGE_RESET = 'CREATE_MESSAGE_RESET';\r\n\r\nexport const UPDATE_DISPLAYED_MESSAGES = 'UPDATE_DISPLAYED_MESSAGES';\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '49px',\r\n    width: '100%',\r\n    backgroundColor: '#F6F6F6',\r\n    padding: '10px',\r\n    boxShadow: '0 1px 2px #ccc',\r\n    borderBottom: '1px solid #bbb',\r\n  },\r\n  main: {\r\n    background: 'white',\r\n    width: '100%',\r\n    height: '100%',\r\n    borderRadius: '20px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n    padding: '2px 10px',\r\n  },\r\n  searchBox: {\r\n    width: '100%',\r\n    height: '100%',\r\n    outline: '0',\r\n    border: 'none',\r\n  },\r\n  searchIcon: {\r\n    color: '#919191',\r\n    marginRight: '8px',\r\n    fontSize: '20px',\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport useStyle from './styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst SearchBox = () => {\r\n  const classes = useStyle();\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.main}>\r\n        <SearchIcon className={classes.searchIcon} />\r\n        <input\r\n          placeholder='Search chats...'\r\n          className={classes.searchBox}\r\n          type='text'\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flex: 1,\r\n    overflow: 'auto',\r\n    '&::-webkit-scrollbar': {\r\n      width: '5px',\r\n    },\r\n\r\n    '&::-webkit-scrollbar-thumb': {\r\n      background: '#CCCCCC',\r\n      borderRadius: '10px',\r\n    },\r\n\r\n    '&::-webkit-scrollbar-thumb:hover': {\r\n      background: '#aaa',\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  btnBase: {\r\n    padding: 0,\r\n    margin: 0,\r\n    width: '100%',\r\n    height: '72px',\r\n  },\r\n  root: {\r\n    width: '100%',\r\n    height: '72px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    cursor: 'pointer',\r\n    borderBottom: '1px solid #F5F5F5',\r\n    '&:hover': {\r\n      background: '#F5F5F5',\r\n    },\r\n    overflow: 'hidden',\r\n  },\r\n\r\n  avatarContainer: {\r\n    padding: '0 10px',\r\n  },\r\n  info: {\r\n    flex: 1,\r\n    padding: '15px 10px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  infoTop: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    marginBottom: '7px',\r\n    width: '100%',\r\n  },\r\n  name: {\r\n    flex: '0.60',\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    fontSize: '100%',\r\n    fontWeight: 'bold',\r\n    fontFamily: 'Noto Sans JP, sans-serif',\r\n    textAlign: 'left',\r\n    height: '100%',\r\n  },\r\n\r\n  date: {\r\n    flex: '0.40',\r\n    fontSize: '12px',\r\n    color: '#878787',\r\n    fontWeight: 'bold',\r\n    height: '100%',\r\n  },\r\n  lastMsg: {\r\n    width: '150px',\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    fontFamily: 'Noto Sans JP, sans-serif',\r\n    color: '#626262',\r\n    fontSize: '90%',\r\n    textAlign: 'left',\r\n  },\r\n  newChat: {\r\n    color: '#009688',\r\n    fontWeight: 'bold',\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport useStyle from './styles';\r\nimport { Avatar, ButtonBase } from '@material-ui/core';\r\nimport { setCurrentOpenRoomAction } from '../../../../actions/roomActions';\r\nimport moment from 'moment';\r\nimport { setCurrentChattingUserData } from '../../../../actions/userActions';\r\n\r\nconst ChatGo = ({ room }) => {\r\n  const classes = useStyle();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSetCurrentRoom = () => {\r\n    const userObj = {\r\n      userId: room.userToShowOnRoom._id,\r\n    };\r\n    dispatch(setCurrentChattingUserData(userObj, { type: 'new' }));\r\n    dispatch(setCurrentOpenRoomAction(room._id));\r\n    const messageInput = document.getElementById('new-message-input');\r\n    messageInput && messageInput.focus();\r\n  };\r\n  return (\r\n    <ButtonBase onClick={handleSetCurrentRoom} className={classes.btnBase}>\r\n      <div className={classes.root}>\r\n        <div className={classes.avatarContainer}>\r\n          <Avatar src={room.userToShowOnRoom.photo} />\r\n        </div>\r\n        <div className={classes.info}>\r\n          <div className={classes.infoTop}>\r\n            <div\r\n              className={classes.name}\r\n            >{`${room.userToShowOnRoom.fullName}`}</div>\r\n            <div className={classes.date}>\r\n              {moment(room.lastMessage.createdAt).format('hh:mm A')}\r\n            </div>\r\n          </div>\r\n\r\n          <div className={classes.lastMsg}>\r\n            {room.new ? (\r\n              <span className={classes.newChat}>New</span>\r\n            ) : (\r\n              <span>{room.lastMessage.messageTXT}</span>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ButtonBase>\r\n  );\r\n};\r\n\r\nexport default ChatGo;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useStyle from './styles';\r\nimport ChatGo from './ChatGo/ChatGo';\r\nimport { getMyRoomsAction } from '../../../actions/roomActions';\r\nimport Message from '../../global/Message/Message';\r\n\r\nconst ChatsContainer = () => {\r\n  const classes = useStyle();\r\n  const dispatch = useDispatch();\r\n  const myRooms = useSelector((s) => s.myRooms);\r\n  const {\r\n    loading: loadingMyRooms = true,\r\n    rooms,\r\n    err: errGettingMyRooms,\r\n  } = myRooms;\r\n\r\n  useEffect(() => {\r\n    dispatch(getMyRoomsAction());\r\n  }, [dispatch]);\r\n  return (\r\n    <>\r\n      <div className={classes.root}>\r\n        {loadingMyRooms ? (\r\n          <Message message='Loading Chats ...' />\r\n        ) : errGettingMyRooms ? (\r\n          <Message severity='error' message={errGettingMyRooms} />\r\n        ) : rooms.length < 1 ? (\r\n          <Message message=\"You don't have chats yet 😊\" />\r\n        ) : (\r\n          rooms.map((room) => <ChatGo key={room._id} room={room} />)\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatsContainer;\r\n","import React from 'react';\r\nimport useStyle from './styles';\r\nimport Header from './Header/Header';\r\nimport SearchBox from './SearchBox/SearchBox';\r\nimport ChatsContainer from './ChatsContainer/ChatsContainer';\r\n\r\nconst Sidebar = () => {\r\n  const classes = useStyle();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Header />\r\n      <SearchBox />\r\n      <ChatsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    background: '#F8F9FA',\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    flex: '0.65',\r\n    //? you can control width to 0 by setting flex=0 && width=0\r\n    //? for full screen remove width=0 && set flex=1\r\n    //? on large screens remove width=0 && set flex=0.65\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    height: '100%',\r\n    backgroundColor: '#F8F9FA',\r\n    borderBottom: '10px solid #4ADF83',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n  },\r\n  mainLogo: {\r\n    width: '250px',\r\n    height: '250px',\r\n  },\r\n  mainText: {\r\n    marginTop: '28px',\r\n    fontSize: '32px',\r\n    color: '#525252',\r\n    fontWeight: '300',\r\n    fontFamily: 'Noto Sans JP, sans-serif',\r\n    textAlign: 'center',\r\n    padding: '0 20px',\r\n  },\r\n  subTitle: {\r\n    fontSize: '14px',\r\n    color: '#888989',\r\n    fontFamily: 'Noto Sans JP, sans-serif',\r\n    textAlign: 'center',\r\n    lineHeight: '20px',\r\n    marginTop: '25px',\r\n    padding: '0 50px',\r\n  },\r\n  contactMe: {\r\n    marginTop: '20px',\r\n    fontSize: '20px',\r\n    color: '#525252',\r\n    fontWeight: '300',\r\n    fontFamily: 'Noto Sans JP, sans-serif',\r\n    textAlign: 'center',\r\n    padding: '0 20px',\r\n    '&>a': {\r\n      color: '#009688',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport useStyle from './styles';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NoChat = () => {\r\n  const classes = useStyle();\r\n  return (\r\n    <div className={classes.root}>\r\n      <img\r\n        className={classes.mainLogo}\r\n        src='https://web.whatsapp.com/img/intro-connection-light_c98cc75f2aa905314d74375a975d2cf2.jpg'\r\n        alt='main logo'\r\n      />\r\n      <h1 className={classes.mainText}>Welcome to WhatsApp Clone</h1>\r\n      <div className={classes.subTitle}>\r\n        This is a testing WhatsApp version, not for profiting purposes. <br />\r\n      </div>\r\n      <h1 className={classes.contactMe}>\r\n        Fully programmed by Amr Mohammed Hassan{' '}\r\n        <Link to='/contactAmr'>Contact Me</Link>\r\n      </h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoChat;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    height: '100%',\r\n    flexDirection: 'column',\r\n    backgroundColor: '#E5DDD5',\r\n    position: 'relative',\r\n  },\r\n  bgObjects: {\r\n    backgroundImage: 'url(\"./images/other/chat_default_background.png\")',\r\n    backgroundSize: 'contain',\r\n    backgroundColor: '#E5DDD5',\r\n    backgroundPosition: 'fixed',\r\n\r\n    position: 'absolute',\r\n    zIndex: '0',\r\n    top: '0',\r\n    left: '0',\r\n    width: '100%',\r\n    height: '100%',\r\n    opacity: '0.1',\r\n  },\r\n  acceptChat: {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    padding: '10px 15px',\r\n    '&>button': {\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: '10px 0',\r\n    width: '100%',\r\n    height: '59px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    position: 'relative',\r\n    justifyContent: 'space-between',\r\n    backgroundColor: '#EDEDED',\r\n    boxShadow: '0 1px 2px #ccc',\r\n    zIndex: '10',\r\n  },\r\n\r\n  sidebarIcons: {},\r\n  userInfoBtnBase: {},\r\n  userInfo: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '10px',\r\n  },\r\n  avatarContainer: {\r\n    marginRight: '10px',\r\n  },\r\n  info: {\r\n    textAlign: 'lef',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'center',\r\n  },\r\n  name: {\r\n    width: '100px',\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    fontSize: '100%',\r\n    fontWeight: 'bold',\r\n    fontFamily: 'Noto Sans JP, sans-serif',\r\n    textAlign: 'left',\r\n  },\r\n  status: {\r\n    width: '150px',\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    fontFamily: 'Noto Sans JP, sans-serif',\r\n    color: '#626262',\r\n    fontSize: '90%',\r\n    textAlign: 'left',\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Avatar,\r\n  IconButton,\r\n  ButtonBase,\r\n  Menu,\r\n  MenuItem,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  DialogContentText,\r\n} from '@material-ui/core';\r\nimport Search from '@material-ui/icons/Search';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport useStyle from './styles';\r\nimport moment from 'moment';\r\nimport {\r\n  deleteRoomAction,\r\n  blockRoomAction,\r\n  unblockRoomAction,\r\n} from '../../../../actions/roomActions';\r\nimport { setCurrentChattingUserData } from '../../../../actions/userActions';\r\n\r\nconst Header = ({ currentOpenRoom }) => {\r\n  const classes = useStyle();\r\n  const dispatch = useDispatch();\r\n\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n\r\n  const userData = useSelector((s) => s.currentChattingUserData);\r\n  const { status } = userData;\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  const handleDeleteChat = () => {\r\n    dispatch(deleteRoomAction(currentOpenRoom._id));\r\n  };\r\n\r\n  const handleBlock = () => {\r\n    dispatch(\r\n      blockRoomAction(currentOpenRoom._id, currentOpenRoom.userToShowOnRoom._id)\r\n    );\r\n    handleCloseMenu();\r\n  };\r\n  const handleUnblock = () => {\r\n    dispatch(\r\n      unblockRoomAction(\r\n        currentOpenRoom._id,\r\n        currentOpenRoom.userToShowOnRoom._id\r\n      )\r\n    );\r\n    handleCloseMenu();\r\n  };\r\n\r\n  //? for 3 dots menu\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const openMenu = Boolean(anchorEl);\r\n  const ITEM_HEIGHT = 48;\r\n\r\n  const handleOpenMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseMenu = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  //? end for 3 dots menu\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      setCurrentChattingUserData(\r\n        { userId: userData._id },\r\n        { type: 'new', force: true }\r\n      )\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [dispatch]);\r\n  return (\r\n    <>\r\n      <div className={classes.root}>\r\n        <ButtonBase className={classes.userInfoBtnBase}>\r\n          <div className={classes.userInfo}>\r\n            <div className={classes.avatarContainer}>\r\n              <Avatar src={userData.photo} />\r\n            </div>\r\n            <div className={classes.info}>\r\n              <div className={classes.name}>{userData.fullName}</div>\r\n              <div className={classes.status}>\r\n                {status && status === 'startTyping'\r\n                  ? 'Typing ...'\r\n                  : status === 'online'\r\n                  ? 'Online'\r\n                  : status === 'offline'\r\n                  ? `Last seen at ${moment(userData.lastSeenAt).format(\r\n                      'hh:mm A'\r\n                    )}`\r\n                  : status === 'stopTyping'\r\n                  ? 'Online'\r\n                  : ''}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </ButtonBase>\r\n\r\n        <div className={classes.sidebarIcons}>\r\n          <IconButton>\r\n            <Search />\r\n          </IconButton>\r\n\r\n          <IconButton onClick={handleOpenMenu}>\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n          <div>\r\n            <Menu\r\n              id='long-menu'\r\n              anchorEl={anchorEl}\r\n              keepMounted\r\n              open={openMenu}\r\n              onClose={handleCloseMenu}\r\n              PaperProps={{\r\n                style: {\r\n                  maxHeight: ITEM_HEIGHT * 4.5,\r\n                  width: '20ch',\r\n                },\r\n              }}\r\n            >\r\n              <MenuItem\r\n                onClick={() => {\r\n                  setOpenDialog(true);\r\n                  handleCloseMenu();\r\n                }}\r\n                className={classes.menuItem}\r\n              >\r\n                Delete Chat\r\n              </MenuItem>\r\n              <MenuItem\r\n                onClick={currentOpenRoom.myBlock ? handleUnblock : handleBlock}\r\n                className={classes.menuItem}\r\n              >\r\n                {currentOpenRoom.myBlock ? 'Unblock' : 'Block'}\r\n              </MenuItem>\r\n            </Menu>\r\n          </div>\r\n\r\n          <Dialog\r\n            open={openDialog}\r\n            keepMounted\r\n            onClose={handleCloseDialog}\r\n            aria-labelledby='alert-dialog-slide-title'\r\n            aria-describedby='alert-dialog-slide-description'\r\n          >\r\n            <DialogTitle id='alert-dialog-slide-title'>\r\n              Delete Chat with{' '}\r\n              {currentOpenRoom.userToShowOnRoom.firstName +\r\n                ' ' +\r\n                currentOpenRoom.userToShowOnRoom.lastName}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText id='alert-dialog-slide-description'>\r\n                Are you sure you want to deleted this chat.\r\n                <span\r\n                  style={currentOpenRoom.myBlock ? { display: 'none' } : {}}\r\n                >\r\n                  <Button\r\n                    onClick={() => {\r\n                      handleBlock();\r\n                      handleCloseDialog();\r\n                    }}\r\n                    variant='text'\r\n                    color='secondary'\r\n                  >\r\n                    Block\r\n                  </Button>\r\n                  Instead?\r\n                </span>\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleCloseDialog} color='primary'>\r\n                No\r\n              </Button>\r\n              <Button\r\n                onClick={() => {\r\n                  handleDeleteChat();\r\n                  handleCloseDialog();\r\n                }}\r\n                color='secondary'\r\n              >\r\n                Yes\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flex: 1,\r\n    overflow: 'auto',\r\n    '&::-webkit-scrollbar': {\r\n      width: '5px',\r\n    },\r\n\r\n    '&::-webkit-scrollbar-thumb': {\r\n      background: '#CCCCCC',\r\n      borderRadius: '10px',\r\n    },\r\n\r\n    '&::-webkit-scrollbar-thumb:hover': {\r\n      background: '#aaa',\r\n    },\r\n    position: 'relative',\r\n    zIndex: 10,\r\n    scrollBehavior: 'smooth',\r\n  },\r\n\r\n  earlierMessagesBtn: {\r\n    position: 'absolute',\r\n    right: '10px',\r\n    bottom: '70px',\r\n    zIndex: '1000',\r\n    backgroundColor: 'white',\r\n    borderRadius: '50%',\r\n    boxShadow: '0 1px 1px 0 rgba(0,0,0,.06),0 2px 5px 0 rgba(0,0,0,.2);',\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    padding: '10px 8%',\r\n    position: 'relative',\r\n    '&>div': {\r\n      maxWidth: '90%',\r\n    },\r\n  },\r\n  //? other person message\r\n  otherMessage: {\r\n    background: 'white',\r\n    padding: '6px 7px 8px 9px',\r\n    display: 'inline-block',\r\n    borderRadius: '0 10px 10px 10px ',\r\n    position: 'relative',\r\n    boxShadow: '0 1px .5px rgba(0, 0, 0,.13)',\r\n  },\r\n  otherMessageText: {\r\n    padding: '15px 0',\r\n    overflowWrap: ' break-word',\r\n  },\r\n  otherMessageDate: {\r\n    textAlign: 'right',\r\n    fontSize: '11px',\r\n    color: '#8C8C8C',\r\n  },\r\n  //? my message\r\n  myMessage: {\r\n    background: '#DCF8C6',\r\n    padding: '6px 7px 8px 9px',\r\n    display: 'inline-block',\r\n    borderRadius: '10px 0 10px 10px ',\r\n    position: 'relative',\r\n    boxShadow: '0 1px .5px rgba(0, 0, 0,.13)',\r\n  },\r\n  myMessageText: {\r\n    padding: '15px 0',\r\n    overflowWrap: ' break-word',\r\n  },\r\n  myMessageDate: {\r\n    textAlign: 'right',\r\n    fontSize: '11px',\r\n    color: '#8C8C8C',\r\n  },\r\n  msgStatus: {\r\n    paddingLeft: '5px',\r\n    '& > img': {\r\n      width: '15px',\r\n      height: 'auto',\r\n    },\r\n  },\r\n  //? Admin Message\r\n  adminMessage: {\r\n    display: 'inline-block',\r\n    backgroundColor: '#E3F6FE',\r\n    boxShadow: '0 1px .5px rgba(0, 0,0,.13)',\r\n    padding: '10px 12px',\r\n    borderRadius: '10px',\r\n    textTransform: 'uppercase',\r\n    color: '#1D1E1F',\r\n    fontSize: '12.5px',\r\n    fontFamily: \"'Roboto Condensed', sans-serif \",\r\n    fontWeight: 'bold',\r\n    userSelect: 'none',\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React from 'react';\r\n\r\nconst MessageStatus = ({ status }) => {\r\n  return (\r\n    <span>\r\n      {status === 'delivered' && (\r\n        <svg\r\n          xmlns='http://www.w3.org/2000/svg'\r\n          viewBox='0 0 16 15'\r\n          width='16'\r\n          height='15'\r\n        >\r\n          <path\r\n            fill='currentColor'\r\n            d='M15.01 3.316l-.478-.372a.365.365 0 0 0-.51.063L8.666 9.879a.32.32 0 0 1-.484.033l-.358-.325a.319.319 0 0 0-.484.032l-.378.483a.418.418 0 0 0 .036.541l1.32 1.266c.143.14.361.125.484-.033l6.272-8.048a.366.366 0 0 0-.064-.512zm-4.1 0l-.478-.372a.365.365 0 0 0-.51.063L4.566 9.879a.32.32 0 0 1-.484.033L1.891 7.769a.366.366 0 0 0-.515.006l-.423.433a.364.364 0 0 0 .006.514l3.258 3.185c.143.14.361.125.484-.033l6.272-8.048a.365.365 0 0 0-.063-.51z'\r\n          ></path>\r\n        </svg>\r\n      )}\r\n\r\n      {status === 'sent' && (\r\n        <svg\r\n          xmlns='http://www.w3.org/2000/svg'\r\n          viewBox='0 0 16 15'\r\n          width='16'\r\n          height='15'\r\n        >\r\n          <path\r\n            fill='currentColor'\r\n            d='M10.91 3.316l-.478-.372a.365.365 0 0 0-.51.063L4.566 9.879a.32.32 0 0 1-.484.033L1.891 7.769a.366.366 0 0 0-.515.006l-.423.433a.364.364 0 0 0 .006.514l3.258 3.185c.143.14.361.125.484-.033l6.272-8.048a.365.365 0 0 0-.063-.51z'\r\n          ></path>\r\n        </svg>\r\n      )}\r\n\r\n      {status === 'seen' && (\r\n        <svg\r\n          xmlns='http://www.w3.org/2000/svg'\r\n          viewBox='0 0 16 15'\r\n          width='16'\r\n          height='15'\r\n          color='#4FC3F7'\r\n        >\r\n          <path\r\n            fill='currentColor'\r\n            d='M15.01 3.316l-.478-.372a.365.365 0 0 0-.51.063L8.666 9.879a.32.32 0 0 1-.484.033l-.358-.325a.319.319 0 0 0-.484.032l-.378.483a.418.418 0 0 0 .036.541l1.32 1.266c.143.14.361.125.484-.033l6.272-8.048a.366.366 0 0 0-.064-.512zm-4.1 0l-.478-.372a.365.365 0 0 0-.51.063L4.566 9.879a.32.32 0 0 1-.484.033L1.891 7.769a.366.366 0 0 0-.515.006l-.423.433a.364.364 0 0 0 .006.514l3.258 3.185c.143.14.361.125.484-.033l6.272-8.048a.365.365 0 0 0-.063-.51z'\r\n          ></path>\r\n        </svg>\r\n      )}\r\n\r\n      {status === 'written' && (\r\n        <svg\r\n          xmlns='http://www.w3.org/2000/svg'\r\n          viewBox='0 0 16 15'\r\n          width='16'\r\n          height='15'\r\n        >\r\n          <path\r\n            fill='currentColor'\r\n            d='M9.75 7.713H8.244V5.359a.5.5 0 0 0-.5-.5H7.65a.5.5 0 0 0-.5.5v2.947a.5.5 0 0 0 .5.5h.094l.003-.001.003.002h2a.5.5 0 0 0 .5-.5v-.094a.5.5 0 0 0-.5-.5zm0-5.263h-3.5c-1.82 0-3.3 1.48-3.3 3.3v3.5c0 1.82 1.48 3.3 3.3 3.3h3.5c1.82 0 3.3-1.48 3.3-3.3v-3.5c0-1.82-1.48-3.3-3.3-3.3zm2 6.8a2 2 0 0 1-2 2h-3.5a2 2 0 0 1-2-2v-3.5a2 2 0 0 1 2-2h3.5a2 2 0 0 1 2 2v3.5z'\r\n          ></path>\r\n        </svg>\r\n      )}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default MessageStatus;\r\n","import React, { useState, useEffect } from 'react';\r\nimport useStyle from './styles';\r\nimport moment from 'moment';\r\nimport MessageStatus from './MessageStatus/MessageStatus';\r\n\r\nconst Message = ({ message: msg, sender }) => {\r\n  const classes = useStyle();\r\n  const [messageDate, setMessageDate] = useState('');\r\n  useEffect(() => {\r\n    setMessageDate(msg.createdAt);\r\n  }, [msg.createdAt]);\r\n\r\n  return (\r\n    <div\r\n      className={classes.root}\r\n      style={\r\n        sender === 'other'\r\n          ? { textAlign: 'left' }\r\n          : sender === 'admin'\r\n          ? { textAlign: 'center' }\r\n          : { textAlign: 'right' }\r\n      }\r\n    >\r\n      {/* other person message */}\r\n      {sender === 'other' && (\r\n        <div className={classes.otherMessage + ' otherMessage'}>\r\n          <div className={classes.otherMessageText}>{msg.messageTXT}</div>\r\n          <div className={classes.otherMessageDate}>\r\n            {moment(messageDate).format('hh:mm A')}\r\n          </div>\r\n        </div>\r\n      )}\r\n      {/* my message */}\r\n      {sender === 'me' && (\r\n        <div className={classes.myMessage + ' myMessage'}>\r\n          <div className={classes.myMessageText}>{msg.messageTXT}</div>\r\n          <div className={classes.myMessageDate}>\r\n            {moment(messageDate).format('hh:mm A')}\r\n            <span className={classes.msgStatus}>\r\n              <MessageStatus status={msg.status} />\r\n            </span>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {/* admin messages */}\r\n      {sender === 'admin' && (\r\n        <div className={classes.adminMessage + ' adminMessage'}>\r\n          <div className={classes.adminMessageText}>{msg.messageTXT}</div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React, { useEffect } from 'react';\r\nimport useStyle from './styles';\r\nimport Message from './Message/Message';\r\nimport { IconButton } from '@material-ui/core';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\n\r\nconst MessagesContainer = ({ displayedMessages, user }) => {\r\n  const classes = useStyle();\r\n\r\n  const scrollToEnd = () => {\r\n    document\r\n      .getElementById('messages-container')\r\n      .scrollTo(0, document.getElementById('messages-container').scrollHeight);\r\n  };\r\n\r\n  //? for scrolling to end of chat with each render\r\n\r\n  useEffect(() => {\r\n    const container = document.getElementById('messages-container');\r\n    //? scrollTop = 0  means it is opening for the first time\r\n    //? and check if the container.scrollHeight -\r\n    //? (container.scrollTop + container.clientHeight)\r\n    //? is greater than 300 because if the other user send a message when this user scrolling to top\r\n    //? we don't want to scroll him to bottom\r\n    if (\r\n      container.scrollTop === 0 ||\r\n      container.scrollHeight - (container.scrollTop + container.clientHeight) <\r\n        300\r\n    ) {\r\n      scrollToEnd();\r\n    }\r\n  }, [displayedMessages]);\r\n\r\n  //? for adding scroll event\r\n\r\n  useEffect(() => {\r\n    const container = document.getElementById('messages-container');\r\n    const downArrow = document.getElementById('down-arrow');\r\n    container.onscroll = () => {\r\n      if (\r\n        container.scrollHeight -\r\n          (container.scrollTop + container.clientHeight) <\r\n        300\r\n      ) {\r\n        downArrow.style.display = 'none';\r\n      } else {\r\n        downArrow.style.display = 'inline-flex';\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div id='messages-container' className={classes.root}>\r\n        {displayedMessages.map((msg) => (\r\n          <Message\r\n            key={Math.random()}\r\n            message={msg}\r\n            sender={\r\n              msg.sender === user._id || !msg.sender\r\n                ? 'me'\r\n                : msg.sender === 'admin'\r\n                ? 'admin'\r\n                : 'other'\r\n            }\r\n          />\r\n        ))}\r\n      </div>\r\n      <div className={classes.earlierMessagesBtn}>\r\n        <IconButton\r\n          onClick={scrollToEnd}\r\n          style={{\r\n            width: '40px',\r\n            height: '40px',\r\n            display: 'none',\r\n          }}\r\n          id='down-arrow'\r\n        >\r\n          <KeyboardArrowDownIcon style={{ fontSize: '25px' }} />\r\n        </IconButton>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MessagesContainer;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    minHeight: '62px',\r\n    backgroundColor: '#F0F0F0',\r\n    position: 'relative',\r\n    zIndex: '10',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  msgBox: {\r\n    flex: 1,\r\n    height: '100%',\r\n    padding: '10px 20px',\r\n    paddingRight: '0',\r\n  },\r\n  msgInput: {\r\n    width: '100%',\r\n    height: '100%',\r\n    outline: 'none',\r\n    border: 'none',\r\n    padding: '10px 15px',\r\n    borderRadius: '20px',\r\n    fontSize: '15px',\r\n    color: '#4A4A4A',\r\n    fontFamily: \"'Roboto', sans-serif\",\r\n    fontWeight: 'bold',\r\n    maxHeight: '200px',\r\n    resize: 'none',\r\n    overflow: 'hidden',\r\n    userSelect: 'none',\r\n  },\r\n  send: {\r\n    color: '#9B9B9B',\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import * as c from '../constants/messagesConstants';\r\nimport axios from 'axios';\r\nimport * as urls from '../constants/urls';\r\n\r\nexport const getRoomsMessagesAction = (room) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: c.GET_ROOM_MESSAGES_REQUEST,\r\n    });\r\n\r\n    const token = `Bearer ${getState().loginUser.user.token}`;\r\n    const config = {\r\n      headers: {\r\n        authorization: token,\r\n      },\r\n    };\r\n\r\n    const {\r\n      data: { data },\r\n    } = await axios.get(`${urls.messagesUrl}/getRoomMessages/${room}`, config);\r\n    dispatch({\r\n      type: c.GET_ROOM_MESSAGES_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.GET_ROOM_MESSAGES_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createMessageAction = (messageObj) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: c.CREATE_MESSAGE_REQUEST,\r\n    });\r\n\r\n    const token = `Bearer ${getState().loginUser.user.token}`;\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: token,\r\n      },\r\n    };\r\n\r\n    const {\r\n      data: { data },\r\n    } = await axios.post(\r\n      `${urls.messagesUrl}/createMessage`,\r\n      messageObj,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: c.CREATE_MESSAGE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.CREATE_MESSAGE_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const markMessageAsSeen = (message) => (dispatch, getState) => {\r\n  const currentChattingUser = getState().currentChattingUserData;\r\n  const socket = getState().socket;\r\n  const currentOpenRoomId = getState().currentOpenRoom.currentOpenRoomId;\r\n  const myId = getState().loginUser.user._id;\r\n  const senderId = message.sender; //? won't be available until it comes from the server\r\n  const messageRoomId = message.room;\r\n  const msgServerId = message._id;\r\n  const addMyMessage = !senderId && !msgServerId;\r\n  const updateMyMessage = senderId === myId;\r\n  const addOtherMessage = senderId !== myId;\r\n  const { status } = currentChattingUser;\r\n\r\n  // console.log({\r\n  //   currentChattingUser,\r\n  //   currentOpenRoomId,\r\n  //   myId,\r\n  //   senderId,\r\n  //   messageRoomId,\r\n  //   addMyMessage,\r\n  //   updateMyMessage,\r\n  //   addOtherMessage,\r\n  // });\r\n\r\n  if (\r\n    addOtherMessage &&\r\n    messageRoomId === currentOpenRoomId &&\r\n    status.match(/online|startTyping|stopTyping/)\r\n  ) {\r\n    console.log({ senderOnlineId: currentChattingUser.onlineId });\r\n    socket.emit('user-read-message', {\r\n      message,\r\n      senderOnlineId: currentChattingUser.onlineId,\r\n    });\r\n  }\r\n\r\n  // //! if the current open room and the scrolling difference is less than 300 then emit an event that message is read and i am the receiver of this message\r\n  // //! nd the sender is still online\r\n  // //? add the scrolling here after preventing messages container from scrolling down if the user is reading up messages\r\n  // console.log({\r\n  //   room: message.room,\r\n  //   currentRoom: currentOpenRoomId,\r\n  //   addOtherMessage,\r\n  //   status: currentChattingUser.status,\r\n  // });\r\n  // if (\r\n  //   message.room === currentOpenRoomId &&\r\n  //   addOtherMessage &&\r\n  //   currentChattingUser.status === ('startTyping' || 'stopTyping' || 'online')\r\n  // ) {\r\n  //   console.log('message', message);\r\n  //   socket.emit('user-read-message', {\r\n  //     ...message,\r\n  //     senderOnlineId: currentChattingUser.onlineId,\r\n  //   });\r\n  // }\r\n};\r\n\r\nexport const updateRoomMessagesAction = (message) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const currentOpenRoomId = getState().currentOpenRoom.currentOpenRoomId;\r\n  const myId = getState().loginUser.user._id;\r\n  const senderId = message.sender; //? won't be available until it comes from the server\r\n  const messageRoomId = message.room;\r\n  const msgServerId = message._id;\r\n  const addMyMessage = !senderId && !msgServerId;\r\n  const updateMyMessage = senderId === myId;\r\n  const addOtherMessage = senderId !== myId;\r\n\r\n  //? if the sender isn't available and message._id isn't available\r\n  //? then it's my message and it is coming from chatController not from the server\r\n  //? else if the sender is available and it is me\r\n  //? then i will update the current message that have uuid with the message coming from the server\r\n  //? if the sender isn't me then i will just add it to the displayed messages\r\n\r\n  // console.log('message', message);\r\n\r\n  if (currentOpenRoomId === messageRoomId) {\r\n    dispatch({\r\n      type: c.UPDATE_DISPLAYED_MESSAGES,\r\n      payload: { message, addMyMessage, updateMyMessage, addOtherMessage },\r\n    });\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { Send } from '@material-ui/icons';\r\nimport useStyle from './styles';\r\nimport {\r\n  createMessageAction,\r\n  updateRoomMessagesAction,\r\n} from '../../../../actions/messageActions';\r\nimport { v4 as uuidV4 } from 'uuid';\r\n\r\nconst ChatController = ({ currentOpenRoom, user }) => {\r\n  const classes = useStyle();\r\n  const dispatch = useDispatch();\r\n\r\n  const [message, setMessage] = useState('');\r\n  const [typing, setTyping] = useState(false);\r\n\r\n  const socket = useSelector((s) => s.socket);\r\n\r\n  const userData = useSelector((s) => s.currentChattingUserData);\r\n  const { status } = userData;\r\n\r\n  const handleSubmitMessage = (e) => {\r\n    e.preventDefault();\r\n    if (message) {\r\n      const messageObj = {\r\n        room: currentOpenRoom._id,\r\n        receiver: currentOpenRoom.userToShowOnRoom._id,\r\n        messageTXT: message,\r\n        clientId: uuidV4(),\r\n        status: 'written',\r\n      };\r\n\r\n      dispatch(updateRoomMessagesAction(messageObj));\r\n      dispatch(createMessageAction(messageObj));\r\n      setTyping(false);\r\n      setMessage('');\r\n    }\r\n  };\r\n\r\n  const handleTypingMessage = (e) => {\r\n    setMessage(e.target.value);\r\n  };\r\n\r\n  //? for setting typing variable when typing\r\n  useEffect(() => {\r\n    if (message.trim()) {\r\n      setTyping(true);\r\n    } else {\r\n      setTyping(false);\r\n    }\r\n  }, [message]);\r\n  //! search how to get your socket id then\r\n  //! send it to the user with emitting\r\n  //? for emitting typing event\r\n  useEffect(() => {\r\n    if (\r\n      (status === 'online' ||\r\n        status === 'startTyping' ||\r\n        status === 'stopTyping') &&\r\n      socket.id\r\n    ) {\r\n      if (typing) {\r\n        socket.emit('user-currently-typing', {\r\n          typingUserId: user._id,\r\n          onlineUserId: userData.onlineId,\r\n          typingUserOnlineId: socket.id,\r\n        });\r\n      } else {\r\n        socket.emit('user-stopped-typing', {\r\n          typingUserId: user._id,\r\n          onlineUserId: userData.onlineId,\r\n          typingUserOnlineId: socket.id,\r\n        });\r\n      }\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [currentOpenRoom, socket, status, typing, user, userData.onlineId]);\r\n  //? for clearing message when changing currentOpenUserRoom\r\n  useEffect(() => {\r\n    setMessage('');\r\n    if (socket.id) {\r\n      socket.emit('user-stopped-typing', {\r\n        typingUserId: user._id,\r\n        onlineUserId: userData.onlineId,\r\n        typingUserOnlineId: socket.id,\r\n      });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [userData._id]);\r\n\r\n  return (\r\n    <form className={classes.root} onSubmit={handleSubmitMessage}>\r\n      <div className={classes.msgBox}>\r\n        <input\r\n          id='new-message-input'\r\n          autoFocus={true}\r\n          placeholder='Type a message'\r\n          type='text'\r\n          className={classes.msgInput}\r\n          rows='1'\r\n          value={message}\r\n          onChange={handleTypingMessage}\r\n        ></input>\r\n      </div>\r\n      <div className={classes.send}>\r\n        <IconButton disabled={!message && true} type='submit'>\r\n          <Send style={{ color: '#9B9B9B' }} />\r\n        </IconButton>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ChatController;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flex: 1,\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport Message from '../Message/Message';\r\nimport useStyle from './styles';\r\n\r\nconst MessageWrapper = ({ message, severity, children }) => {\r\n  const classes = useStyle();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Message message={message} severity={severity} />\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageWrapper;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    height: '100px',\r\n    position: 'relative',\r\n    zIndex: '10',\r\n    textAlign: 'center',\r\n    '&>button': {\r\n      marginTop: '10px',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport useStyle from './styles';\r\nimport Message from '../../../global/Message/Message';\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst AcceptChat = ({ message, onAccept, onBlock }) => {\r\n  const classes = useStyle();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Message message={message} />\r\n      <Button\r\n        style={{ marginRight: '10px' }}\r\n        variant='outlined'\r\n        margin='normal'\r\n        onClick={onAccept}\r\n      >\r\n        Accept\r\n      </Button>\r\n      <Button variant='outlined' margin='normal' onClick={onBlock}>\r\n        Block\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AcceptChat;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    position: 'relative',\r\n    zIndex: '10',\r\n    textAlign: 'center',\r\n    '&>button': {\r\n      marginTop: '10px',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport useStyle from './styles';\r\nimport Message from '../../../global/Message/Message';\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst Block = ({ severity, message, onUnBlock }) => {\r\n  const classes = useStyle();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Message severity={severity} message={message} />\r\n      {onUnBlock && (\r\n        <Button\r\n          style={{ marginRight: '10px' }}\r\n          variant='outlined'\r\n          margin='normal'\r\n          onClick={onUnBlock}\r\n        >\r\n          UnBlock\r\n        </Button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Block;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useStyle from './styles';\r\nimport Header from './Header/Header';\r\nimport MessagesContainer from './MessagesContainer/MessagesContainer';\r\nimport ChatController from './ChatController/ChatController';\r\nimport { getRoomsMessagesAction } from '../../../actions/messageActions';\r\nimport {\r\n  acceptRoomAction,\r\n  blockRoomAction,\r\n  unblockRoomAction,\r\n} from '../../../actions/roomActions';\r\nimport MessageWrapper from '../../global/MessageWrapper/MessageWrapper';\r\nimport AcceptChat from './AcceptChat/AcceptChat';\r\nimport Block from './Block/Block';\r\n\r\nconst ChatMsg = ({ currentOpenRoom, currentOpenRoomId }) => {\r\n  const classes = useStyle();\r\n  const dispatch = useDispatch();\r\n\r\n  const roomMessages = useSelector((s) => s.roomMessages);\r\n  const {\r\n    loading: loadingMessages = true,\r\n    messages: displayedMessages,\r\n    err: errGettingMessages,\r\n  } = roomMessages;\r\n\r\n  const { user } = useSelector((s) => s.loginUser);\r\n\r\n  useEffect(() => {\r\n    dispatch(getRoomsMessagesAction(currentOpenRoomId));\r\n  }, [currentOpenRoomId, dispatch]);\r\n\r\n  const handleAcceptChat = () => {\r\n    dispatch(acceptRoomAction(currentOpenRoomId));\r\n  };\r\n  const handleBlockChat = () => {\r\n    dispatch(\r\n      blockRoomAction(currentOpenRoomId, currentOpenRoom.userToShowOnRoom._id)\r\n    );\r\n  };\r\n  const handleUnBlockChat = () => {\r\n    dispatch(\r\n      unblockRoomAction(currentOpenRoomId, currentOpenRoom.userToShowOnRoom._id)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {currentOpenRoomId && <Header currentOpenRoom={currentOpenRoom} />}\r\n      {/* //? for showing accepting or blocking messages */}\r\n      {currentOpenRoom.myBlock ||\r\n      currentOpenRoom.otherUserBlock ? null : currentOpenRoomId &&\r\n        !currentOpenRoom.accepted ? (\r\n        currentOpenRoom.otherUser === user._id ? (\r\n          <AcceptChat\r\n            onAccept={handleAcceptChat}\r\n            onBlock={handleBlockChat}\r\n            message={`${currentOpenRoom.userToShowOnRoom.firstName} wants to chat you`}\r\n          ></AcceptChat>\r\n        ) : (\r\n          <MessageWrapper\r\n            message={`Wait until ${currentOpenRoom.userToShowOnRoom.firstName} accept your request`}\r\n          />\r\n        )\r\n      ) : null}\r\n      {/* //? for showing you are blocked or you blocked */}\r\n      {currentOpenRoom.myBlock ? (\r\n        <Block\r\n          message={`You blocked ${currentOpenRoom.userToShowOnRoom.fullName}`}\r\n          onUnBlock={handleUnBlockChat}\r\n        ></Block>\r\n      ) : currentOpenRoom.otherUserBlock ? (\r\n        <Block\r\n          message={`You are blocked from ${currentOpenRoom.userToShowOnRoom.fullName}`}\r\n          severity='error'\r\n        ></Block>\r\n      ) : null}\r\n\r\n      {/* //? for showing messages if it is accepted even if it is blocked messages will appear */}\r\n\r\n      {!currentOpenRoom.accepted ? null : loadingMessages ? (\r\n        <MessageWrapper message='Getting messages ...' />\r\n      ) : errGettingMessages ? (\r\n        <MessageWrapper severity='error' message={errGettingMessages} />\r\n      ) : (\r\n        <>\r\n          <MessagesContainer\r\n            user={user}\r\n            displayedMessages={displayedMessages}\r\n          />\r\n        </>\r\n      )}\r\n      {currentOpenRoomId &&\r\n        currentOpenRoom.accepted &&\r\n        !currentOpenRoom.myBlock &&\r\n        !currentOpenRoom.otherUserBlock && (\r\n          <ChatController currentOpenRoom={currentOpenRoom} user={user} />\r\n        )}\r\n\r\n      <div className={classes.bgObjects}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatMsg;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport useStyle from './styles';\r\nimport NoChat from './NoChat/NoChat';\r\nimport ChatMsg from './ChatMsg/ChatMsg';\r\nimport { setCurrentOpenRoomAction } from '../../actions/roomActions';\r\n\r\nconst ChatBox = () => {\r\n  const dispatch = useDispatch();\r\n  const currentOpenRoom = useSelector((s) => s.currentOpenRoom);\r\n  const {\r\n    currentOpenRoomId,\r\n    currentOpenRoom: currentOpenRoomData = {},\r\n  } = currentOpenRoom;\r\n  //! here add\r\n\r\n  useEffect(() => {\r\n    if (currentOpenRoomId && !currentOpenRoomData._id) {\r\n      dispatch(setCurrentOpenRoomAction(currentOpenRoomId));\r\n    }\r\n  }, [currentOpenRoomData, currentOpenRoomId, dispatch]);\r\n\r\n  const classes = useStyle();\r\n  return (\r\n    <div className={classes.root}>\r\n      {currentOpenRoomId && currentOpenRoomData._id ? (\r\n        <ChatMsg\r\n          currentOpenRoomId={currentOpenRoomId}\r\n          currentOpenRoom={currentOpenRoomData}\r\n        />\r\n      ) : (\r\n        <NoChat />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBox;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport useStyles from './styles';\r\nimport Sidebar from '../../components/Sidebar/Sidebar';\r\nimport ChatBox from '../../components/ChatBox/ChatBox';\r\nimport { createSocketAction } from '../../actions/socketActions';\r\nimport {\r\n  updateRoomMessagesAction,\r\n  markMessageAsSeen,\r\n} from '../../actions/messageActions';\r\nimport {\r\n  updateRoomAction,\r\n  updateRoomWithIdAction,\r\n  updateCurrentOpenRoomAction,\r\n  updateRoomAfterOneDeletedAction,\r\n} from '../../actions/roomActions';\r\nimport { setCurrentChattingUserData } from '../../actions/userActions';\r\nimport { CREATE_ROOM_RESET } from '../../constants/roomConstants';\r\n\r\nconst App = ({ history }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const loginUser = useSelector((s) => s.loginUser);\r\n  const { user } = loginUser;\r\n\r\n  const socket = useSelector((s) => s.socket);\r\n\r\n  //? check if user isn't logged in\r\n  useEffect(() => {\r\n    if (!user || !user.token) {\r\n      history.replace('/login');\r\n    } else {\r\n      dispatch(createSocketAction());\r\n    }\r\n  }, [dispatch, history, user]);\r\n\r\n  //? for displaying room messages if there is a currentOpenRoom\r\n  useEffect(() => {\r\n    if (socket.on) {\r\n      socket.on('server--user-send-message', (data) => {\r\n        //! add get room with id =>DONE\r\n        //! then add action to get room with id and its constant will be update room and put up => DONE\r\n        //! then the payload will be the fetched room by action =>DONE\r\n        //! and then update it => DONE\r\n        //! IMPORTANT this trick is so important to use setMessages(messages=>[])\r\n        //! dispatching updateMessages\r\n        //? this for updating the rooms on the room container\r\n        dispatch(updateRoomWithIdAction(data.room));\r\n\r\n        //! add updateDisplayedMessagesAction\r\n        //! the action will check if there is currentOpenRoom and message room is the currentOpenRoom\r\n        //! then the constant will be UPDATE_DISPLAYED_MESSAGES\r\n        //! the reducer will push the new message to the displayed messages\r\n        dispatch(updateRoomMessagesAction(data));\r\n        dispatch(markMessageAsSeen(data));\r\n      });\r\n\r\n      socket.on('server--user-added-new-room', (room) => {\r\n        dispatch(updateRoomAction(room));\r\n        dispatch({\r\n          type: CREATE_ROOM_RESET,\r\n        });\r\n      });\r\n\r\n      socket.on('server--user-accept-new-room', (room) => {\r\n        dispatch(updateRoomAction(room));\r\n        dispatch(updateCurrentOpenRoomAction(room._id));\r\n      });\r\n\r\n      socket.on('server--user-delete-chat', (roomId) => {\r\n        dispatch(updateRoomAfterOneDeletedAction(roomId));\r\n      });\r\n\r\n      socket.on('server--user-block-room', (block) => {\r\n        dispatch(updateCurrentOpenRoomAction(block.room));\r\n      });\r\n\r\n      socket.on('server--user-unblock-room', (block) => {\r\n        dispatch(updateCurrentOpenRoomAction(block.room));\r\n      });\r\n      socket.on('server--user-online', ({ userId, onlineId }) => {\r\n        dispatch(\r\n          setCurrentChattingUserData({ status: 'online', userId, onlineId })\r\n        );\r\n      });\r\n      socket.on('server--user-offline', ({ userId, lastSeenAt }) => {\r\n        dispatch(\r\n          setCurrentChattingUserData({\r\n            status: 'offline',\r\n            userId,\r\n            lastSeenAt,\r\n          })\r\n        );\r\n      });\r\n      socket.on(\r\n        'server--user-currently-typing',\r\n        ({ userId, typingUserOnlineId }) => {\r\n          dispatch(\r\n            setCurrentChattingUserData({\r\n              status: 'startTyping',\r\n              userId,\r\n              typing: true,\r\n              typingUserOnlineId,\r\n            })\r\n          );\r\n        }\r\n      );\r\n\r\n      socket.on(\r\n        'server--user-stopped-typing',\r\n        ({ userId, typingUserOnlineId }) => {\r\n          dispatch(\r\n            setCurrentChattingUserData({\r\n              status: 'stopTyping',\r\n              userId,\r\n              typing: false,\r\n              typingUserOnlineId,\r\n            })\r\n          );\r\n        }\r\n      );\r\n\r\n      // socket.on('server--message-delivered', (message) => {\r\n      //   //? dispatch(updateUserStatus({ status: 'online', userId, onlineId }));\r\n      //   console.log('Message delivered', message);\r\n      //   dispatch(updateRoomMessagesAction(message));\r\n\r\n      // });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [dispatch, socket]);\r\n\r\n  return user && user.token ? (\r\n    <div className={classes.root}>\r\n      <Sidebar />\r\n      <ChatBox />\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default App;\r\n","import * as c from '../constants/socketConstants';\r\nimport * as urls from '../constants/urls';\r\nimport socketIOClient from 'socket.io-client';\r\n\r\nexport const createSocketAction = () => (dispatch, getState) => {\r\n  const loginUser = getState().loginUser.user;\r\n  const socket = socketIOClient.connect(urls.host, {\r\n    query: { id: loginUser._id },\r\n  });\r\n\r\n  dispatch({\r\n    type: c.CREATE_SOCKET,\r\n    payload: socket,\r\n  });\r\n};\r\n","export const CREATE_SOCKET = 'CREATE_SOCKET';\r\nexport const DISCONNECT_SOCKET = 'DISCONNECT_SOCKET';\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction='up' ref={ref} {...props} />;\r\n});\r\n\r\nexport default function FullScreenDialog() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant='outlined' color='primary' onClick={handleClickOpen}>\r\n        Open full-screen dialog\r\n      </Button>\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge='start'\r\n              color='inherit'\r\n              onClick={handleClose}\r\n              aria-label='close'\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant='h6' className={classes.title}>\r\n              Sound\r\n            </Typography>\r\n            <Button autoFocus color='inherit' onClick={handleClose}>\r\n              save\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <List>\r\n          <ListItem button>\r\n            <ListItemText primary='Phone ringtone' secondary='Titania' />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem button>\r\n            <ListItemText\r\n              primary='Default notification ringtone'\r\n              secondary='Tethys'\r\n            />\r\n          </ListItem>\r\n        </List>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport LogIn from '../views/LogIn/LogIn';\r\nimport SignUp from '../views/SignUp/SignUp';\r\nimport ForgotPassword from '../views/ForgotPassword/ForgotPassword';\r\nimport ResetPassword from '../views/ResetPassword/ResetPassword';\r\nimport Home from '../views/Home/Home';\r\nimport Test from '../Tests/Test';\r\n\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Route path='/login' component={LogIn} />\r\n      <Route path='/signup' component={SignUp} />\r\n      <Route path='/home' component={Home} />\r\n      <Route path='/forgotPassword' component={ForgotPassword} />\r\n      <Route path='/resetPassword/:token' component={ResetPassword} />\r\n      <Route path='/test' component={Test} />\r\n      <Route path='/' component={Home} exact />\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import * as c from '../constants/messagesConstants';\r\n\r\n//! improvement => when user visit room and its content added to hist redux\r\n//! try not remove it when opening another room\r\n//! for better performance\r\n\r\nexport const getRoomMessagesReducer = (state = { messages: [] }, action) => {\r\n  switch (action.type) {\r\n    case c.GET_ROOM_MESSAGES_REQUEST:\r\n      return { loading: true };\r\n    case c.GET_ROOM_MESSAGES_SUCCESS:\r\n      return { loading: false, messages: action.payload };\r\n    case c.GET_ROOM_MESSAGES_FAIL:\r\n      return { loading: false, err: action.payload };\r\n    case c.UPDATE_DISPLAYED_MESSAGES:\r\n      try {\r\n        const {\r\n          message,\r\n          addMyMessage,\r\n          updateMyMessage,\r\n          addOtherMessage,\r\n        } = action.payload;\r\n        let messages = [...state.messages];\r\n\r\n        if (addMyMessage) {\r\n          messages.push(message);\r\n        } else if (updateMyMessage) {\r\n          const newModifiedMessages = updateAnArray(messages, message);\r\n          messages = newModifiedMessages;\r\n        } else if (addOtherMessage) {\r\n          messages.push(message);\r\n        } else {\r\n          alert('Non expected state coming from message reducer check console');\r\n          console.log(action.payload, 'check my resource');\r\n        }\r\n        return { ...state, messages };\r\n      } catch (err) {\r\n        return state;\r\n      }\r\n\r\n    case c.GET_ROOM_MESSAGES_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const createMessageReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case c.CREATE_MESSAGE_REQUEST:\r\n      return { loading: true };\r\n    case c.CREATE_MESSAGE_SUCCESS:\r\n      return { loading: false, message: action.payload, success: true };\r\n    case c.CREATE_MESSAGE_FAIL:\r\n      return { loading: false, err: action.payload };\r\n    case c.CREATE_MESSAGE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst updateAnArray = (array = [], newObj = {}, identifier = 'clientId') => {\r\n  const oldObj = array.find((item) => item[identifier] === newObj[identifier]);\r\n\r\n  const oldObjIndex = array.indexOf(oldObj);\r\n  // const firstPartArray = array.splice(0, oldObjIndex);\r\n  // const lastPartArray = array.splice(oldObjIndex + 1);\r\n  // const finalResultArray = [...firstPartArray, newObj, ...lastPartArray];\r\n  array.splice(oldObjIndex, 1, newObj);\r\n\r\n  return array;\r\n};\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport {\r\n  loginUserReducer,\r\n  userForgotPasswordReducer,\r\n  userResetPasswordReducer,\r\n  setCurrentChattingUserDataReducer,\r\n  // signupUserReducer\r\n} from './reducers/userReducers';\r\nimport {\r\n  getMyRoomsReducer,\r\n  createRoomReducer,\r\n  currentOpenRoomReducer,\r\n} from './reducers/roomReducers';\r\n\r\nimport {\r\n  getRoomMessagesReducer,\r\n  createMessageReducer,\r\n} from './reducers/messageReducers';\r\nimport { createSocketReducer } from './reducers/socketReducers';\r\n\r\nconst reducer = combineReducers({\r\n  loginUser: loginUserReducer,\r\n  myRooms: getMyRoomsReducer,\r\n  createRoom: createRoomReducer,\r\n  currentOpenRoom: currentOpenRoomReducer,\r\n  roomMessages: getRoomMessagesReducer,\r\n  createMessage: createMessageReducer,\r\n  socket: createSocketReducer,\r\n  userForgotPassword: userForgotPasswordReducer,\r\n  userResetPassword: userResetPasswordReducer,\r\n  currentChattingUserData: setCurrentChattingUserDataReducer,\r\n});\r\n\r\nconst loggedInUser = localStorage.getItem('loggedInUser')\r\n  ? JSON.parse(localStorage.getItem('loggedInUser'))\r\n  : {};\r\nconst currentChattingUserData = localStorage.getItem('currentChattingUserData')\r\n  ? JSON.parse(localStorage.getItem('currentChattingUserData'))\r\n  : {};\r\n\r\nconst currentRoomId = localStorage.getItem('currentOpenRoomId') || '';\r\n\r\nlet initialState = {\r\n  loginUser: { user: loggedInUser },\r\n  currentOpenRoom: {\r\n    currentOpenRoomId: currentRoomId,\r\n    currentOpenRoomData: {},\r\n  },\r\n  currentChattingUserData: currentChattingUserData,\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import * as c from '../constants/userConstants';\r\n\r\nexport const loginUserReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case c.LOGIN_REQUEST:\r\n      return { loading: true };\r\n    case c.LOGIN_SUCCESS:\r\n      return { loading: false, user: action.payload, success: true };\r\n    case c.LOGIN_FAIL:\r\n      return { loading: false, err: action.payload };\r\n    case c.SIGNUP_REQUEST:\r\n      return { loading: true };\r\n    case c.SIGNUP_SUCCESS:\r\n      return { loading: false, user: action.payload, success: true };\r\n    case c.SIGNUP_FAIL:\r\n      return { loading: false, err: action.payload };\r\n    case c.LOGOUT_USER:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setCurrentChattingUserDataReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case c.CURRENT_USER_DATA:\r\n      return { ...state, ...action.payload };\r\n    case c.CURRENT_USER_DATA_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userForgotPasswordReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case c.FORGOT_PASSWORD_REQUEST:\r\n      return { loading: true };\r\n    case c.FORGOT_PASSWORD_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case c.FORGOT_PASSWORD_FAIL:\r\n      return { loading: false, err: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const userResetPasswordReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case c.RESET_PASSWORD_REQUEST:\r\n      return { loading: true };\r\n    case c.RESET_PASSWORD_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case c.RESET_PASSWORD_FAIL:\r\n      return { loading: false, err: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as c from '../constants/roomConstants';\r\n\r\nexport const getMyRoomsReducer = (state = { rooms: [] }, action) => {\r\n  switch (action.type) {\r\n    case c.GET_MY_ROOMS_REQUEST:\r\n      return { loading: true };\r\n    case c.GET_MY_ROOMS_SUCCESS:\r\n      return { loading: false, rooms: action.payload };\r\n    case c.GET_MY_ROOMS_FAIL:\r\n      return { loading: false, err: action.payload };\r\n    case c.UPDATE_ROOM_PUT_UP:\r\n      let roomId = action.payload._id;\r\n      let rooms = [...state.rooms].filter((room) => room._id !== roomId);\r\n      rooms.unshift(action.payload);\r\n      return { ...state, rooms };\r\n    case c.UPDATE_ROOMS_AFTER_DELETING:\r\n      const roomIdToDelete = action.payload;\r\n\r\n      const roomsAfterDeleting = [...state.rooms].filter(\r\n        (room) => room._id !== roomIdToDelete\r\n      );\r\n      return { ...state, rooms: roomsAfterDeleting };\r\n    case c.GET_MY_ROOMS_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const createRoomReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case c.CREATE_ROOM_REQUEST:\r\n      return { loading: true };\r\n    case c.CREATE_ROOM_SUCCESS:\r\n      return { loading: false, room: action.payload, success: true };\r\n    case c.CREATE_ROOM_FAIL:\r\n      return { loading: false, err: action.payload };\r\n    case c.CREATE_ROOM_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const acceptRoomReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case c.HANDLE_ACCEPT_ROOM_REQUEST:\r\n      return { loading: true };\r\n    case c.HANDLE_ACCEPT_ROOM_SUCCESS:\r\n      return { loading: false, room: action.payload, success: true };\r\n    case c.HANDLE_ACCEPT_ROOM_FAIL:\r\n      return { loading: false, err: action.payload };\r\n    case c.HANDLE_BLOCK_ROOM_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const currentOpenRoomReducer = (\r\n  state = { currentOpenRoomId: '', currentOpenRoom: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case c.CURRENT_OPEN_ROOM_REQUEST:\r\n      return { loading: true };\r\n    case c.CURRENT_OPEN_ROOM_SUCCESS:\r\n      return {\r\n        currentOpenRoom: action.payload,\r\n        loading: false,\r\n        success: true,\r\n        currentOpenRoomId: action.payload._id,\r\n      };\r\n    case c.CURRENT_OPEN_ROOM_FAIL:\r\n      return { loading: false, err: action.payload };\r\n    case c.CURRENT_OPEN_ROOM_RESET:\r\n      return {};\r\n    case c.UPDATE_CURRENT_OPEN_ROOM:\r\n      return { ...state, currentOpenRoom: action.payload };\r\n    case c.TYPING_MESSAGE:\r\n      return { ...state, typing: action.payload };\r\n    //   let currentOpenRoom = { ...state.currentOpenRoom };\r\n    //   let userToShowOnRoom = { ...currentOpenRoom }.userToShowOnRoom;\r\n    //   userToShowOnRoom = { ...userToShowOnRoom, typing: action.payload };\r\n    //   currentOpenRoom = { ...currentOpenRoom, userToShowOnRoom };\r\n    //   return { ...state, currentOpenRoom };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const deleteRoomReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case c.DELETE_ROOM_REQUEST:\r\n      return { loading: true };\r\n    case c.DELETE_ROOM_SUCCESS:\r\n      return { loading: false, room: action.payload, success: true };\r\n    case c.DELETE_ROOM_FAIL:\r\n      return { loading: false, err: action.payload };\r\n    case c.DELETE_ROOM_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as c from '../constants/socketConstants';\r\n\r\nexport const createSocketReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case c.CREATE_SOCKET:\r\n      return action.payload;\r\n    case c.DISCONNECT_SOCKET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App/App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}