{"version":3,"sources":["views/LogIn/styles.js","constants/urls.js","actions/userActions.js","constants/userConstants.js","views/LogIn/LogIn.jsx","views/SignUp/styles.js","views/SignUp/SignUp.jsx","views/ForgotPassword/styles.js","views/ForgotPassword/ForgotPassword.jsx","views/ResetPassword/styles.js","views/ResetPassword/ResetPassword.jsx","views/AddFriend/styles.js","views/AddFriend/Header/styles.js","views/AddFriend/Header/Header.jsx","components/global/Message/styles.js","components/global/Message/Message.jsx","components/global/UserCard/styles.js","actions/roomActions.js","constants/roomConstants.js","components/global/UserCard/UserCard.jsx","views/AddFriend/AddFriend.jsx","views/VerifyEmail/VerifyEmail.jsx","views/Home/styles.js","components/Sidebar/styles.js","components/Sidebar/Header/styles.js","components/Sidebar/Header/AddChats/styles.js","components/Sidebar/Header/AddChats/AddChats.jsx","components/Sidebar/Header/Header.jsx","constants/messagesConstants.js","components/Sidebar/SearchBox/styles.js","components/Sidebar/SearchBox/SearchBox.jsx","components/Sidebar/ChatsContainer/styles.js","components/Sidebar/ChatsContainer/ChatGo/styles.js","components/Sidebar/ChatsContainer/ChatGo/ChatGo.jsx","components/Sidebar/ChatsContainer/ChatsContainer.jsx","components/Sidebar/UpdateMe/styles.js","components/Sidebar/UpdateMe/UpdateMe.jsx","components/Sidebar/Sidebar.jsx","components/ChatBox/styles.js","components/ChatBox/NoChat/styles.js","components/ChatBox/NoChat/NoChat.jsx","components/ChatBox/ChatMsg/styles.js","components/ChatBox/ChatMsg/Header/styles.js","components/ChatBox/ChatMsg/Header/Header.jsx","components/ChatBox/ChatMsg/MessagesContainer/styles.js","components/ChatBox/ChatMsg/MessagesContainer/Message/styles.js","components/ChatBox/ChatMsg/MessagesContainer/Message/MessageStatus/MessageStatus.jsx","components/ChatBox/ChatMsg/MessagesContainer/Message/Message.jsx","components/ChatBox/ChatMsg/MessagesContainer/Record/styles.js","components/ChatBox/ChatMsg/MessagesContainer/Record/AudioControllers/styles.js","components/ChatBox/ChatMsg/MessagesContainer/Record/AudioControllers/AudioControllers.jsx","components/ChatBox/ChatMsg/MessagesContainer/Record/Record.jsx","components/global/MessageWrapper/styles.js","components/global/MessageWrapper/MessageWrapper.jsx","components/ChatBox/ChatMsg/MessagesContainer/MessageTyping/styles.js","components/ChatBox/ChatMsg/MessagesContainer/MessageTyping/MessageTyping.jsx","components/ChatBox/ChatMsg/MessagesContainer/MessagesContainer.jsx","components/ChatBox/ChatMsg/ChatController/styles.js","actions/messageActions.js","utils/record.js","components/ChatBox/ChatMsg/ChatController/ChatController.jsx","components/ChatBox/ChatMsg/AcceptChat/styles.js","components/ChatBox/ChatMsg/AcceptChat/AcceptChat.jsx","components/ChatBox/ChatMsg/Block/styles.js","components/ChatBox/ChatMsg/Block/Block.jsx","components/ChatBox/ChatMsg/UserInfo/styles.js","components/ChatBox/ChatMsg/UserInfo/UserInfo.jsx","components/ChatBox/ChatMsg/ChatMsg.jsx","components/ChatBox/ChatBox.jsx","views/Home/Home.jsx","actions/socketActions.js","constants/socketConstants.js","views/ContactMe/styles.js","views/ContactMe/ContactMe.jsx","Tests/Test.jsx","App/App.jsx","reducers/messageReducers.js","store.js","reducers/userReducers.js","reducers/roomReducers.js","reducers/socketReducers.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","height","background","position","zIndex","boxShadow","display","textAlign","paddingTop","emailInput","fontWeight","passwordInput","InputBorder","borderColor","loginBtn","backgroundColor","marginTop","notSignedUp","signUpLink","textDecoration","color","lonInTopHeader","margin","alignItems","justifyContent","loginLogo","host","alert","console","log","process","usersUrl","roomsUrl","messagesUrl","blocksUrl","setCurrentChattingUserData","userObj","options","type","force","dispatch","getState","a","currentOpenRoom","userToShowOnRoom","userId","_id","payload","currentUserDate","currentChattingUserData","userObjToSaveInLocalStorage","localStorage","setItem","JSON","stringify","token","loginUser","user","config","headers","authorization","axios","get","urls","data","status","onlineId","userData","response","message","createMuiTheme","palette","primary","green","LogIn","history","useState","email","password","setUserData","classes","useDispatch","useSelector","s","logInLoading","loading","loggedInUser","logInError","err","successLogIn","success","Alert","props","elevation","variant","handleInputChange","e","target","name","value","useEffect","push","Snackbar","open","autoHideDuration","anchorOrigin","horizontal","vertical","severity","className","Container","maxWidth","Typography","style","src","alt","loginFrom","onSubmit","preventDefault","post","loginUserAction","ThemeProvider","TextField","fullWidth","label","required","id","disabled","autoComplete","onChange","InputProps","notchedOutline","inputProps","minLength","Button","endIcon","CircularProgress","to","photoContainer","photoInput","inputLabel","borderRadius","border","cursor","opacity","cameraIconContainer","avatarContainer","resetPhotoBtn","fontSize","top","left","transform","profileImage","SignUp","firstName","lastName","passwordConfirm","photo","uploading","setUploading","signupLoading","signupError","signupSuccess","uploadFileHandler","stopPropagation","file","files","formData","FormData","append","path","signupUserAction","Grid","container","spacing","item","sm","xs","accept","htmlFor","CameraAlt","photoUploading","onClick","Close","Avatar","ForgotPassword","setEmail","userForgotPassword","loadingForgotPassword","successForgotPassword","errForgotPassword","userForgotPasswordAction","ResetPassword","match","params","userResetPassword","loadingResetPassword","successResetPassword","errResetPassword","setTimeout","userResetPasswordAction","flexDirection","overflow","usersContainer","padding","paddingBottom","searchBtn","float","sidebarIcons","userInfoBtnBase","userInfo","marginRight","info","whiteSpace","textOverflow","fontFamily","search","shape","marginLeft","breakpoints","up","inputRoot","flex","inputInput","paddingLeft","transition","transitions","create","link","searchForm","Header","useStyle","searchQuery","setSearchQuery","ButtonBase","fullName","searchUsersAction","InputBase","placeholder","input","length","Search","Message","children","media","userPhotoContainer","borderBottom","userPhoto","userAbout","setCurrentOpenRoomAction","currentRoomId","currentOpenRoomId","updateRoomAction","room","blockRoomAction","roomId","otherUser","unblockRoomAction","updateCurrentOpenRoomAction","acceptedRoomId","UserCard","currentCard","setCurrentCard","createRoom","setCreateRoom","createRoomLoading","createRoomSuccess","createRoomErr","Card","split","CardActionArea","title","CardContent","userName","gutterBottom","component","about","CardActions","otherUserEmail","error","size","AddFriend","searchUsers","users","loadingSearchUsers","errSearchUsers","successSearchUsers","map","key","VerifyEmail","userVerifyEmail","loadingVerifyEmail","successVerifyEmail","errVerifyEmail","verifyToken","userEmail","borderRight","closed","text","addChat","menuItem","dialogContent","AddFriends","setOpen","Dialog","onClose","aria-labelledby","DialogContent","addFriendIcon","setOpenUpdateMe","handleLogout","removeItem","socket","disconnect","React","anchorEl","setAnchorEl","openMenu","Boolean","handleCloseMenu","IconButton","AddChats","Add","aria-label","aria-controls","aria-haspopup","event","currentTarget","Menu","keepMounted","PaperProps","maxHeight","ITEM_HEIGHT","MenuItem","main","searchBox","outline","searchIcon","SearchBox","btnBase","infoTop","marginBottom","date","lastMsg","newChat","newChatIcon","ChatGo","setOpenChatBox","setOpenSideBar","messageInput","document","getElementById","focus","moment","lastMessage","createdAt","format","new","messageTXT","ChatsContainer","myRooms","loadingMyRooms","rooms","errGettingMyRooms","header","saveChangesContainer","saveChanges","savingUpdatingChanges","profilePhotoContainer","controllersContainer","uploadNewPhoto","nameContainer","yourNameTXT","colorSecondary","firstNameInput","aboutContainer","UpdateMe","updateMe","loadingUpdateMe","successUpdateMe","errUpdateMe","dataChanged","setDataChanged","trim","ArrowBack","patch","dataToSaveInLocalStorage","updateMeAction","Save","content","Publish","Sidebar","smallScreen","openUpdateMe","mainLogo","mainText","subTitle","lineHeight","contactMe","NoChat","bgObjects","backgroundImage","backgroundSize","backgroundPosition","acceptChat","openSideBar","setOpenUserInfo","openDialog","setOpenDialog","handleCloseDialog","handleDeleteChat","delete","handleBlock","customDate","Date","lastSeenAt","hour","customDateObj","day","getDate","month","getMonth","year","getFullYear","now","nowObj","differenceDays","customObj","today","getDay","dayString","viewLastSeen","myBlock","aria-describedby","DialogTitle","DialogContentText","DialogActions","scrollBehavior","earlierMessagesBtn","right","bottom","whatsAppStyle","otherMessage","otherMessageText","overflowWrap","otherMessageDate","myMessage","myMessageText","myMessageDate","msgStatus","adminMessage","textTransform","userSelect","MessageStatus","xmlns","viewBox","fill","d","msg","sender","messageDate","setMessageDate","adminMessageText","controls","playStopContainer","slider","AudioControllers","mediaLink","Audio","audio","playing","setPlaying","max","seekBarData","setSeekBarData","playRecord","play","currentTime","duration","handleChangeAudioCurrentTime","preload","addEventListener","Math","round","pause","min","onInput","Record","MessageWrapper","typingDot","animation","animationDelay","paddingRight","MessageTyping","MessagesContainer","roomMessages","loadingMessages","messages","displayedMessages","errGettingMessages","scrollToEnd","scrollTo","scrollHeight","scrollTop","clientHeight","downArrow","onscroll","messageType","clientId","minHeight","msgBox","msgInput","resize","send","recordingContainer","cancelRecording","sendRecord","recordTimeContainer","recordingRedDot","createMessageAction","messageObj","updateRoomMessagesAction","myId","senderId","messageRoomId","msgServerId","addMyMessage","updateMyMessage","addOtherMessage","getAudioStream","navigator","mediaDevices","getUserMedia","video","stream","mediaRecorder","MediaRecorder","start","recorder","startRec","chunk","this","blob","Blob","audio_url","URL","createObjectURL","stopRec","stop","Promise","resolve","ChatController","setMessage","typing","setTyping","recording","setRecording","record","timeText","setTimeText","currentInterval","setCurrentInterval","handleStartRecording","uploadRecording","receiver","uuidV4","handleCancelRecording","handleSendRecording","minutes","seconds","minutesTXT","secondsTXT","setInterval","clearInterval","emit","typingUserId","onlineUserId","typingUserOnlineId","autoFocus","rows","recordingTim","Done","Send","Mic","AcceptChat","onAccept","onBlock","Block","onUnBlock","infoHeader","infoContent","infoContainer","UserInfo","href","ChatMsg","openUserInfo","otherUserBlock","accepted","ChatBox","currentOpenRoomData","App","openChatBox","setSmallScreen","socketIOClient","connect","query","replace","window","innerWidth","on","currentChattingUser","senderOnlineId","updateRoomAfterOneDeletedAction","block","myPic","myName","myEmail","contentContainer","facebook","twitter","linkedIn","phoneContainer","whatsApp","phoneNo","feedbackForm","userFeedBack","sendUserFeedBackBtn","ContactMe","setUserFeedBack","appBar","Transition","forwardRef","ref","Slide","direction","FullScreenDialog","handleClose","fullScreen","TransitionComponent","AppBar","Toolbar","edge","List","ListItem","button","ListItemText","secondary","Divider","Home","Test","exact","updateAnArray","array","newObj","identifier","oldObj","find","oldObjIndex","indexOf","splice","reducer","combineReducers","state","action","filter","unshift","roomIdToDelete","roomsAfterDeleting","newModifiedMessages","createMessage","getItem","parse","initialState","middleware","thunk","store","createStore","applyMiddleware","ReactDOM","render"],"mappings":"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","file":"static/js/main.6dcb69ee.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '90vw',\r\n    height: '90vh',\r\n    background: 'white',\r\n    position: 'relative',\r\n    zIndex: '2',\r\n    boxShadow: ' -2px -2px 10px grey',\r\n    display: 'flex',\r\n    textAlign: 'center',\r\n    paddingTop: '30px',\r\n  },\r\n  emailInput: {\r\n    fontWeight: 'bold',\r\n    '& >.MuiInputLabel-outlined': {\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  passwordInput: {\r\n    '& >.MuiInputLabel-outlined': {\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  InputBorder: {\r\n    borderColor: '#019688',\r\n  },\r\n  loginBtn: {\r\n    backgroundColor: '#019688',\r\n    fontWeight: 'bold',\r\n    marginTop: '25px',\r\n    '&:hover': {\r\n      backgroundColor: '#008276',\r\n    },\r\n  },\r\n  notSignedUp: {\r\n    paddingTop: '20px',\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n  },\r\n  signUpLink: {\r\n    textDecoration: 'none',\r\n    color: '#019688',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n  lonInTopHeader: {\r\n    display: 'inline-flex',\r\n    margin: 'auto',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  loginLogo: {\r\n    textAlign: 'center',\r\n    display: 'inline-block',\r\n    width: '75px',\r\n    height: '75px',\r\n    margin: 'auto',\r\n    '&>img': {\r\n      width: '100%',\r\n      height: '100%',\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","// export const host = 'https://whochats-backend.herokuapp.com/';\r\n// export const host = 'http://localhost:5000';\r\n//! if you send from https to http you will get an error with (blocked:mixed-content)\r\n\r\nexport let host = '';\r\n\r\nswitch (process.env.NODE_ENV) {\r\n  case 'development':\r\n    host = 'http://localhost:5000';\r\n    break;\r\n  case 'production':\r\n    host = 'http://localhost:5000';\r\n    break;\r\n  default:\r\n    host = '';\r\n}\r\nif (!host) {\r\n  alert(`NODE_ENV variable isn't defined check console log, IN URLS constants`);\r\n  console.log(process.env.NODE_ENV);\r\n}\r\n\r\nexport const usersUrl = `${host}/api/v1/users`;\r\nexport const roomsUrl = `${host}/api/v1/rooms`;\r\nexport const messagesUrl = `${host}/api/v1/messages`;\r\nexport const blocksUrl = `${host}/api/v1/blocks`;\r\n","import * as c from '../constants/userConstants';\r\nimport {\r\n  CURRENT_OPEN_ROOM_RESET,\r\n  GET_MY_ROOMS_RESET,\r\n} from '../constants/roomConstants';\r\nimport * as urls from '../constants/urls';\r\nimport { GET_ROOM_MESSAGES_RESET } from '../constants/messagesConstants';\r\nimport axios from 'axios';\r\n\r\nexport const loginUserAction = (userData) => async (dispatch, getState) => {\r\n  try {\r\n    // const isToken = typeof userData === 'string';\r\n    dispatch({\r\n      type: c.LOGIN_REQUEST,\r\n    });\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      `${urls.usersUrl}/login`,\r\n      userData,\r\n      config\r\n    );\r\n\r\n    const { token, user } = data;\r\n    const payload = { ...user, token };\r\n\r\n    dispatch({\r\n      type: c.LOGIN_SUCCESS,\r\n      payload,\r\n    });\r\n\r\n    localStorage.setItem('loggedInUser', JSON.stringify(payload));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.LOGIN_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logoutUser = () => (dispatch, getState) => {\r\n  dispatch({\r\n    type: c.LOGOUT_USER,\r\n  });\r\n  dispatch({\r\n    type: CURRENT_OPEN_ROOM_RESET,\r\n  });\r\n  dispatch({\r\n    type: c.CURRENT_USER_DATA_RESET,\r\n  });\r\n  dispatch({\r\n    type: GET_MY_ROOMS_RESET,\r\n  });\r\n  dispatch({\r\n    type: GET_ROOM_MESSAGES_RESET,\r\n  });\r\n\r\n  localStorage.removeItem('loggedInUser');\r\n  localStorage.removeItem('currentRoom');\r\n  localStorage.removeItem('currentChattingUserData');\r\n  localStorage.removeItem('currentOpenRoomId');\r\n  const socket = getState().socket;\r\n  socket.disconnect();\r\n};\r\n\r\nexport const signupUserAction = (userData) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: c.SIGNUP_REQUEST,\r\n    });\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    const {\r\n      data: { data },\r\n    } = await axios.post(`${urls.usersUrl}/signup`, userData, config);\r\n\r\n    const user = data;\r\n    const payload = { ...user };\r\n\r\n    dispatch({\r\n      type: c.SIGNUP_SUCCESS,\r\n      payload,\r\n    });\r\n\r\n    localStorage.setItem('loggedInUser', JSON.stringify(payload));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.SIGNUP_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const userForgotPasswordAction = (email) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    // const isToken = typeof userData === 'string';\r\n    dispatch({\r\n      type: c.FORGOT_PASSWORD_REQUEST,\r\n    });\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    await axios.post(`${urls.usersUrl}/forgotPassword`, { email }, config);\r\n\r\n    dispatch({\r\n      type: c.FORGOT_PASSWORD_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.FORGOT_PASSWORD_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const userResetPasswordAction = (token, userData) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    // const isToken = typeof userData === 'string';\r\n    dispatch({\r\n      type: c.RESET_PASSWORD_REQUEST,\r\n    });\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    await axios.post(\r\n      `${urls.usersUrl}/resetPassword/${token}`,\r\n      userData,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: c.RESET_PASSWORD_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.RESET_PASSWORD_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\n// export const updateUserStatus = (userObj) => async (dispatch, getState) => {\r\n//   let currentOpenRoom = getState().currentOpenRoom.currentOpenRoom || {};\r\n//   if (\r\n//     !currentOpenRoom.userToShowOnRoom ||\r\n//     userObj.userId !== currentOpenRoom.userToShowOnRoom._id\r\n//   ) {\r\n//     return;\r\n//   }\r\n\r\n//   let userToShowOnRoom = currentOpenRoom.userToShowOnRoom;\r\n\r\n//   let onlineId = '';\r\n//   let lastSeenAt = '';\r\n\r\n//   if (userObj.onlineId) {\r\n//     onlineId = userObj.onlineId;\r\n//   } else if (userObj.lastSeenAt) {\r\n//     lastSeenAt = userObj.lastSeenAt;\r\n//   }\r\n\r\n//   userToShowOnRoom = {\r\n//     ...userToShowOnRoom,\r\n//     onlineId,\r\n//     lastSeenAt,\r\n//   };\r\n//   currentOpenRoom = { ...currentOpenRoom, userToShowOnRoom };\r\n//   dispatch({\r\n//     type: UPDATE_CURRENT_OPEN_ROOM,\r\n//     payload: currentOpenRoom,\r\n//   });\r\n// };\r\n\r\n// export const setUserTyping = (userObj) => (dispatch, getState) => {\r\n//   let currentOpenRoom = getState().currentOpenRoom.currentOpenRoom || {};\r\n//   if (\r\n//     !currentOpenRoom.userToShowOnRoom ||\r\n//     userObj.userId !== currentOpenRoom.userToShowOnRoom._id\r\n//   ) {\r\n//     return;\r\n//   }\r\n\r\n//   let typing = '';\r\n//   if (userObj.typing) {\r\n//     typing = 'typing';\r\n//   } else {\r\n//     typing = '';\r\n//   }\r\n\r\n//   dispatch({\r\n//     type: TYPING_MESSAGE,\r\n//     payload: typing,\r\n//   });\r\n// };\r\n\r\nexport const setCurrentChattingUserData = (\r\n  userObj,\r\n  options = { type: 'update', force: false }\r\n) => async (dispatch, getState) => {\r\n  //? options object will have a steady prop called (type:'new' or 'update')=> default is update\r\n  //!\r\n  //? if type is update then we will check if the user id matches with the current chatting user\r\n  if (options.type === 'update') {\r\n    let currentOpenRoom = getState().currentOpenRoom.currentOpenRoom || {};\r\n    if (\r\n      !currentOpenRoom.userToShowOnRoom ||\r\n      userObj.userId !== currentOpenRoom.userToShowOnRoom._id\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    //? userObj will have fullName firstName lastName email about\r\n\r\n    //? status      | => the userObj content\r\n    //? ------------|-----------------------------------------------\r\n    //? online      | => userId, onlineId\r\n    //? offline     | => userId, lastSeenAt\r\n    //? startTyping | => userId, typing:true , typingUserOnlineId\r\n    //? stopTyping  | => userId, typing:false, typingUserOnlineId\r\n\r\n    dispatch({\r\n      type: c.CURRENT_USER_DATA,\r\n      payload: userObj,\r\n    });\r\n\r\n    const currentUserDate = getState().currentChattingUserData;\r\n    const userObjToSaveInLocalStorage = { ...currentUserDate, ...userObj };\r\n    localStorage.setItem(\r\n      'currentChattingUserData',\r\n      JSON.stringify(userObjToSaveInLocalStorage)\r\n    );\r\n  } else if (options.type === 'new') {\r\n    try {\r\n      let currentOpenRoom = getState().currentOpenRoom.currentOpenRoom || {\r\n        userToShowOnRoom: {},\r\n      };\r\n      //? checking if that request is made when we reload the current chatting user data\r\n      //? from server when it is saved to local storage but we need to update it\r\n\r\n      if (\r\n        currentOpenRoom.userToShowOnRoom._id === userObj.userId &&\r\n        !options.force\r\n      ) {\r\n        return;\r\n      }\r\n      //? here checking if the userId exists\r\n      if (!userObj.userId) {\r\n        return;\r\n      }\r\n\r\n      const token = `Bearer ${getState().loginUser.user.token}`;\r\n      const config = {\r\n        headers: {\r\n          authorization: token,\r\n        },\r\n      };\r\n\r\n      const {\r\n        data: { data },\r\n      } = await axios.get(\r\n        `${urls.usersUrl}/getUserData/${userObj.userId}`,\r\n        config\r\n      );\r\n\r\n      const status = data.onlineId ? 'online' : 'offline';\r\n      const userData = { status, ...data };\r\n      dispatch({\r\n        type: c.CURRENT_USER_DATA_RESET,\r\n      });\r\n      dispatch({\r\n        type: c.CURRENT_USER_DATA,\r\n        payload: userData,\r\n      });\r\n\r\n      localStorage.setItem('currentChattingUserData', JSON.stringify(userData));\r\n    } catch (err) {\r\n      dispatch({\r\n        type: c.CURRENT_USER_DATA_FAIL,\r\n        payload:\r\n          err.response && err.response.data.message\r\n            ? err.response.data.message\r\n            : err.message,\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\nexport const updateMeAction = (userData) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: c.UPDATE_USER_REQUEST,\r\n    });\r\n\r\n    const token = `Bearer ${getState().loginUser.user.token}`;\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: token,\r\n      },\r\n    };\r\n    const {\r\n      data: { data },\r\n    } = await axios.patch(`${urls.usersUrl}/updateMe`, userData, config);\r\n\r\n    dispatch({\r\n      type: c.UPDATE_USER_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    const dataToSaveInLocalStorage = getState().loginUser.user;\r\n\r\n    localStorage.setItem(\r\n      'loggedInUser',\r\n      JSON.stringify(dataToSaveInLocalStorage)\r\n    );\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.UPDATE_USER_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\nexport const userVerifyEmailAction = (verifyToken, userEmail) => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: c.VERIFY_USER_REQUEST,\r\n    });\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      `${urls.usersUrl}/verifyEmail/${verifyToken}`,\r\n      { email: userEmail },\r\n      config\r\n    );\r\n\r\n    const { token, user } = data;\r\n    const payload = { ...user, token };\r\n\r\n    dispatch({\r\n      type: c.VERIFY_USER_SUCCESS,\r\n      payload,\r\n    });\r\n\r\n    localStorage.setItem('loggedInUser', JSON.stringify(payload));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.VERIFY_USER_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const searchUsersAction = (searchQuery) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: c.SEARCH_USERS_REQUEST,\r\n    });\r\n    const token = `Bearer ${getState().loginUser.user.token}`;\r\n    const config = {\r\n      headers: {\r\n        authorization: token,\r\n      },\r\n    };\r\n\r\n    const {\r\n      data: { data },\r\n    } = await axios.get(`${urls.usersUrl}/searchUsers/${searchQuery}`, config);\r\n    dispatch({\r\n      type: c.SEARCH_USERS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.SEARCH_USERS_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n","export const LOGIN_REQUEST = 'LOGIN_REQUEST';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\n\r\nexport const SIGNUP_REQUEST = 'SIGNUP_REQUEST';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\r\n\r\nexport const UPDATE_USER_REQUEST = 'UPDATE_USER_REQUEST';\r\nexport const UPDATE_USER_SUCCESS = 'UPDATE_USER_SUCCESS';\r\nexport const UPDATE_USER_FAIL = 'UPDATE_USER_FAIL';\r\nexport const UPDATE_USER_RESET = 'UPDATE_USER_RESET';\r\n\r\nexport const SEARCH_USERS_REQUEST = 'SEARCH_USERS_REQUEST';\r\nexport const SEARCH_USERS_SUCCESS = 'SEARCH_USERS_SUCCESS';\r\nexport const SEARCH_USERS_FAIL = 'SEARCH_USERS_FAIL';\r\nexport const SEARCH_USERS_RESET = 'SEARCH_USERS_RESET';\r\n\r\nexport const VERIFY_USER_REQUEST = 'VERIFY_USER_REQUEST';\r\nexport const VERIFY_USER_SUCCESS = 'VERIFY_USER_SUCCESS';\r\nexport const VERIFY_USER_FAIL = 'VERIFY_USER_FAIL';\r\nexport const VERIFY_USER_RESET = 'VERIFY_USER_RESET';\r\n\r\nexport const FORGOT_PASSWORD_REQUEST = 'FORGOT_PASSWORD_REQUEST';\r\nexport const FORGOT_PASSWORD_SUCCESS = 'FORGOT_PASSWORD_SUCCESS';\r\nexport const FORGOT_PASSWORD_FAIL = 'FORGOT_PASSWORD_FAIL';\r\n\r\nexport const RESET_PASSWORD_REQUEST = 'RESET_PASSWORD_REQUEST';\r\nexport const RESET_PASSWORD_SUCCESS = 'RESET_PASSWORD_SUCCESS';\r\nexport const RESET_PASSWORD_FAIL = 'RESET_PASSWORD_FAIL';\r\n\r\nexport const CURRENT_USER_DATA = 'CURRENT_USER_DATA';\r\nexport const CURRENT_USER_DATA_FAIL = 'CURRENT_USER_DATA_FAIL';\r\nexport const CURRENT_USER_DATA_RESET = 'CURRENT_USER_DATA_RESET';\r\n\r\nexport const LOGOUT_USER = 'LOGOUT_USER';\r\n","import React, { useEffect, useState } from 'react';\r\nimport useStyles from './styles';\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Container,\r\n  createMuiTheme,\r\n  ThemeProvider,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { Link } from 'react-router-dom';\r\nimport { loginUserAction } from '../../actions/userActions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: green,\r\n  },\r\n});\r\n\r\nconst LogIn = ({ history }) => {\r\n  //? setting local state\r\n  const [userData, setUserData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  //? defining some variables\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  //? getting user data from redux\r\n  const loginUser = useSelector((s) => s.loginUser);\r\n  const {\r\n    loading: logInLoading,\r\n    user: loggedInUser,\r\n    err: logInError,\r\n    success: successLogIn,\r\n  } = loginUser;\r\n\r\n  //? some functions\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant='filled' {...props} />;\r\n  }\r\n  const handleLoginSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(loginUserAction(userData));\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUserData({\r\n      ...userData,\r\n      [name]: value,\r\n    });\r\n  };\r\n  //? some useEffect functions\r\n  useEffect(() => {\r\n    if (loggedInUser && loggedInUser.token) {\r\n      history.push('/home');\r\n    }\r\n    //! try applying this in the main App.jsx to login every time with userToken\r\n    //! else if (loggedInUser && loggedInUser.token) {\r\n    //! add here the code to log user in with his token\r\n    //! to check if the token is expired or not\r\n    //! add this to backend too , to login with token\r\n    //! dispatch(loginUserAction(loggedInUser.token));\r\n    //! }\r\n  }, [dispatch, history, loggedInUser, successLogIn]);\r\n  return (\r\n    <>\r\n      {successLogIn ? (\r\n        <Snackbar\r\n          open={successLogIn}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='success'>Logged in successfully</Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {logInLoading ? (\r\n        <Snackbar\r\n          open={logInLoading}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='info'>Logging in</Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {logInError ? (\r\n        <Snackbar\r\n          open={logInError && true}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='error'>{logInError}</Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      <div className={classes.root}>\r\n        <Container maxWidth='xs'>\r\n          <Typography\r\n            className={classes.lonInTopHeader}\r\n            style={{ textAlign: 'center' }}\r\n            variant='h2'\r\n          >\r\n            Login\r\n            <div className={classes.loginLogo}>\r\n              <img src='images/login/loginLogo.png' alt='Login Logo' />\r\n            </div>\r\n          </Typography>\r\n          <form className={classes.loginFrom} onSubmit={handleLoginSubmit}>\r\n            <ThemeProvider theme={theme}>\r\n              <TextField\r\n                fullWidth\r\n                margin='normal'\r\n                variant='outlined'\r\n                label='Email'\r\n                required\r\n                name='email'\r\n                type='email'\r\n                id='email'\r\n                disabled={logInLoading}\r\n                autoComplete='current-email'\r\n                onChange={handleInputChange}\r\n                value={userData.email}\r\n                className={classes.emailInput}\r\n                InputProps={{\r\n                  className: classes.emailInput,\r\n                  classes: {\r\n                    notchedOutline: classes.InputBorder,\r\n                  },\r\n                }}\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                margin='normal'\r\n                variant='outlined'\r\n                label='Password'\r\n                required\r\n                name='password'\r\n                type='password'\r\n                id='password'\r\n                disabled={logInLoading}\r\n                autoComplete='current-password'\r\n                onChange={handleInputChange}\r\n                value={userData.password}\r\n                inputProps={{\r\n                  minLength: 8,\r\n                }}\r\n                className={classes.passwordInput}\r\n                InputProps={{\r\n                  className: classes.passwordInput,\r\n                  classes: {\r\n                    notchedOutline: classes.InputBorder,\r\n                  },\r\n                }}\r\n              />\r\n            </ThemeProvider>\r\n\r\n            <Button\r\n              type='submit'\r\n              variant='contained'\r\n              color='primary'\r\n              className={classes.loginBtn}\r\n              style={{ backgroundColor: '#019688' }}\r\n              fullWidth\r\n              disabled={logInLoading}\r\n              endIcon={\r\n                logInLoading && (\r\n                  <CircularProgress\r\n                    style={{ color: 'black', width: '20px', height: '20px' }}\r\n                  />\r\n                )\r\n              }\r\n            >\r\n              Login\r\n            </Button>\r\n          </form>\r\n          <Typography className={classes.notSignedUp}>\r\n            Don't have email ?{' '}\r\n            <Link className={classes.signUpLink} to='/signup'>\r\n              {' '}\r\n              Signup\r\n            </Link>\r\n          </Typography>\r\n          <Typography className={classes.notSignedUp}>\r\n            <Link className={classes.signUpLink} to='/forgotPassword'>\r\n              Forgot password\r\n            </Link>{' '}\r\n            ?\r\n          </Typography>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LogIn;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '90vw',\r\n    height: '90vh',\r\n    background: 'white',\r\n    position: 'relative',\r\n    zIndex: '2',\r\n    boxShadow: ' -2px -2px 10px grey',\r\n    display: 'flex',\r\n    textAlign: 'center',\r\n    paddingTop: '30px',\r\n  },\r\n  emailInput: {\r\n    fontWeight: 'bold',\r\n    '& >.MuiInputLabel-outlined': {\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  passwordInput: {\r\n    '& >.MuiInputLabel-outlined': {\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  InputBorder: {\r\n    borderColor: '#019688',\r\n  },\r\n  loginBtn: {\r\n    backgroundColor: '#019688',\r\n    fontWeight: 'bold',\r\n    marginTop: '25px',\r\n    '&:hover': {\r\n      backgroundColor: '#008276',\r\n    },\r\n  },\r\n  notSignedUp: {\r\n    paddingTop: '20px',\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n  },\r\n  signUpLink: {\r\n    textDecoration: 'none',\r\n    color: '#019688',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n  lonInTopHeader: {\r\n    display: 'inline-flex',\r\n    margin: 'auto',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  loginLogo: {\r\n    textAlign: 'center',\r\n    display: 'inline-block',\r\n    width: '75px',\r\n    height: '75px',\r\n    margin: 'auto',\r\n    '&>img': {\r\n      width: '100%',\r\n      height: '100%',\r\n    },\r\n  },\r\n  photoContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'center',\r\n  },\r\n\r\n  photoInput: {\r\n    display: 'none',\r\n  },\r\n  inputLabel: {\r\n    width: '60px',\r\n    height: '60px',\r\n    borderRadius: '50%',\r\n    backgroundColor: '#eee',\r\n    border: '2px solid #ddd',\r\n    cursor: 'pointer',\r\n    '&>div:hover': {\r\n      opacity: '1',\r\n    },\r\n  },\r\n  cameraIconContainer: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    opacity: '0.5',\r\n    '&>*': {\r\n      width: '70%',\r\n      height: '70%',\r\n      position: 'absolute',\r\n    },\r\n  },\r\n  avatarContainer: {\r\n    width: '100%',\r\n    height: '100%',\r\n    position: 'relative',\r\n    '&:hover>span': {\r\n      opacity: '1',\r\n    },\r\n    '& .MuiAvatar-root': {\r\n      width: '100%',\r\n      height: '100%',\r\n    },\r\n  },\r\n  resetPhotoBtn: {\r\n    opacity: '0',\r\n    zIndex: '10',\r\n    width: '100%',\r\n    height: '100%',\r\n    backgroundColor: 'rgba(255,0,0,0.5)',\r\n    borderRadius: '50%',\r\n    position: 'absolute',\r\n    color: 'white',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    fontSize: '10px',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%,-50%)',\r\n    '&>*': {\r\n      width: '90%',\r\n      height: '90%',\r\n    },\r\n  },\r\n\r\n  profileImage: {\r\n    position: 'absolute',\r\n    zIndex: '1',\r\n    width: '100%',\r\n    height: '100%',\r\n    borderRadius: '50%',\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React, { useEffect, useState } from 'react';\r\nimport useStyles from './styles';\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Container,\r\n  createMuiTheme,\r\n  ThemeProvider,\r\n  Typography,\r\n  Grid,\r\n  Avatar,\r\n  CircularProgress,\r\n} from '@material-ui/core';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { Link } from 'react-router-dom';\r\nimport { signupUserAction } from '../../actions/userActions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport axios from 'axios';\r\nimport * as urls from '../../constants/urls';\r\nimport { CameraAlt, Close } from '@material-ui/icons';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: green,\r\n  },\r\n});\r\n\r\nconst SignUp = ({ history }) => {\r\n  //? setting local state\r\n  const [userData, setUserData] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    password: '',\r\n    passwordConfirm: '',\r\n    photo: '',\r\n  });\r\n\r\n  //? defining some variables\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  //? getting user data from redux\r\n  const loginUser = useSelector((s) => s.loginUser);\r\n  const {\r\n    loading: signupLoading,\r\n    user: loggedInUser,\r\n    err: signupError,\r\n    success: signupSuccess,\r\n  } = loginUser;\r\n\r\n  //? some functions\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant='filled' {...props} />;\r\n  }\r\n  const handleSignupSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(signupUserAction(userData));\r\n  };\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    if (!e.target.value) return;\r\n    setUserData({ ...userData, photo: '' });\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append('photo', file);\r\n    setUploading(true);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        `${urls.host}/api/v1/uploadProfilePhotoRoute`,\r\n        formData,\r\n        config\r\n      );\r\n      setUserData({ ...userData, photo: data.path });\r\n      setUploading(false);\r\n    } catch (err) {\r\n      alert('ERROR UPLOADING YOUR IMAGE');\r\n      console.log(err);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUserData({\r\n      ...userData,\r\n      [name]: value,\r\n    });\r\n  };\r\n  //? some useEffect functions\r\n  useEffect(() => {\r\n    if (loggedInUser && loggedInUser.token) {\r\n      history.push('/');\r\n    }\r\n    //! try applying this in the main App.jsx to login every time with userToken\r\n    //! else if (loggedInUser && loggedInUser.token) {\r\n    //! add here the code to log user in with his token\r\n    //! to check if the token is expired or not\r\n    //! add this to backend too , to login with token\r\n    //! dispatch(loginUserAction(loggedInUser.token));\r\n    //! }\r\n  }, [dispatch, history, loggedInUser]);\r\n\r\n  return (\r\n    <>\r\n      {signupSuccess ? (\r\n        <Snackbar\r\n          open={signupSuccess}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='success'>\r\n            Signed up successfully, Please check your inbox for verification\r\n            email\r\n          </Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {signupLoading ? (\r\n        <Snackbar\r\n          open={signupLoading}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='info'>Signing up</Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {signupError ? (\r\n        <Snackbar\r\n          open={signupError && true}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='error'>{signupError}</Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      <div className={classes.root}>\r\n        <Container maxWidth='xs'>\r\n          <Typography\r\n            className={classes.lonInTopHeader}\r\n            style={{ textAlign: 'center' }}\r\n            variant='h2'\r\n          >\r\n            Signup\r\n            <div className={classes.loginLogo}>\r\n              <img src='images/login/loginLogo.png' alt='Login Logo' />\r\n            </div>\r\n          </Typography>\r\n          <form className={classes.loginFrom} onSubmit={handleSignupSubmit}>\r\n            <ThemeProvider theme={theme}>\r\n              <Grid container spacing={2}>\r\n                <Grid item sm={9} xs={9}>\r\n                  <TextField\r\n                    fullWidth\r\n                    margin='normal'\r\n                    variant='outlined'\r\n                    label='Name'\r\n                    required\r\n                    name='firstName'\r\n                    type='text'\r\n                    id='firstName'\r\n                    disabled={signupLoading}\r\n                    autoComplete='first-name'\r\n                    onChange={handleInputChange}\r\n                    value={userData.firstName}\r\n                    className={classes.emailInput}\r\n                    InputProps={{\r\n                      className: classes.emailInput,\r\n                      classes: {\r\n                        notchedOutline: classes.InputBorder,\r\n                      },\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item sm={3} xs={3} className={classes.photoContainer}>\r\n                  <input\r\n                    type='file'\r\n                    id='profile-photo'\r\n                    label='Choose your image'\r\n                    onChange={uploadFileHandler}\r\n                    accept='image/*'\r\n                    className={classes.photoInput}\r\n                  />\r\n                  <label htmlFor='profile-photo' className={classes.inputLabel}>\r\n                    <div\r\n                      style={userData.photo ? { display: 'none' } : {}}\r\n                      className={classes.cameraIconContainer}\r\n                    >\r\n                      <CameraAlt style={uploading ? { display: 'none' } : {}} />\r\n                      <CircularProgress\r\n                        style={!uploading ? { display: 'none' } : {}}\r\n                        className={classes.photoUploading}\r\n                        color='secondary'\r\n                      />\r\n                    </div>\r\n                    <div\r\n                      style={userData.photo ? {} : { display: 'none' }}\r\n                      className={classes.avatarContainer}\r\n                    >\r\n                      <span\r\n                        onClick={(e) => {\r\n                          setUserData({ ...userData, photo: '' });\r\n                          e.preventDefault();\r\n                          e.stopPropagation();\r\n                        }}\r\n                        className={classes.resetPhotoBtn}\r\n                      >\r\n                        <Close />\r\n                      </span>\r\n                      <Avatar\r\n                        src={userData.photo}\r\n                        alt='user profile'\r\n                        className={classes.profileImage}\r\n                      />\r\n                    </div>\r\n                  </label>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <TextField\r\n                fullWidth\r\n                margin='normal'\r\n                variant='outlined'\r\n                label='Email'\r\n                required\r\n                disabled={signupLoading}\r\n                name='email'\r\n                type='email'\r\n                id='email'\r\n                autoComplete='current-email'\r\n                onChange={handleInputChange}\r\n                value={userData.email}\r\n                className={classes.emailInput}\r\n                InputProps={{\r\n                  className: classes.emailInput,\r\n                  classes: {\r\n                    notchedOutline: classes.InputBorder,\r\n                  },\r\n                }}\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                margin='normal'\r\n                variant='outlined'\r\n                label='Password'\r\n                required\r\n                name='password'\r\n                disabled={signupLoading}\r\n                type='password'\r\n                id='password'\r\n                autoComplete='current-password'\r\n                onChange={handleInputChange}\r\n                value={userData.password}\r\n                inputProps={{\r\n                  minLength: 8,\r\n                }}\r\n                className={classes.passwordInput}\r\n                InputProps={{\r\n                  className: classes.passwordInput,\r\n                  classes: {\r\n                    notchedOutline: classes.InputBorder,\r\n                  },\r\n                }}\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                margin='normal'\r\n                variant='outlined'\r\n                label='Password Confirmation'\r\n                required\r\n                name='passwordConfirm'\r\n                disabled={signupLoading}\r\n                type='password'\r\n                id='passwordConfirm'\r\n                autoComplete='current-passwordConfirm'\r\n                onChange={handleInputChange}\r\n                value={userData.passwordConfirm}\r\n                inputProps={{\r\n                  minLength: 8,\r\n                }}\r\n                className={classes.passwordInput}\r\n                InputProps={{\r\n                  className: classes.passwordInput,\r\n                  classes: {\r\n                    notchedOutline: classes.InputBorder,\r\n                  },\r\n                }}\r\n              />\r\n            </ThemeProvider>\r\n\r\n            <Button\r\n              type='submit'\r\n              variant='contained'\r\n              color='primary'\r\n              className={classes.loginBtn}\r\n              fullWidth\r\n              disabled={signupLoading}\r\n              endIcon={\r\n                signupLoading && (\r\n                  <CircularProgress\r\n                    style={{ color: 'black', width: '20px', height: '20px' }}\r\n                  />\r\n                )\r\n              }\r\n            >\r\n              Signup\r\n            </Button>\r\n          </form>\r\n          <Typography className={classes.notSignedUp}>\r\n            Have an account ?{' '}\r\n            <Link className={classes.signUpLink} to='/login'>\r\n              {' '}\r\n              Login\r\n            </Link>\r\n          </Typography>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '90vw',\r\n    height: '90vh',\r\n    background: 'white',\r\n    position: 'relative',\r\n    zIndex: '2',\r\n    boxShadow: ' -2px -2px 10px grey',\r\n    display: 'flex',\r\n    textAlign: 'center',\r\n    paddingTop: '30px',\r\n  },\r\n  emailInput: {\r\n    fontWeight: 'bold',\r\n    '& >.MuiInputLabel-outlined': {\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  passwordInput: {\r\n    '& >.MuiInputLabel-outlined': {\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  InputBorder: {\r\n    borderColor: '#019688',\r\n  },\r\n  loginBtn: {\r\n    backgroundColor: '#019688',\r\n    fontWeight: 'bold',\r\n    marginTop: '25px',\r\n    '&:hover': {\r\n      backgroundColor: '#008276',\r\n    },\r\n  },\r\n  notSignedUp: {\r\n    paddingTop: '20px',\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n  },\r\n  signUpLink: {\r\n    textDecoration: 'none',\r\n    color: '#019688',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n  lonInTopHeader: {\r\n    display: 'inline-flex',\r\n    margin: 'auto',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    fontSize: '30px',\r\n  },\r\n  loginLogo: {\r\n    textAlign: 'center',\r\n    display: 'inline-block',\r\n    width: '75px',\r\n    height: '75px',\r\n    margin: 'auto',\r\n    '&>img': {\r\n      width: '100%',\r\n      height: '100%',\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React, { useEffect, useState } from 'react';\r\nimport useStyles from './styles';\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Container,\r\n  createMuiTheme,\r\n  ThemeProvider,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { userForgotPasswordAction } from '../../actions/userActions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: green,\r\n  },\r\n});\r\n\r\nconst ForgotPassword = ({ history }) => {\r\n  //? setting local state\r\n  const [email, setEmail] = useState('');\r\n\r\n  //? defining some variables\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  //? getting user data from redux\r\n  const { user } = useSelector((s) => s.loginUser);\r\n  const userForgotPassword = useSelector((s) => s.userForgotPassword);\r\n  const {\r\n    loading: loadingForgotPassword,\r\n    success: successForgotPassword,\r\n    err: errForgotPassword,\r\n  } = userForgotPassword;\r\n\r\n  //? some functions\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant='filled' {...props} />;\r\n  }\r\n\r\n  const handleForgotPasswordSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(userForgotPasswordAction(email));\r\n  };\r\n\r\n  //? some useEffect functions\r\n  useEffect(() => {\r\n    if (user && user.token) {\r\n      history.push('/');\r\n    }\r\n    //! try applying this in the main App.jsx to login every time with userToken\r\n    //! else if (loggedInUser && loggedInUser.token) {\r\n    //! add here the code to log user in with his token\r\n    //! to check if the token is expired or not\r\n    //! add this to backend too , to login with token\r\n    //! dispatch(loginUserAction(loggedInUser.token));\r\n    //! }\r\n  }, [dispatch, history, user]);\r\n  return (\r\n    <>\r\n      {/* //? edit from here */}\r\n      {successForgotPassword ? (\r\n        <Snackbar\r\n          open={successForgotPassword}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='success'>\r\n            Please check you email for resetting password link <br />\r\n            You can close this window now\r\n          </Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {loadingForgotPassword ? (\r\n        <Snackbar\r\n          open={loadingForgotPassword}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='info'>Sending your request</Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {errForgotPassword ? (\r\n        <Snackbar\r\n          open={errForgotPassword && true}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='error'>{errForgotPassword}</Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {/* //? to here */}\r\n      <div className={classes.root}>\r\n        <Container maxWidth='xs'>\r\n          <Typography\r\n            className={classes.lonInTopHeader}\r\n            style={{ textAlign: 'center' }}\r\n            variant='h2'\r\n          >\r\n            Enter your email\r\n          </Typography>\r\n          <form\r\n            className={classes.loginFrom}\r\n            onSubmit={handleForgotPasswordSubmit}\r\n          >\r\n            <ThemeProvider theme={theme}>\r\n              <TextField\r\n                fullWidth\r\n                margin='normal'\r\n                variant='outlined'\r\n                label='Email'\r\n                required\r\n                name='email'\r\n                type='email'\r\n                id='email'\r\n                disabled={loadingForgotPassword}\r\n                autoComplete='current-email'\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                value={email}\r\n                className={classes.emailInput}\r\n                InputProps={{\r\n                  className: classes.emailInput,\r\n                  classes: {\r\n                    notchedOutline: classes.InputBorder,\r\n                  },\r\n                }}\r\n              />\r\n            </ThemeProvider>\r\n\r\n            <Button\r\n              type='submit'\r\n              variant='contained'\r\n              color='primary'\r\n              className={classes.loginBtn}\r\n              fullWidth\r\n              disabled={loadingForgotPassword}\r\n              endIcon={\r\n                loadingForgotPassword && (\r\n                  <CircularProgress\r\n                    style={{ color: 'black', width: '20px', height: '20px' }}\r\n                  />\r\n                )\r\n              }\r\n            >\r\n              Send\r\n            </Button>\r\n          </form>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '90vw',\r\n    height: '90vh',\r\n    background: 'white',\r\n    position: 'relative',\r\n    zIndex: '2',\r\n    boxShadow: ' -2px -2px 10px grey',\r\n    display: 'flex',\r\n    textAlign: 'center',\r\n    paddingTop: '30px',\r\n  },\r\n  emailInput: {\r\n    fontWeight: 'bold',\r\n    '& >.MuiInputLabel-outlined': {\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  passwordInput: {\r\n    '& >.MuiInputLabel-outlined': {\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  InputBorder: {\r\n    borderColor: '#019688',\r\n  },\r\n  loginBtn: {\r\n    backgroundColor: '#019688',\r\n    fontWeight: 'bold',\r\n    marginTop: '25px',\r\n    '&:hover': {\r\n      backgroundColor: '#008276',\r\n    },\r\n  },\r\n  notSignedUp: {\r\n    paddingTop: '20px',\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n  },\r\n  signUpLink: {\r\n    textDecoration: 'none',\r\n    color: '#019688',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n  lonInTopHeader: {\r\n    display: 'inline-flex',\r\n    margin: 'auto',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    fontSize: '30px',\r\n  },\r\n  loginLogo: {\r\n    textAlign: 'center',\r\n    display: 'inline-block',\r\n    width: '75px',\r\n    height: '75px',\r\n    margin: 'auto',\r\n    '&>img': {\r\n      width: '100%',\r\n      height: '100%',\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React, { useEffect, useState } from 'react';\r\nimport useStyles from './styles';\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Container,\r\n  createMuiTheme,\r\n  ThemeProvider,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { userResetPasswordAction } from '../../actions/userActions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: green,\r\n  },\r\n});\r\n\r\nconst ResetPassword = ({ history, match }) => {\r\n  const token = match.params.token;\r\n  //? setting local state\r\n  const [userData, setUserData] = useState({\r\n    email: '',\r\n    password: '',\r\n    passwordConfirm: '',\r\n  });\r\n\r\n  //? defining some variables\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  //? getting user data from redux\r\n  const { user } = useSelector((s) => s.loginUser);\r\n  const userResetPassword = useSelector((s) => s.userResetPassword);\r\n  const {\r\n    loading: loadingResetPassword,\r\n    success: successResetPassword,\r\n    err: errResetPassword,\r\n  } = userResetPassword;\r\n\r\n  //? some functions\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant='filled' {...props} />;\r\n  }\r\n  const handleResetPasswordSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(userResetPasswordAction(token, userData));\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUserData({\r\n      ...userData,\r\n      [name]: value,\r\n    });\r\n  };\r\n  //? some useEffect functions\r\n  useEffect(() => {\r\n    if (user && user.token) {\r\n      history.push('/');\r\n    }\r\n    //! try applying this in the main App.jsx to login every time with userToken\r\n    //! else if (loggedInUser && loggedInUser.token) {\r\n    //! add here the code to log user in with his token\r\n    //! to check if the token is expired or not\r\n    //! add this to backend too , to login with token\r\n    //! dispatch(loginUserAction(loggedInUser.token));\r\n    //! }\r\n  }, [dispatch, history, user]);\r\n\r\n  useEffect(() => {\r\n    if (successResetPassword) {\r\n      setTimeout(() => {\r\n        history.push('/login');\r\n      }, 2000);\r\n    }\r\n  }, [history, successResetPassword]);\r\n  return (\r\n    <>\r\n      {successResetPassword ? (\r\n        <Snackbar\r\n          open={successResetPassword}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='success'>Password updated successfully</Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {loadingResetPassword ? (\r\n        <Snackbar\r\n          open={loadingResetPassword}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='info'>Sending Your Request</Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {errResetPassword ? (\r\n        <Snackbar\r\n          open={errResetPassword && true}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='error'>{errResetPassword}</Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      <div className={classes.root}>\r\n        <Container maxWidth='xs'>\r\n          <Typography\r\n            className={classes.lonInTopHeader}\r\n            style={{ textAlign: 'center' }}\r\n            variant='h2'\r\n          >\r\n            Reset your password password\r\n          </Typography>\r\n          <form\r\n            className={classes.loginFrom}\r\n            onSubmit={handleResetPasswordSubmit}\r\n          >\r\n            <ThemeProvider theme={theme}>\r\n              <TextField\r\n                fullWidth\r\n                margin='normal'\r\n                variant='outlined'\r\n                label='Email'\r\n                required\r\n                name='email'\r\n                type='email'\r\n                id='email'\r\n                disabled={loadingResetPassword}\r\n                autoComplete='current-email'\r\n                onChange={handleInputChange}\r\n                value={userData.email}\r\n                className={classes.emailInput}\r\n                InputProps={{\r\n                  className: classes.emailInput,\r\n                  classes: {\r\n                    notchedOutline: classes.InputBorder,\r\n                  },\r\n                }}\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                margin='normal'\r\n                variant='outlined'\r\n                label='New Password'\r\n                required\r\n                name='password'\r\n                type='password'\r\n                id='password'\r\n                disabled={loadingResetPassword}\r\n                autoComplete='current-password'\r\n                onChange={handleInputChange}\r\n                value={userData.password}\r\n                inputProps={{\r\n                  minLength: 8,\r\n                }}\r\n                className={classes.passwordInput}\r\n                InputProps={{\r\n                  className: classes.passwordInput,\r\n                  classes: {\r\n                    notchedOutline: classes.InputBorder,\r\n                  },\r\n                }}\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                margin='normal'\r\n                variant='outlined'\r\n                label='New Password Again'\r\n                required\r\n                name='passwordConfirm'\r\n                type='password'\r\n                id='passwordConfirm'\r\n                disabled={loadingResetPassword}\r\n                autoComplete='current-password'\r\n                onChange={handleInputChange}\r\n                value={userData.passwordConfirm}\r\n                inputProps={{\r\n                  minLength: 8,\r\n                }}\r\n                className={classes.passwordInput}\r\n                InputProps={{\r\n                  className: classes.passwordInput,\r\n                  classes: {\r\n                    notchedOutline: classes.InputBorder,\r\n                  },\r\n                }}\r\n              />\r\n            </ThemeProvider>\r\n\r\n            <Button\r\n              type='submit'\r\n              variant='contained'\r\n              color='primary'\r\n              className={classes.loginBtn}\r\n              fullWidth\r\n              disabled={loadingResetPassword}\r\n              endIcon={\r\n                loadingResetPassword && (\r\n                  <CircularProgress\r\n                    style={{ color: 'black', width: '20px', height: '20px' }}\r\n                  />\r\n                )\r\n              }\r\n            >\r\n              Send\r\n            </Button>\r\n          </form>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '90vw',\r\n    height: '90vh',\r\n    background: 'white',\r\n    position: 'relative',\r\n    zIndex: '2',\r\n    boxShadow: ' -2px -2px 10px grey',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    overflow: 'auto',\r\n  },\r\n  usersContainer: {\r\n    width: '100%',\r\n    padding: '20px 30px',\r\n    paddingBottom: '0',\r\n    height: '100%',\r\n    overflow: 'auto',\r\n    textAlign: 'center',\r\n\r\n    '&::-webkit-scrollbar': {\r\n      width: '5px',\r\n    },\r\n\r\n    '&::-webkit-scrollbar-thumb': {\r\n      background: '#CCCCCC',\r\n      borderRadius: '10px',\r\n    },\r\n\r\n    '&::-webkit-scrollbar-thumb:hover': {\r\n      background: '#aaa',\r\n    },\r\n  },\r\n\r\n  '@media (max-width: 1200px)': {\r\n    root: {\r\n      width: '100vw',\r\n      height: '100vh',\r\n    },\r\n  },\r\n\r\n  searchBtn: {\r\n    float: 'left',\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import { makeStyles, fade } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: '10px 0',\r\n    width: '100%',\r\n    height: '59px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    position: 'relative',\r\n    justifyContent: 'space-between',\r\n    backgroundColor: '#EDEDED',\r\n    boxShadow: '0 1px 2px #ccc',\r\n    zIndex: '10',\r\n  },\r\n\r\n  sidebarIcons: {},\r\n  userInfoBtnBase: {},\r\n  userInfo: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '10px',\r\n  },\r\n  avatarContainer: {\r\n    marginRight: '10px',\r\n  },\r\n  info: {\r\n    textAlign: 'lef',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'center',\r\n  },\r\n  name: {\r\n    width: '100px',\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    fontSize: '100%',\r\n    fontWeight: 'bold',\r\n    fontFamily: 'Noto Sans JP, sans-serif',\r\n    textAlign: 'left',\r\n    color: 'Black',\r\n  },\r\n  status: {\r\n    //? activate the next line if a problem\r\n    //! width: '150px',\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    fontFamily: 'Noto Sans JP, sans-serif',\r\n    color: '#626262',\r\n    fontSize: '90%',\r\n    textAlign: 'left',\r\n  },\r\n\r\n  search: {\r\n    marginRight: '30px',\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: 'white',\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: 'auto',\r\n    },\r\n  },\r\n\r\n  inputRoot: {\r\n    color: 'inherit',\r\n    flex: 1,\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    paddingLeft: `calc(1em + ${theme.spacing(1)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: '12ch',\r\n      '&:focus': {\r\n        width: '20ch',\r\n      },\r\n    },\r\n  },\r\n  link: {\r\n    textDecoration: 'none',\r\n  },\r\n  searchBtn: {},\r\n  searchForm: {\r\n    display: 'flex',\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Avatar, ButtonBase, InputBase, Button } from '@material-ui/core';\r\nimport useStyle from './styles';\r\nimport { Search as SearchIcon } from '@material-ui/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport { searchUsersAction } from '../../../actions/userActions';\r\n\r\nconst Header = () => {\r\n  const classes = useStyle();\r\n  const dispatch = useDispatch();\r\n\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\n  const loginUser = useSelector((s) => s.loginUser);\r\n  const { user } = loginUser;\r\n\r\n  const handleSubmitSearchFriends = (e) => {\r\n    e.preventDefault();\r\n    if (searchQuery) {\r\n      dispatch(searchUsersAction(searchQuery));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <ButtonBase className={classes.userInfoBtnBase}>\r\n        <Link className={classes.link} to='/'>\r\n          <div className={classes.userInfo}>\r\n            <div className={classes.avatarContainer}>\r\n              <Avatar src={user.photo} />\r\n            </div>\r\n            <div className={classes.info}>\r\n              <div className={classes.name}>{user.fullName}</div>\r\n              <div className={classes.status}>Me</div>\r\n            </div>\r\n          </div>\r\n        </Link>\r\n      </ButtonBase>\r\n      <div className={classes.search}>\r\n        <form\r\n          className={classes.searchForm}\r\n          onSubmit={handleSubmitSearchFriends}\r\n        >\r\n          <InputBase\r\n            placeholder='Search…'\r\n            onChange={(e) => setSearchQuery(e.target.value)}\r\n            value={searchQuery}\r\n            classes={{\r\n              root: classes.inputRoot,\r\n              input: classes.inputInput,\r\n            }}\r\n            inputProps={{ 'aria-label': 'search' }}\r\n          />\r\n          <Button\r\n            className={classes.searchBtn}\r\n            disabled={searchQuery.length === 0}\r\n            type='submit'\r\n          >\r\n            <SearchIcon />\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: '0 auto',\r\n    fontWeight: 'bold',\r\n    zIndex: '100',\r\n    width: '100%',\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport useStyle from './styles';\r\n\r\nconst Message = ({ severity, message, children, position = 'relative' }) => {\r\n  const classes = useStyle();\r\n\r\n  return (\r\n    <>\r\n      <Alert\r\n        style={{ position }}\r\n        className={classes.root}\r\n        severity={severity || 'info'}\r\n      >\r\n        {message}\r\n      </Alert>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n    margin: '20px',\r\n    display: 'inline-block',\r\n    width: '300px',\r\n    position: 'relative',\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n  userPhotoContainer: {\r\n    width: '100%',\r\n    padding: '10px',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderBottom: '1px solid #ccc',\r\n  },\r\n  userPhoto: {\r\n    width: '200px',\r\n    height: '200px',\r\n  },\r\n  userAbout: {\r\n    textAlign: 'left',\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import * as c from '../constants/roomConstants';\r\nimport * as urls from '../constants/urls';\r\nimport axios from 'axios';\r\n\r\nexport const getMyRoomsAction = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: c.GET_MY_ROOMS_REQUEST,\r\n    });\r\n    const token = `Bearer ${getState().loginUser.user.token}`;\r\n    const config = {\r\n      headers: {\r\n        authorization: token,\r\n      },\r\n    };\r\n\r\n    const {\r\n      data: { data },\r\n    } = await axios.get(`${urls.roomsUrl}/getMyRooms`, config);\r\n    dispatch({\r\n      type: c.GET_MY_ROOMS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.GET_MY_ROOMS_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const setCurrentOpenRoomAction = (currentRoomId) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const currentOpenRoomId = getState().currentOpenRoom.currentOpenRoomId;\r\n  const currentOpenRoom = getState().currentOpenRoom.currentOpenRoom;\r\n  if (currentRoomId === currentOpenRoomId && currentOpenRoom) {\r\n    return;\r\n  }\r\n  try {\r\n    // dispatch({\r\n    //   type: c.CURRENT_OPEN_ROOM_REQUEST,\r\n    // });\r\n\r\n    const token = `Bearer ${getState().loginUser.user.token}`;\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: token,\r\n      },\r\n    };\r\n\r\n    const {\r\n      data: { data },\r\n    } = await axios.get(`${urls.roomsUrl}/${currentRoomId}`, config);\r\n    dispatch({\r\n      type: c.CURRENT_OPEN_ROOM_SUCCESS,\r\n      payload: data,\r\n    });\r\n    localStorage.setItem('currentOpenRoomId', currentRoomId);\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.CURRENT_OPEN_ROOM_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\n//? when any user send message we will get rooms from server again\r\nexport const updateRoomAction = (room) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: c.UPDATE_ROOM_PUT_UP,\r\n      payload: room,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.GET_MY_ROOMS_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const acceptRoomAction = (roomId) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: c.HANDLE_ACCEPT_ROOM_REQUEST,\r\n    });\r\n    const token = `Bearer ${getState().loginUser.user.token}`;\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: token,\r\n      },\r\n    };\r\n\r\n    const {\r\n      data: { data },\r\n    } = await axios.post(\r\n      `${urls.roomsUrl}/acceptRoom`,\r\n      { room: roomId },\r\n      config\r\n    );\r\n    dispatch({\r\n      type: c.HANDLE_ACCEPT_ROOM_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.HANDLE_ACCEPT_ROOM_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const blockRoomAction = (roomId, otherUser) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: c.HANDLE_BLOCK_ROOM_REQUEST,\r\n    });\r\n    const token = `Bearer ${getState().loginUser.user.token}`;\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: token,\r\n      },\r\n    };\r\n\r\n    const {\r\n      data: { data },\r\n    } = await axios.post(\r\n      `${urls.blocksUrl}`,\r\n      { room: roomId, otherUser: otherUser },\r\n      config\r\n    );\r\n    dispatch({\r\n      type: c.HANDLE_BLOCK_ROOM_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.HANDLE_BLOCK_ROOM_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const unblockRoomAction = (roomId, otherUser) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: c.HANDLE_UNBLOCK_ROOM_REQUEST,\r\n    });\r\n    const token = `Bearer ${getState().loginUser.user.token}`;\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: token,\r\n      },\r\n    };\r\n\r\n    const {\r\n      data: { data },\r\n    } = await axios.post(\r\n      `${urls.blocksUrl}/deleteBlock`,\r\n      { room: roomId, otherUser: otherUser },\r\n      config\r\n    );\r\n    dispatch({\r\n      type: c.HANDLE_UNBLOCK_ROOM_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.HANDLE_UNBLOCK_ROOM_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateRoomWithIdAction = (roomId) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    const token = `Bearer ${getState().loginUser.user.token}`;\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: token,\r\n      },\r\n    };\r\n\r\n    const {\r\n      data: { data },\r\n    } = await axios.get(`${urls.roomsUrl}/${roomId}`, config);\r\n    dispatch({\r\n      type: c.UPDATE_ROOM_PUT_UP,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.HANDLE_ACCEPT_ROOM_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateCurrentOpenRoomAction = (acceptedRoomId) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const currentOpenRoom = getState().currentOpenRoom.currentOpenRoom;\r\n\r\n  if (currentOpenRoom && currentOpenRoom._id !== acceptedRoomId) {\r\n    return;\r\n  }\r\n  try {\r\n    const token = `Bearer ${getState().loginUser.user.token}`;\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: token,\r\n      },\r\n    };\r\n\r\n    const {\r\n      data: { data },\r\n    } = await axios.get(`${urls.roomsUrl}/${acceptedRoomId}`, config);\r\n    dispatch({\r\n      type: c.UPDATE_CURRENT_OPEN_ROOM,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem('currentRoom', JSON.stringify(data));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.HANDLE_ACCEPT_ROOM_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteRoomAction = (roomId) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: c.DELETE_ROOM_REQUEST,\r\n    });\r\n    const token = `Bearer ${getState().loginUser.user.token}`;\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: token,\r\n      },\r\n    };\r\n\r\n    const {\r\n      data: { data },\r\n    } = await axios.delete(`${urls.roomsUrl}/${roomId}`, config);\r\n    dispatch({\r\n      type: c.DELETE_ROOM_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.DELETE_ROOM_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateRoomAfterOneDeletedAction = (roomId) => (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const currentOpenRoomId =\r\n    getState().currentOpenRoom.currentOpenRoom &&\r\n    getState().currentOpenRoom.currentOpenRoom._id;\r\n  if (currentOpenRoomId === roomId) {\r\n    localStorage.removeItem('currentRoom');\r\n    dispatch({\r\n      type: c.CURRENT_OPEN_ROOM_RESET,\r\n      payload: roomId,\r\n    });\r\n  }\r\n\r\n  dispatch({\r\n    type: c.UPDATE_ROOMS_AFTER_DELETING,\r\n    payload: roomId,\r\n  });\r\n};\r\n","export const GET_MY_ROOMS_REQUEST = 'GET_MY_ROOMS_REQUEST';\r\nexport const GET_MY_ROOMS_SUCCESS = 'GET_MY_ROOMS_SUCCESS';\r\nexport const GET_MY_ROOMS_FAIL = 'GET_MY_ROOMS_FAIL';\r\nexport const GET_MY_ROOMS_RESET = 'GET_MY_ROOMS_RESET';\r\n\r\nexport const CREATE_ROOM_REQUEST = 'CREATE_ROOM_REQUEST';\r\nexport const CREATE_ROOM_SUCCESS = 'CREATE_ROOM_SUCCESS';\r\nexport const CREATE_ROOM_FAIL = 'CREATE_ROOM_FAIL';\r\nexport const CREATE_ROOM_RESET = 'CREATE_ROOM_RESET';\r\n\r\nexport const HANDLE_ACCEPT_ROOM_REQUEST = 'HANDLE_ACCEPT_ROOM_REQUEST';\r\nexport const HANDLE_ACCEPT_ROOM_SUCCESS = 'HANDLE_ACCEPT_ROOM_SUCCESS';\r\nexport const HANDLE_ACCEPT_ROOM_FAIL = 'HANDLE_ACCEPT_ROOM_FAIL';\r\n\r\nexport const HANDLE_BLOCK_ROOM_REQUEST = 'HANDLE_BLOCK_ROOM_REQUEST';\r\nexport const HANDLE_BLOCK_ROOM_SUCCESS = 'HANDLE_BLOCK_ROOM_SUCCESS';\r\nexport const HANDLE_BLOCK_ROOM_FAIL = 'HANDLE_BLOCK_ROOM_FAIL';\r\nexport const HANDLE_BLOCK_ROOM_RESET = 'HANDLE_BLOCK_ROOM_RESET';\r\n\r\nexport const HANDLE_UNBLOCK_ROOM_REQUEST = 'HANDLE_UNBLOCK_ROOM_REQUEST';\r\nexport const HANDLE_UNBLOCK_ROOM_SUCCESS = 'HANDLE_UNBLOCK_ROOM_SUCCESS';\r\nexport const HANDLE_UNBLOCK_ROOM_FAIL = 'HANDLE_UNBLOCK_ROOM_FAIL';\r\nexport const HANDLE_UNBLOCK_ROOM_RESET = 'HANDLE_UNBLOCK_ROOM_RESET';\r\n\r\nexport const DELETE_ROOM_REQUEST = 'DELETE_ROOM_REQUEST';\r\nexport const DELETE_ROOM_SUCCESS = 'DELETE_ROOM_SUCCESS';\r\nexport const DELETE_ROOM_FAIL = 'DELETE_ROOM_FAIL';\r\nexport const DELETE_ROOM_RESET = 'DELETE_ROOM_RESET';\r\n\r\nexport const CURRENT_OPEN_ROOM_REQUEST = 'CURRENT_OPEN_ROOM_REQUEST';\r\nexport const CURRENT_OPEN_ROOM_SUCCESS = 'CURRENT_OPEN_ROOM_SUCCESS';\r\nexport const CURRENT_OPEN_ROOM_FAIL = 'CURRENT_OPEN_ROOM_REQUEST';\r\nexport const CURRENT_OPEN_ROOM_RESET = 'CURRENT_OPEN_ROOM_RESET3';\r\n\r\n//? non related constants\r\nexport const UPDATE_ROOM_PUT_UP = 'UPDATE_ROOM_PUT_UP';\r\nexport const UPDATE_ROOM_WITHOUT_PUT_UP = 'UPDATE_ROOM_WITHOUT_PUT_UP';\r\nexport const UPDATE_CURRENT_OPEN_ROOM = 'UPDATE_CURRENT_OPEN_ROOM';\r\nexport const UPDATE_ROOMS_AFTER_DELETING = 'UPDATE_ROOMS_AFTER_DELETING';\r\nexport const TYPING_MESSAGE = 'TYPING_MESSAGE';\r\n//? non related constants\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport useStyles from './styles';\r\nimport { Avatar } from '@material-ui/core';\r\nimport { createRoomAction } from '../../../actions/roomActions';\r\nimport { CREATE_ROOM_RESET } from '../../../constants/roomConstants';\r\nimport Message from '../../../components/global/Message/Message';\r\nimport axios from 'axios';\r\nimport * as urls from '../../../constants/urls';\r\n\r\nconst UserCard = ({ user }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [currentCard, setCurrentCard] = useState(false);\r\n  const [createRoom, setCreateRoom] = useState({\r\n    loading: false,\r\n    success: false,\r\n    err: false,\r\n  });\r\n\r\n  const {\r\n    loading: createRoomLoading,\r\n    success: createRoomSuccess,\r\n    err: createRoomErr,\r\n  } = createRoom;\r\n\r\n  //! you may need this action outside This module\r\n  //! so you need to make it in the redux state and then pass the locale setCreateRoom state\r\n  //! to it and then let the action change createRoom state\r\n  const createRoomAction = (otherUserEmail) => async (dispatch, getState) => {\r\n    try {\r\n      setCreateRoom({\r\n        ...createRoom,\r\n        loading: true,\r\n      });\r\n      const token = `Bearer ${getState().loginUser.user.token}`;\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          authorization: token,\r\n        },\r\n      };\r\n\r\n      await axios.post(\r\n        `${urls.roomsUrl}/createNewRoom`,\r\n        { otherUserEmail },\r\n        config\r\n      );\r\n\r\n      setCreateRoom({\r\n        ...createRoom,\r\n        loading: false,\r\n        success: true,\r\n      });\r\n    } catch (err) {\r\n      const error =\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message;\r\n\r\n      setCreateRoom({\r\n        ...createRoom,\r\n        loading: false,\r\n        err: error,\r\n      });\r\n    }\r\n  };\r\n  //! end of create room action\r\n  const handleCreateChat = () => {\r\n    setCurrentCard(true);\r\n    dispatch(createRoomAction(user.email));\r\n  };\r\n\r\n  // //? for hiding success message\r\n  //! convert creating new room from redux state to react local state\r\n  useEffect(() => {\r\n    if (createRoomSuccess || createRoomErr) {\r\n      setTimeout(() => {\r\n        setCurrentCard(false);\r\n        dispatch({\r\n          type: CREATE_ROOM_RESET,\r\n        });\r\n      }, 2000);\r\n    }\r\n  }, [createRoomErr, createRoomSuccess, dispatch]);\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      {currentCard ? (\r\n        createRoomLoading ? (\r\n          <Message message='Adding chat ...' position='absolute' />\r\n        ) : createRoomErr ? (\r\n          <Message\r\n            severity='error'\r\n            message={createRoomErr}\r\n            position='absolute'\r\n          />\r\n        ) : createRoomSuccess ? (\r\n          <Message\r\n            severity='success'\r\n            message={`Request Sent to ${user.firstName.split(' ')[0]}`}\r\n            position='absolute'\r\n          />\r\n        ) : null\r\n      ) : null}\r\n\r\n      <CardActionArea>\r\n        <div className={classes.userPhotoContainer}>\r\n          <Avatar\r\n            className={classes.userPhoto}\r\n            src={user.photo}\r\n            title={user.firstName}\r\n          />\r\n        </div>\r\n\r\n        <CardContent>\r\n          <Typography\r\n            className={classes.userName}\r\n            gutterBottom\r\n            variant='h5'\r\n            component='h2'\r\n          >\r\n            {user.firstName}\r\n          </Typography>\r\n          <Typography\r\n            className={classes.userAbout}\r\n            variant='body2'\r\n            color='textSecondary'\r\n            component='p'\r\n          >\r\n            {user.about}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button onClick={handleCreateChat} size='small' color='primary'>\r\n          Create Chat\r\n        </Button>\r\n        {/* <Button size='small' color='primary'>\r\n          Learn More\r\n        </Button> */}\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UserCard;\r\n","import React from 'react';\r\nimport useStyles from './styles';\r\nimport Header from './Header/Header';\r\nimport { useSelector } from 'react-redux';\r\nimport Message from '../../components/global/Message/Message';\r\nimport UserCard from '../../components/global/UserCard/UserCard';\r\n\r\nconst AddFriend = () => {\r\n  const classes = useStyles();\r\n\r\n  const searchUsers = useSelector((s) => s.searchUsers);\r\n  const {\r\n    users,\r\n    loading: loadingSearchUsers,\r\n    err: errSearchUsers,\r\n    success: successSearchUsers,\r\n  } = searchUsers;\r\n  return (\r\n    <div className={classes.root}>\r\n      <Header />\r\n      <div className={classes.usersContainer}>\r\n        {loadingSearchUsers ? (\r\n          <Message message='Searching users' />\r\n        ) : errSearchUsers ? (\r\n          <Message severity='error' message={errSearchUsers} />\r\n        ) : users && users.length < 1 ? (\r\n          <Message message='No users' />\r\n        ) : successSearchUsers ? (\r\n          users.map((user) => <UserCard key={user._id} user={user} />)\r\n        ) : (\r\n          <Message message='Search users by name or email' />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddFriend;\r\n","import React, { useEffect } from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { userVerifyEmailAction } from '../../actions/userActions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nconst VerifyEmail = ({ history, match }) => {\r\n  const token = match.params.token;\r\n\r\n  //? defining some variables\r\n  const dispatch = useDispatch();\r\n\r\n  //? getting user data from redux\r\n  const { user } = useSelector((s) => s.loginUser);\r\n  const userVerifyEmail = useSelector((s) => s.userVerifyEmail);\r\n  const {\r\n    loading: loadingVerifyEmail = true,\r\n    success: successVerifyEmail,\r\n    err: errVerifyEmail,\r\n  } = userVerifyEmail;\r\n\r\n  //? some functions\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant='filled' {...props} />;\r\n  }\r\n\r\n  //? for verifying email\r\n  useEffect(() => {\r\n    if (user && user.email && token) {\r\n      dispatch(userVerifyEmailAction(token, user.email));\r\n    }\r\n  }, [dispatch, token, user]);\r\n\r\n  //? some useEffect functions\r\n  useEffect(() => {\r\n    if (user && user.token) {\r\n      history.push('/');\r\n    }\r\n  }, [dispatch, history, user]);\r\n\r\n  useEffect(() => {\r\n    if (successVerifyEmail) {\r\n      setTimeout(() => {\r\n        history.push('/login');\r\n      }, 2000);\r\n    }\r\n  }, [history, successVerifyEmail]);\r\n\r\n  return (\r\n    <>\r\n      {successVerifyEmail ? (\r\n        <Snackbar\r\n          open={successVerifyEmail}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='success'>Email Verified Successfully</Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {loadingVerifyEmail ? (\r\n        <Snackbar\r\n          open={loadingVerifyEmail}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='info'>Verifying your email</Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {errVerifyEmail ? (\r\n        <Snackbar\r\n          open={errVerifyEmail && true}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='error'>{errVerifyEmail}</Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default VerifyEmail;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '90vw',\r\n    height: '90vh',\r\n    // minWidth: '650px',\r\n    background: 'white',\r\n    position: 'relative',\r\n    zIndex: '2',\r\n    boxShadow: ' -2px -2px 10px grey',\r\n    display: 'flex',\r\n  },\r\n\r\n  '@media (max-width: 1200px)': {\r\n    root: {\r\n      width: '100vw',\r\n      height: '100vh',\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    overflow: 'hidden',\r\n    borderRight: '2px solid #E5E5E6',\r\n    flex: '0.35',\r\n    position: 'relative',\r\n    //? you can control width to 0 by setting flex=0 && width=0\r\n    //? for full screen remove width=0 && set flex=1\r\n    //? on large screens remove width=0 && set flex=0.35\r\n  },\r\n  open: {\r\n    width: '100%',\r\n    flex: '1',\r\n  },\r\n  closed: {\r\n    width: '0',\r\n    flex: '0',\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: '10px 0',\r\n    width: '100%',\r\n    height: '59px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    position: 'relative',\r\n    justifyContent: 'space-between',\r\n    backgroundColor: '#EDEDED',\r\n    zIndex: '10',\r\n  },\r\n  text: {\r\n    fontWeight: 'bold',\r\n    color: '#009688',\r\n  },\r\n  addChat: {\r\n    border: '1px solid #009688',\r\n    color: '#009688',\r\n  },\r\n  sidebarIcons: {\r\n    '& *': {\r\n      color: '#696969',\r\n    },\r\n  },\r\n\r\n  menuItem: {\r\n    fontWeight: 'bold',\r\n\r\n    '& a': {\r\n      textDecoration: 'none',\r\n      color: 'black',\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '90vw',\r\n    height: '90vh',\r\n  },\r\n\r\n  dialogContent: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-evenly',\r\n    padding: '30px 0',\r\n    backgroundColor: '#f1f1f1',\r\n  },\r\n  link: {\r\n    color: '#333333',\r\n    textDecoration: 'none',\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport useStyle from './styles.js';\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  ButtonBase,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AddFriends = ({ open, setOpen }) => {\r\n  const classes = useStyle();\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth={true}\r\n      maxWidth='xs'\r\n      open={open}\r\n      onClose={handleCloseDialog}\r\n      aria-labelledby='form-dialog-title'\r\n    >\r\n      <DialogContent className={classes.dialogContent}>\r\n        <ButtonBase>\r\n          <Link className={classes.link} to='/addFriend'>\r\n            <Card>\r\n              <CardContent>\r\n                <PersonAddIcon className={classes.addFriendIcon} />\r\n                <Typography>Add Friend</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Link>\r\n        </ButtonBase>\r\n        <ButtonBase>\r\n          <Card>\r\n            <CardContent>\r\n              <GroupAddIcon className={classes.addFriendIcon} />\r\n              <Typography>Join Group</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </ButtonBase>\r\n        <ButtonBase>\r\n          <Card>\r\n            <CardContent>\r\n              <GroupAddIcon className={classes.addFriendIcon} />\r\n              <Typography>Create Group</Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </ButtonBase>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AddFriends;\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Avatar, IconButton, Menu, MenuItem } from '@material-ui/core';\r\nimport { Add } from '@material-ui/icons';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport useStyle from './styles';\r\nimport { logoutUser } from '../../../actions/userActions';\r\nimport AddChats from './AddChats/AddChats';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = ({ setOpenUpdateMe }) => {\r\n  const classes = useStyle();\r\n  const dispatch = useDispatch();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const loginUser = useSelector((s) => s.loginUser);\r\n  const { user } = loginUser;\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logoutUser());\r\n  };\r\n\r\n  //? for 3 dots menu\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const openMenu = Boolean(anchorEl);\r\n  const ITEM_HEIGHT = 48;\r\n\r\n  const handleOpenMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseMenu = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  //? end for 3 dots menu\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton onClick={() => setOpenUpdateMe(true)}>\r\n        <Avatar src={`${user.photo}`} />\r\n      </IconButton>\r\n      {/* <span>{user.firstName}</span> */}\r\n      <div className={classes.sidebarIcons}>\r\n        <AddChats open={open} setOpen={setOpen} />\r\n\r\n        <IconButton onClick={() => setOpen(true)} className={classes.addChat}>\r\n          <Add />\r\n        </IconButton>\r\n        {/* <IconButton>\r\n          <ChatIcon />\r\n        </IconButton> */}\r\n        <IconButton\r\n          aria-label='more'\r\n          aria-controls='long-menu'\r\n          aria-haspopup='true'\r\n          onClick={handleOpenMenu}\r\n        >\r\n          <MoreVertIcon />\r\n        </IconButton>\r\n        <div>\r\n          <Menu\r\n            id='long-menu'\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={openMenu}\r\n            onClose={handleCloseMenu}\r\n            PaperProps={{\r\n              style: {\r\n                maxHeight: ITEM_HEIGHT * 4.5,\r\n                width: '20ch',\r\n              },\r\n            }}\r\n          >\r\n            <MenuItem\r\n              onClick={() => {\r\n                handleLogout();\r\n                handleCloseMenu();\r\n              }}\r\n              className={classes.menuItem}\r\n            >\r\n              Logout\r\n            </MenuItem>\r\n            <MenuItem className={classes.menuItem}>\r\n              <Link to='/contactMe'> About Us</Link>\r\n            </MenuItem>\r\n          </Menu>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export const GET_ROOM_MESSAGES_REQUEST = 'GET_ROOM_MESSAGES_REQUEST';\r\nexport const GET_ROOM_MESSAGES_SUCCESS = 'GET_ROOM_MESSAGES_SUCCESS';\r\nexport const GET_ROOM_MESSAGES_FAIL = 'GET_ROOM_MESSAGES_FAIL';\r\nexport const GET_ROOM_MESSAGES_RESET = 'GET_ROOM_MESSAGES_RESET';\r\n\r\nexport const CREATE_MESSAGE_REQUEST = 'CREATE_MESSAGE_REQUEST';\r\nexport const CREATE_MESSAGE_SUCCESS = 'CREATE_MESSAGE_SUCCESS';\r\nexport const CREATE_MESSAGE_FAIL = 'CREATE_MESSAGE_FAIL';\r\nexport const CREATE_MESSAGE_RESET = 'CREATE_MESSAGE_RESET';\r\n\r\nexport const UPDATE_DISPLAYED_MESSAGES = 'UPDATE_DISPLAYED_MESSAGES';\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '49px',\r\n    width: '100%',\r\n    backgroundColor: '#F6F6F6',\r\n    padding: '10px',\r\n    boxShadow: '0 1px 2px #ccc',\r\n    borderBottom: '1px solid #bbb',\r\n  },\r\n  main: {\r\n    background: 'white',\r\n    width: '100%',\r\n    height: '100%',\r\n    borderRadius: '20px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n    padding: '2px 10px',\r\n  },\r\n  searchBox: {\r\n    width: '100%',\r\n    height: '100%',\r\n    outline: '0',\r\n    border: 'none',\r\n  },\r\n  searchIcon: {\r\n    color: '#919191',\r\n    marginRight: '8px',\r\n    fontSize: '20px',\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport useStyle from './styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst SearchBox = () => {\r\n  const classes = useStyle();\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.main}>\r\n        <SearchIcon className={classes.searchIcon} />\r\n        <input\r\n          placeholder='Search chats...'\r\n          className={classes.searchBox}\r\n          type='text'\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flex: 1,\r\n    overflow: 'auto',\r\n    '&::-webkit-scrollbar': {\r\n      width: '5px',\r\n    },\r\n\r\n    '&::-webkit-scrollbar-thumb': {\r\n      background: '#CCCCCC',\r\n      borderRadius: '10px',\r\n    },\r\n\r\n    '&::-webkit-scrollbar-thumb:hover': {\r\n      background: '#aaa',\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  btnBase: {\r\n    padding: 0,\r\n    margin: 0,\r\n    width: '100%',\r\n    height: '72px',\r\n  },\r\n  root: {\r\n    width: '100%',\r\n    height: '72px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    cursor: 'pointer',\r\n    borderBottom: '1px solid #F5F5F5',\r\n    '&:hover': {\r\n      background: '#F5F5F5',\r\n    },\r\n    overflow: 'hidden',\r\n  },\r\n\r\n  avatarContainer: {\r\n    padding: '0 10px',\r\n  },\r\n  info: {\r\n    flex: 1,\r\n    padding: '15px 10px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  infoTop: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    marginBottom: '7px',\r\n    width: '100%',\r\n  },\r\n  name: {\r\n    flex: '0.60',\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    fontSize: '100%',\r\n    fontWeight: 'bold',\r\n    fontFamily: 'Noto Sans JP, sans-serif',\r\n    textAlign: 'left',\r\n    height: '100%',\r\n  },\r\n\r\n  date: {\r\n    flex: '0.40',\r\n    fontSize: '12px',\r\n    color: '#878787',\r\n    fontWeight: 'bold',\r\n    height: '100%',\r\n  },\r\n  lastMsg: {\r\n    width: '150px',\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    fontFamily: 'Noto Sans JP, sans-serif',\r\n    color: '#626262',\r\n    fontSize: '90%',\r\n    textAlign: 'left',\r\n  },\r\n  newChat: {\r\n    color: '#009688',\r\n    // fontWeight: 'bold',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  newChatIcon: {\r\n    fontSize: '18px',\r\n    color: '#FF5232',\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport useStyle from './styles';\r\nimport { Avatar, ButtonBase } from '@material-ui/core';\r\nimport { setCurrentOpenRoomAction } from '../../../../actions/roomActions';\r\nimport moment from 'moment';\r\nimport { setCurrentChattingUserData } from '../../../../actions/userActions';\r\nimport NewReleasesIcon from '@material-ui/icons/NewReleases';\r\n\r\nconst ChatGo = ({ room, setOpenChatBox, setOpenSideBar }) => {\r\n  const classes = useStyle();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSetCurrentRoom = () => {\r\n    setOpenChatBox(true);\r\n    setOpenSideBar(false);\r\n    const userObj = {\r\n      userId: room.userToShowOnRoom._id,\r\n    };\r\n    dispatch(setCurrentChattingUserData(userObj, { type: 'new' }));\r\n    dispatch(setCurrentOpenRoomAction(room._id));\r\n    const messageInput = document.getElementById('new-message-input');\r\n    messageInput && messageInput.focus();\r\n  };\r\n  return (\r\n    <ButtonBase\r\n      disabled={!room.userToShowOnRoom && true}\r\n      onClick={handleSetCurrentRoom}\r\n      className={classes.btnBase}\r\n    >\r\n      <div className={classes.root}>\r\n        <div className={classes.avatarContainer}>\r\n          <Avatar\r\n            src={room.userToShowOnRoom ? room.userToShowOnRoom.photo : 'red'}\r\n          />\r\n        </div>\r\n        <div className={classes.info}>\r\n          <div className={classes.infoTop}>\r\n            <div className={classes.name}>{`${\r\n              room.userToShowOnRoom\r\n                ? room.userToShowOnRoom.fullName\r\n                : 'Deleted User'\r\n            }`}</div>\r\n            <div className={classes.date}>\r\n              {moment(room.lastMessage.createdAt).format('hh:mm A')}\r\n            </div>\r\n          </div>\r\n\r\n          <div className={classes.lastMsg}>\r\n            {room.new ? (\r\n              <span className={classes.newChat}>\r\n                <NewReleasesIcon className={classes.newChatIcon} /> New\r\n              </span>\r\n            ) : (\r\n              <span>{room.lastMessage.messageTXT}</span>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ButtonBase>\r\n  );\r\n};\r\n\r\nexport default ChatGo;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useStyle from './styles';\r\nimport ChatGo from './ChatGo/ChatGo';\r\nimport { getMyRoomsAction } from '../../../actions/roomActions';\r\nimport Message from '../../global/Message/Message';\r\n\r\nconst ChatsContainer = ({ setOpenChatBox, setOpenSideBar }) => {\r\n  const classes = useStyle();\r\n  const dispatch = useDispatch();\r\n  const myRooms = useSelector((s) => s.myRooms);\r\n  const {\r\n    loading: loadingMyRooms = true,\r\n    rooms,\r\n    err: errGettingMyRooms,\r\n  } = myRooms;\r\n\r\n  useEffect(() => {\r\n    dispatch(getMyRoomsAction());\r\n  }, [dispatch]);\r\n  return (\r\n    <>\r\n      <div className={classes.root}>\r\n        {loadingMyRooms ? (\r\n          <Message message='Loading Chats ...' />\r\n        ) : errGettingMyRooms ? (\r\n          <Message severity='error' message={errGettingMyRooms} />\r\n        ) : rooms.length < 1 ? (\r\n          <Message message=\"You don't have chats yet 😊\" />\r\n        ) : (\r\n          rooms.map((room) => (\r\n            <ChatGo\r\n              key={room._id}\r\n              room={room}\r\n              setOpenChatBox={setOpenChatBox}\r\n              setOpenSideBar={setOpenSideBar}\r\n            />\r\n          ))\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatsContainer;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'absolute',\r\n    top: '0',\r\n    left: '0',\r\n    width: '100%',\r\n    height: '100%',\r\n    zIndex: '200',\r\n    overflow: 'auto',\r\n    backgroundColor: '#EDEDED',\r\n    '&::-webkit-scrollbar': {\r\n      width: '5px',\r\n    },\r\n\r\n    '&::-webkit-scrollbar-thumb': {\r\n      background: '#CCCCCC',\r\n      borderRadius: '10px',\r\n    },\r\n\r\n    '&::-webkit-scrollbar-thumb:hover': {\r\n      background: '#aaa',\r\n    },\r\n  },\r\n  closed: {\r\n    left: '-100%',\r\n  },\r\n  header: {\r\n    padding: '10px',\r\n    paddingBottom: '20px',\r\n    width: '100%',\r\n    height: '108px',\r\n    display: 'flex',\r\n    alignItems: 'flex-end',\r\n    justifyContent: 'space-between',\r\n    position: 'relative',\r\n    backgroundColor: '#00BFA5',\r\n    zIndex: '10',\r\n    color: 'white',\r\n    fontSize: '19px',\r\n  },\r\n  saveChangesContainer: {\r\n    position: 'relative',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  saveChanges: {\r\n    position: 'relative',\r\n    color: 'black',\r\n    '& *': {\r\n      fontSize: '30px',\r\n    },\r\n  },\r\n  savingUpdatingChanges: {\r\n    position: 'absolute',\r\n  },\r\n\r\n  profilePhotoContainer: {\r\n    width: '100%',\r\n    backgroundColor: '#EDEDED',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: '20px',\r\n  },\r\n\r\n  photoContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'center',\r\n  },\r\n\r\n  photoInput: {\r\n    display: 'none',\r\n  },\r\n  inputLabel: {\r\n    width: '200px',\r\n    height: '200px',\r\n    borderRadius: '50%',\r\n    backgroundColor: '#eee',\r\n    border: '2px solid #ddd',\r\n    cursor: 'pointer',\r\n    '&>div:hover': {\r\n      opacity: '1',\r\n    },\r\n  },\r\n  cameraIconContainer: {\r\n    position: 'relative',\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    opacity: '0.5',\r\n    '&>*': {\r\n      width: '70%',\r\n      height: '70%',\r\n      position: 'absolute',\r\n    },\r\n  },\r\n  avatarContainer: {\r\n    width: '100%',\r\n    height: '100%',\r\n    position: 'relative',\r\n    '&:hover>.controllersContainer': {\r\n      opacity: '1',\r\n    },\r\n    '& .MuiAvatar-root': {\r\n      width: '100%',\r\n      height: '100%',\r\n    },\r\n  },\r\n  controllersContainer: {\r\n    width: '100%',\r\n    height: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    position: 'absolute',\r\n    zIndex: '10',\r\n    overflow: 'hidden',\r\n    borderRadius: '50%',\r\n    opacity: '0',\r\n  },\r\n  resetPhotoBtn: {\r\n    opacity: '0.3',\r\n    width: '100%',\r\n    height: '50%',\r\n    backgroundColor: 'rgba(255,0,0,0.5)',\r\n    color: 'white',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    fontSize: '10px',\r\n    '&:hover': {\r\n      opacity: '1',\r\n    },\r\n    '&>*': {\r\n      width: '90%',\r\n      height: '90%',\r\n    },\r\n  },\r\n  uploadNewPhoto: {\r\n    opacity: '0.3',\r\n    width: '100%',\r\n    height: '50%',\r\n    backgroundColor: 'rgba(0,0,255,0.5)',\r\n    color: 'white',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    cursor: 'pointer',\r\n    alignItems: 'center',\r\n    fontSize: '10px',\r\n    '&:hover': {\r\n      opacity: '1',\r\n    },\r\n    '&>*': {\r\n      width: '90%',\r\n      height: '90%',\r\n    },\r\n  },\r\n\r\n  profileImage: {\r\n    position: 'absolute',\r\n    zIndex: '1',\r\n    width: '100%',\r\n    height: '100%',\r\n    borderRadius: '50%',\r\n  },\r\n\r\n  nameContainer: {\r\n    width: '100%',\r\n    // height: '100px',\r\n    backgroundColor: '#ffffff',\r\n    padding: '10px 15px',\r\n    paddingBottom: '20px',\r\n    boxShadow: '0 1px 3px #ccc, 0 -1px 3px #ccc ',\r\n  },\r\n  yourNameTXT: {\r\n    color: '#009688',\r\n  },\r\n  firstName: {\r\n    padding: '0 5px',\r\n  },\r\n  InputBorder: {\r\n    colorSecondary: '#019688',\r\n  },\r\n  firstNameInput: {\r\n    fontWeight: 'bold',\r\n    '& >.MuiInputLabel-outlined': {\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  aboutContainer: {\r\n    width: '100%',\r\n    backgroundColor: '#ffffff',\r\n    padding: '10px 15px',\r\n    marginTop: '10px',\r\n    paddingBottom: '20px',\r\n    boxShadow: '0 1px 3px #ccc, 0 -1px 3px #ccc ',\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport useStyle from './styles';\r\nimport {\r\n  IconButton,\r\n  CircularProgress,\r\n  Avatar,\r\n  TextField,\r\n  ThemeProvider,\r\n  createMuiTheme,\r\n} from '@material-ui/core';\r\nimport { ArrowBack, CameraAlt, Close, Publish, Save } from '@material-ui/icons';\r\nimport axios from 'axios';\r\nimport * as urls from '../../../constants/urls';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { updateMeAction } from '../../../actions/userActions';\r\nimport { UPDATE_USER_RESET } from '../../../constants/userConstants';\r\nimport Message from '../../global/Message/Message';\r\n\r\nconst UpdateMe = ({ open, setOpenUpdateMe }) => {\r\n  const classes = useStyle();\r\n  const dispatch = useDispatch();\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      primary: green,\r\n    },\r\n  });\r\n\r\n  const loginUser = useSelector((s) => s.loginUser);\r\n  const { user } = loginUser;\r\n\r\n  const updateMe = useSelector((s) => s.updateMe);\r\n  const {\r\n    loading: loadingUpdateMe,\r\n    success: successUpdateMe,\r\n    err: errUpdateMe,\r\n  } = updateMe;\r\n\r\n  const [userData, setUserData] = useState({\r\n    firstName: '',\r\n    about: '',\r\n    photo: '',\r\n  });\r\n  const [uploading, setUploading] = useState(false);\r\n  const [dataChanged, setDataChanged] = useState(false);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUserData({\r\n      ...userData,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSaveChanges = () => {\r\n    dispatch(updateMeAction(userData));\r\n  };\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    if (!e.target.value) return;\r\n    setUserData({ ...userData, photo: '' });\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append('photo', file);\r\n    setUploading(true);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        `${urls.host}/api/v1/uploadProfilePhotoRoute`,\r\n        formData,\r\n        config\r\n      );\r\n      setUserData({ ...userData, photo: data.path });\r\n      setUploading(false);\r\n    } catch (err) {\r\n      alert('ERROR UPLOADING YOUR IMAGE');\r\n      console.log(err);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  //? for setting local state to user data from server\r\n  useEffect(() => {\r\n    setUserData(user);\r\n  }, [user]);\r\n  //? for checking if user changed his data or not\r\n  useEffect(() => {\r\n    if (\r\n      userData.firstName.trim() !== user.firstName.trim() ||\r\n      userData.about.trim() !== user.about.trim() ||\r\n      userData.photo !== user.photo\r\n    ) {\r\n      setDataChanged(true);\r\n    } else {\r\n      setDataChanged(false);\r\n    }\r\n  }, [userData]);\r\n\r\n  //? for resetting updateUser\r\n  useEffect(() => {\r\n    if (successUpdateMe) {\r\n      dispatch({\r\n        type: UPDATE_USER_RESET,\r\n      });\r\n      setOpenUpdateMe(false);\r\n    }\r\n  }, [dispatch, successUpdateMe]);\r\n\r\n  return (\r\n    <div className={classes.root + ' ' + (open ? '' : classes.closed)}>\r\n      {errUpdateMe && <Message severity='error' message={errUpdateMe} />}\r\n      <div className={classes.header}>\r\n        <div>\r\n          <IconButton\r\n            style={{ color: 'white' }}\r\n            onClick={() => setOpenUpdateMe(false)}\r\n          >\r\n            <ArrowBack />\r\n          </IconButton>{' '}\r\n          Profile\r\n        </div>\r\n        {/* //? here just make the color different when the button is ready to be clicked on */}\r\n        <div className={classes.saveChangesContainer}>\r\n          {loadingUpdateMe && (\r\n            <CircularProgress\r\n              className={classes.savingUpdatingChanges}\r\n              color='secondary'\r\n            />\r\n          )}\r\n          <IconButton\r\n            disabled={!dataChanged || loadingUpdateMe}\r\n            title='Save changes'\r\n            className={classes.saveChanges}\r\n            onClick={handleSaveChanges}\r\n          >\r\n            <Save />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <div className={classes.content}>\r\n        <section className={classes.profilePhotoContainer}>\r\n          <input\r\n            type='file'\r\n            id='profile-photo'\r\n            label='Choose your image'\r\n            onChange={uploadFileHandler}\r\n            accept='image/*'\r\n            className={classes.photoInput}\r\n          />\r\n          <label htmlFor='profile-photo' className={classes.inputLabel}>\r\n            <div\r\n              style={userData.photo ? { display: 'none' } : {}}\r\n              className={classes.cameraIconContainer}\r\n            >\r\n              <CameraAlt style={uploading ? { display: 'none' } : {}} />\r\n              <CircularProgress\r\n                style={!uploading ? { display: 'none' } : {}}\r\n                className={classes.photoUploading}\r\n                color='secondary'\r\n              />\r\n            </div>\r\n            <div\r\n              style={userData.photo ? {} : { display: 'none' }}\r\n              className={classes.avatarContainer}\r\n            >\r\n              <div\r\n                className={\r\n                  classes.controllersContainer + ' controllersContainer'\r\n                }\r\n              >\r\n                <label\r\n                  htmlFor='profile-photo'\r\n                  title='Upload new photo'\r\n                  // onClick={(e) => {\r\n                  //   setUserData({ ...userData, photo: '' });\r\n                  //   e.preventDefault();\r\n                  //   e.stopPropagation();\r\n                  // }}\r\n                  className={classes.uploadNewPhoto}\r\n                >\r\n                  <Publish />\r\n                </label>\r\n                <span\r\n                  title='Remove this photo'\r\n                  onClick={(e) => {\r\n                    setUserData({ ...userData, photo: '' });\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                  }}\r\n                  className={classes.resetPhotoBtn}\r\n                >\r\n                  <Close />\r\n                </span>\r\n              </div>\r\n\r\n              <Avatar\r\n                src={userData.photo}\r\n                alt='user profile'\r\n                className={classes.profileImage}\r\n              />\r\n            </div>\r\n          </label>\r\n        </section>\r\n        <section className={classes.nameContainer}>\r\n          <header className={classes.yourNameTXT}>Your Name</header>\r\n          <ThemeProvider theme={theme}>\r\n            <TextField\r\n              fullWidth\r\n              margin='normal'\r\n              variant='standard'\r\n              label='Name'\r\n              required\r\n              name='firstName'\r\n              type='text'\r\n              id='firstName'\r\n              autoComplete='first-name'\r\n              onChange={handleInputChange}\r\n              value={userData.firstName}\r\n              className={classes.firstName}\r\n              InputProps={{\r\n                className: classes.firstNameInput,\r\n                classes: {\r\n                  // notchedOutline: classes.InputBorder,\r\n                },\r\n              }}\r\n            />\r\n          </ThemeProvider>\r\n        </section>\r\n        <section className={classes.aboutContainer}>\r\n          <header className={classes.yourNameTXT}>About</header>\r\n          <ThemeProvider theme={theme}>\r\n            <TextField\r\n              fullWidth\r\n              margin='normal'\r\n              variant='standard'\r\n              label='About'\r\n              required\r\n              name='about'\r\n              type='text'\r\n              id='about'\r\n              autoComplete='about'\r\n              onChange={handleInputChange}\r\n              value={userData.about}\r\n              className={classes.firstName}\r\n              InputProps={{\r\n                className: classes.firstNameInput,\r\n                classes: {\r\n                  // notchedOutline: classes.InputBorder,\r\n                },\r\n              }}\r\n            />\r\n          </ThemeProvider>\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateMe;\r\n","import React, { useState } from 'react';\r\nimport useStyle from './styles';\r\nimport Header from './Header/Header';\r\nimport SearchBox from './SearchBox/SearchBox';\r\nimport ChatsContainer from './ChatsContainer/ChatsContainer';\r\nimport UpdateMe from './UpdateMe/UpdateMe';\r\n\r\nconst Sidebar = ({ open, smallScreen, setOpenChatBox, setOpenSideBar }) => {\r\n  const classes = useStyle();\r\n  const [openUpdateMe, setOpenUpdateMe] = useState(false);\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        classes.root +\r\n        ' ' +\r\n        (smallScreen ? (open ? classes.open : classes.closed) : '')\r\n      }\r\n    >\r\n      <Header setOpenUpdateMe={setOpenUpdateMe} />\r\n      <SearchBox />\r\n      <ChatsContainer\r\n        setOpenChatBox={setOpenChatBox}\r\n        setOpenSideBar={setOpenSideBar}\r\n      />\r\n      {/* Update me component */}\r\n      <UpdateMe setOpenUpdateMe={setOpenUpdateMe} open={openUpdateMe} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    background: '#F8F9FA',\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    flex: '0.65',\r\n    //? you can control width to 0 by setting flex=0 && width=0\r\n    //? for full screen remove width=0 && set flex=1\r\n    //? on large screens remove width=0 && set flex=0.65\r\n  },\r\n  closed: {\r\n    flex: 0,\r\n    width: 0,\r\n  },\r\n  open: {\r\n    width: '100%',\r\n    flex: '1',\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    height: '100%',\r\n    backgroundColor: '#F8F9FA',\r\n    borderBottom: '10px solid #4ADF83',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n  },\r\n  mainLogo: {\r\n    width: '250px',\r\n    height: '250px',\r\n  },\r\n  mainText: {\r\n    marginTop: '28px',\r\n    fontSize: '32px',\r\n    color: '#525252',\r\n    fontWeight: '300',\r\n    fontFamily: 'Noto Sans JP, sans-serif',\r\n    textAlign: 'center',\r\n    padding: '0 20px',\r\n  },\r\n  subTitle: {\r\n    fontSize: '14px',\r\n    color: '#888989',\r\n    fontFamily: 'Noto Sans JP, sans-serif',\r\n    textAlign: 'center',\r\n    lineHeight: '20px',\r\n    marginTop: '25px',\r\n    padding: '0 50px',\r\n  },\r\n  contactMe: {\r\n    marginTop: '20px',\r\n    fontSize: '20px',\r\n    color: '#525252',\r\n    fontWeight: '300',\r\n    fontFamily: 'Noto Sans JP, sans-serif',\r\n    textAlign: 'center',\r\n    padding: '0 20px',\r\n    '&>a': {\r\n      color: '#009688',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport useStyle from './styles';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NoChat = () => {\r\n  const classes = useStyle();\r\n  return (\r\n    <div className={classes.root}>\r\n      <img\r\n        className={classes.mainLogo}\r\n        src='/images/other/noChatImg.jpg'\r\n        alt='main logo'\r\n      />\r\n      <h1 className={classes.mainText}>Welcome to WhatsApp Clone</h1>\r\n      <div className={classes.subTitle}>\r\n        This is a testing WhatsApp version, not for profiting purposes. <br />\r\n      </div>\r\n      <h1 className={classes.contactMe}>\r\n        Fully programmed by Amr Mohammed Hassan{' '}\r\n        <Link to='/contactMe'>Contact Me</Link>\r\n      </h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoChat;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    height: '100%',\r\n    flexDirection: 'column',\r\n    backgroundColor: '#E5DDD5',\r\n    position: 'relative',\r\n  },\r\n  bgObjects: {\r\n    backgroundImage: 'url(\"./images/other/chat_default_background.png\")',\r\n    backgroundSize: 'contain',\r\n    backgroundColor: '#E5DDD5',\r\n    backgroundPosition: 'fixed',\r\n\r\n    position: 'absolute',\r\n    zIndex: '0',\r\n    top: '0',\r\n    left: '0',\r\n    width: '100%',\r\n    height: '100%',\r\n    opacity: '0.1',\r\n  },\r\n  acceptChat: {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    padding: '10px 15px',\r\n    '&>button': {\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: '10px 0',\r\n    width: '100%',\r\n    height: '59px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    position: 'relative',\r\n    justifyContent: 'space-between',\r\n    backgroundColor: '#EDEDED',\r\n    boxShadow: '0 1px 2px #ccc',\r\n    zIndex: '10',\r\n  },\r\n\r\n  sidebarIcons: {},\r\n  userInfoBtnBase: {},\r\n  userInfo: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '10px',\r\n  },\r\n  avatarContainer: {\r\n    marginRight: '10px',\r\n  },\r\n  info: {\r\n    textAlign: 'lef',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'center',\r\n  },\r\n  name: {\r\n    width: '100px',\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    fontSize: '100%',\r\n    fontWeight: 'bold',\r\n    fontFamily: 'Noto Sans JP, sans-serif',\r\n    textAlign: 'left',\r\n  },\r\n  status: {\r\n    //? activate the next line if a problem\r\n    //! width: '150px',\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    fontFamily: 'Noto Sans JP, sans-serif',\r\n    color: '#626262',\r\n    fontSize: '90%',\r\n    textAlign: 'left',\r\n  },\r\n\r\n  '@media (min-width: 600px)': {\r\n    openSideBar: {\r\n      display: 'none',\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Avatar,\r\n  IconButton,\r\n  ButtonBase,\r\n  Menu,\r\n  MenuItem,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  DialogContentText,\r\n} from '@material-ui/core';\r\nimport Search from '@material-ui/icons/Search';\r\nimport { ArrowBack } from '@material-ui/icons';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport useStyle from './styles';\r\nimport moment from 'moment';\r\nimport {\r\n  deleteRoomAction,\r\n  blockRoomAction,\r\n  unblockRoomAction,\r\n} from '../../../../actions/roomActions';\r\nimport { setCurrentChattingUserData } from '../../../../actions/userActions';\r\n\r\nconst Header = ({\r\n  currentOpenRoom,\r\n  setOpenUserInfo,\r\n  setOpenSideBar,\r\n  setOpenChatBox,\r\n}) => {\r\n  const classes = useStyle();\r\n  const dispatch = useDispatch();\r\n\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n\r\n  const userData = useSelector((s) => s.currentChattingUserData);\r\n  const { status } = userData;\r\n\r\n  // const viewLastSeen = () => {\r\n  //   const date = moment(userData.lastSeenAt).format('hh:mm A');\r\n  //   const today = new Date().getDay\r\n  //   const content = `Last seen at ${date}`;\r\n\r\n  //   return content;\r\n  // };\r\n  const viewLastSeen = () => {\r\n    //? for getting the day before the day given\r\n    const getYesterday = (today) => {\r\n      //? i will give it today and it will return the after that\r\n      //? today may be [0, 1, 2, 3, 4, 5, 6]\r\n      if (today === 0) {\r\n        return 6;\r\n      }\r\n      return today - 1;\r\n    };\r\n\r\n    //? the custom date\r\n    const customDate = new Date(userData.lastSeenAt);\r\n    const hour = moment(userData.lastSeenAt).format('hh:mm A');\r\n    const customDateObj = {\r\n      day: customDate.getDate(),\r\n      month: customDate.getMonth(),\r\n      year: customDate.getFullYear(),\r\n    };\r\n    //? now date\r\n    const now = new Date(Date.now());\r\n    const nowObj = {\r\n      day: now.getDate(),\r\n      month: now.getMonth(),\r\n      year: now.getFullYear(),\r\n    };\r\n    //? the difference in days\r\n    const differenceDays =\r\n      (new Date(now - customDate) - new Date('1970-01-01')) /\r\n      1000 /\r\n      60 /\r\n      60 /\r\n      24;\r\n\r\n    const dayString = (now, customObj, customDate) => {\r\n      if (\r\n        now.day === customObj.day &&\r\n        now.month === customObj.month &&\r\n        now.year === customObj.year\r\n      ) {\r\n        return 'Today';\r\n      } else if (\r\n        getYesterday(now.day) === customObj.day &&\r\n        now.month === customObj.month &&\r\n        now.year === customObj.year\r\n      ) {\r\n        return 'Yesterday';\r\n      } else if (differenceDays <= 7 && differenceDays > 0) {\r\n        //! adding the days for the last week\r\n        const days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n        return days[customDate.getDay()];\r\n      } else if (differenceDays < 0) {\r\n        return 'The custom date is in the future';\r\n      } else {\r\n        return moment(customDate).format('YYYY-MM-DD');\r\n      }\r\n    };\r\n\r\n    return `Seen ${dayString(nowObj, customDateObj, customDate)} At ${hour}`;\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  const handleDeleteChat = () => {\r\n    dispatch(deleteRoomAction(currentOpenRoom._id));\r\n  };\r\n\r\n  const handleBlock = () => {\r\n    dispatch(\r\n      blockRoomAction(currentOpenRoom._id, currentOpenRoom.userToShowOnRoom._id)\r\n    );\r\n    handleCloseMenu();\r\n  };\r\n  const handleUnblock = () => {\r\n    dispatch(\r\n      unblockRoomAction(\r\n        currentOpenRoom._id,\r\n        currentOpenRoom.userToShowOnRoom._id\r\n      )\r\n    );\r\n    handleCloseMenu();\r\n  };\r\n\r\n  const handleOpenSideBar = () => {\r\n    setOpenSideBar(true);\r\n    setOpenChatBox(false);\r\n  };\r\n\r\n  //? for 3 dots menu\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const openMenu = Boolean(anchorEl);\r\n  const ITEM_HEIGHT = 48;\r\n\r\n  const handleOpenMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseMenu = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  //? end for 3 dots menu\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      setCurrentChattingUserData(\r\n        { userId: userData._id },\r\n        { type: 'new', force: true }\r\n      )\r\n    );\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [dispatch]);\r\n  return (\r\n    <>\r\n      <div className={classes.root}>\r\n        <div>\r\n          <IconButton\r\n            className={classes.openSideBar}\r\n            size='small'\r\n            onClick={handleOpenSideBar}\r\n          >\r\n            <ArrowBack />\r\n          </IconButton>\r\n          <ButtonBase\r\n            onClick={() => setOpenUserInfo(true)}\r\n            className={classes.userInfoBtnBase}\r\n          >\r\n            <div className={classes.userInfo}>\r\n              <div className={classes.avatarContainer}>\r\n                <Avatar src={userData.photo} />\r\n              </div>\r\n              <div className={classes.info}>\r\n                <div className={classes.name}>{userData.fullName}</div>\r\n                <div className={classes.status}>\r\n                  {status && status === 'startTyping'\r\n                    ? 'Typing ...'\r\n                    : status === 'online'\r\n                    ? 'Online'\r\n                    : status === 'offline'\r\n                    ? viewLastSeen()\r\n                    : status === 'stopTyping'\r\n                    ? 'Online'\r\n                    : ''}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </ButtonBase>\r\n        </div>\r\n\r\n        <div className={classes.sidebarIcons}>\r\n          <IconButton>\r\n            <Search />\r\n          </IconButton>\r\n\r\n          <IconButton onClick={handleOpenMenu}>\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n          <div>\r\n            <Menu\r\n              id='long-menu'\r\n              anchorEl={anchorEl}\r\n              keepMounted\r\n              open={openMenu}\r\n              onClose={handleCloseMenu}\r\n              PaperProps={{\r\n                style: {\r\n                  maxHeight: ITEM_HEIGHT * 4.5,\r\n                  width: '20ch',\r\n                },\r\n              }}\r\n            >\r\n              <MenuItem\r\n                onClick={() => {\r\n                  setOpenDialog(true);\r\n                  handleCloseMenu();\r\n                }}\r\n                className={classes.menuItem}\r\n              >\r\n                Delete Chat\r\n              </MenuItem>\r\n              <MenuItem\r\n                onClick={currentOpenRoom.myBlock ? handleUnblock : handleBlock}\r\n                className={classes.menuItem}\r\n              >\r\n                {currentOpenRoom.myBlock ? 'Unblock' : 'Block'}\r\n              </MenuItem>\r\n            </Menu>\r\n          </div>\r\n\r\n          <Dialog\r\n            open={openDialog}\r\n            keepMounted\r\n            onClose={handleCloseDialog}\r\n            aria-labelledby='alert-dialog-slide-title'\r\n            aria-describedby='alert-dialog-slide-description'\r\n          >\r\n            <DialogTitle id='alert-dialog-slide-title'>\r\n              Delete Chat with {currentOpenRoom.userToShowOnRoom.fullName}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText id='alert-dialog-slide-description'>\r\n                Are you sure you want to deleted this chat.\r\n                <span\r\n                  style={currentOpenRoom.myBlock ? { display: 'none' } : {}}\r\n                >\r\n                  <Button\r\n                    onClick={() => {\r\n                      handleBlock();\r\n                      handleCloseDialog();\r\n                    }}\r\n                    variant='text'\r\n                    color='secondary'\r\n                  >\r\n                    Block\r\n                  </Button>\r\n                  Instead?\r\n                </span>\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleCloseDialog} color='primary'>\r\n                No\r\n              </Button>\r\n              <Button\r\n                onClick={() => {\r\n                  handleDeleteChat();\r\n                  handleCloseDialog();\r\n                }}\r\n                color='secondary'\r\n              >\r\n                Yes\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flex: 1,\r\n    overflow: 'auto',\r\n    '&::-webkit-scrollbar': {\r\n      width: '5px',\r\n    },\r\n\r\n    '&::-webkit-scrollbar-thumb': {\r\n      background: '#CCCCCC',\r\n      borderRadius: '10px',\r\n    },\r\n\r\n    '&::-webkit-scrollbar-thumb:hover': {\r\n      background: '#aaa',\r\n    },\r\n    position: 'relative',\r\n    zIndex: 10,\r\n\r\n    scrollBehavior: 'smooth',\r\n  },\r\n\r\n  earlierMessagesBtn: {\r\n    position: 'absolute',\r\n    right: '10px',\r\n    bottom: '70px',\r\n    zIndex: '10',\r\n    backgroundColor: 'white',\r\n    borderRadius: '50%',\r\n    boxShadow: '0 1px 1px 0 rgba(0,0,0,.06),0 2px 5px 0 rgba(0,0,0,.2);',\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst whatsAppStyle = {\r\n  root: {\r\n    width: '100%',\r\n    padding: '10px 8%',\r\n    position: 'relative',\r\n    '&>div': {\r\n      maxWidth: '90%',\r\n    },\r\n  },\r\n  //? other person message\r\n  otherMessage: {\r\n    background: 'white',\r\n    padding: '6px 7px 8px 9px',\r\n    display: 'inline-block',\r\n    borderRadius: '0 10px 10px 10px ',\r\n    position: 'relative',\r\n    boxShadow: '0 1px .5px rgba(0, 0, 0,.13)',\r\n  },\r\n  otherMessageText: {\r\n    padding: '15px 0',\r\n    overflowWrap: ' break-word',\r\n  },\r\n  otherMessageDate: {\r\n    textAlign: 'right',\r\n    fontSize: '11px',\r\n    color: '#8C8C8C',\r\n  },\r\n  //? my message\r\n  myMessage: {\r\n    background: '#DCF8C6',\r\n    padding: '6px 7px 8px 9px',\r\n    display: 'inline-block',\r\n    borderRadius: '10px 0 10px 10px ',\r\n    position: 'relative',\r\n    boxShadow: '0 1px .5px rgba(0, 0, 0,.13)',\r\n  },\r\n  myMessageText: {\r\n    padding: '15px 0',\r\n    overflowWrap: ' break-word',\r\n  },\r\n  myMessageDate: {\r\n    textAlign: 'right',\r\n    fontSize: '11px',\r\n    color: '#8C8C8C',\r\n  },\r\n  msgStatus: {\r\n    paddingLeft: '5px',\r\n    '& > img': {\r\n      width: '15px',\r\n      height: 'auto',\r\n    },\r\n  },\r\n  //? Admin Message\r\n  adminMessage: {\r\n    display: 'inline-block',\r\n    backgroundColor: '#E3F6FE',\r\n    boxShadow: '0 1px .5px rgba(0, 0,0,.13)',\r\n    padding: '10px 12px',\r\n    borderRadius: '10px',\r\n    textTransform: 'uppercase',\r\n    color: '#1D1E1F',\r\n    fontSize: '12.5px',\r\n    fontFamily: \"'Roboto Condensed', sans-serif \",\r\n    fontWeight: 'bold',\r\n    userSelect: 'none',\r\n  },\r\n};\r\n\r\n//? messengerStyle\r\nconst messengerStyle = {\r\n  root: {\r\n    width: '100%',\r\n    padding: '10px 8%',\r\n    position: 'relative',\r\n    '&>div': {\r\n      maxWidth: '90%',\r\n    },\r\n  },\r\n  //? other person message\r\n  otherMessage: {\r\n    background: '#d9d9d9',\r\n    padding: '6px 7px 8px 9px',\r\n    display: 'inline-block',\r\n    borderRadius: '0 10px 10px 10px ',\r\n    position: 'relative',\r\n    boxShadow: '0 1px .5px rgba(0, 0, 0,.13)',\r\n  },\r\n  otherMessageText: {\r\n    padding: '15px 0',\r\n    overflowWrap: ' break-word',\r\n  },\r\n  otherMessageDate: {\r\n    textAlign: 'right',\r\n    fontSize: '11px',\r\n    color: '#8C8C8C',\r\n  },\r\n  //? my message\r\n  myMessage: {\r\n    background: '#DCF8C6',\r\n    padding: '6px 7px 8px 9px',\r\n    display: 'inline-block',\r\n    borderRadius: '10px 0 10px 10px ',\r\n    position: 'relative',\r\n    boxShadow: '0 1px .5px rgba(0, 0, 0,.13)',\r\n  },\r\n  myMessageText: {\r\n    padding: '15px 0',\r\n    overflowWrap: ' break-word',\r\n  },\r\n  myMessageDate: {\r\n    textAlign: 'right',\r\n    fontSize: '11px',\r\n    color: '#8C8C8C',\r\n  },\r\n  msgStatus: {\r\n    paddingLeft: '5px',\r\n    '& > img': {\r\n      width: '15px',\r\n      height: 'auto',\r\n    },\r\n  },\r\n  //? Admin Message\r\n  adminMessage: {\r\n    display: 'inline-block',\r\n    backgroundColor: '#E3F6FE',\r\n    boxShadow: '0 1px .5px rgba(0, 0,0,.13)',\r\n    padding: '10px 12px',\r\n    borderRadius: '10px',\r\n    textTransform: 'uppercase',\r\n    color: '#1D1E1F',\r\n    fontSize: '12.5px',\r\n    fontFamily: \"'Roboto Condensed', sans-serif \",\r\n    fontWeight: 'bold',\r\n    userSelect: 'none',\r\n  },\r\n};\r\nconst useStyles = makeStyles((theme) => whatsAppStyle);\r\nexport default useStyles;\r\n","import React from 'react';\r\n\r\nconst MessageStatus = ({ status }) => {\r\n  return (\r\n    <span>\r\n      {status === 'delivered' && (\r\n        <svg\r\n          xmlns='http://www.w3.org/2000/svg'\r\n          viewBox='0 0 16 15'\r\n          width='16'\r\n          height='15'\r\n        >\r\n          <path\r\n            fill='currentColor'\r\n            d='M15.01 3.316l-.478-.372a.365.365 0 0 0-.51.063L8.666 9.879a.32.32 0 0 1-.484.033l-.358-.325a.319.319 0 0 0-.484.032l-.378.483a.418.418 0 0 0 .036.541l1.32 1.266c.143.14.361.125.484-.033l6.272-8.048a.366.366 0 0 0-.064-.512zm-4.1 0l-.478-.372a.365.365 0 0 0-.51.063L4.566 9.879a.32.32 0 0 1-.484.033L1.891 7.769a.366.366 0 0 0-.515.006l-.423.433a.364.364 0 0 0 .006.514l3.258 3.185c.143.14.361.125.484-.033l6.272-8.048a.365.365 0 0 0-.063-.51z'\r\n          ></path>\r\n        </svg>\r\n      )}\r\n\r\n      {status === 'sent' && (\r\n        <svg\r\n          xmlns='http://www.w3.org/2000/svg'\r\n          viewBox='0 0 16 15'\r\n          width='16'\r\n          height='15'\r\n        >\r\n          <path\r\n            fill='currentColor'\r\n            d='M10.91 3.316l-.478-.372a.365.365 0 0 0-.51.063L4.566 9.879a.32.32 0 0 1-.484.033L1.891 7.769a.366.366 0 0 0-.515.006l-.423.433a.364.364 0 0 0 .006.514l3.258 3.185c.143.14.361.125.484-.033l6.272-8.048a.365.365 0 0 0-.063-.51z'\r\n          ></path>\r\n        </svg>\r\n      )}\r\n\r\n      {status === 'seen' && (\r\n        <svg\r\n          xmlns='http://www.w3.org/2000/svg'\r\n          viewBox='0 0 16 15'\r\n          width='16'\r\n          height='15'\r\n          color='#4FC3F7'\r\n        >\r\n          <path\r\n            fill='currentColor'\r\n            d='M15.01 3.316l-.478-.372a.365.365 0 0 0-.51.063L8.666 9.879a.32.32 0 0 1-.484.033l-.358-.325a.319.319 0 0 0-.484.032l-.378.483a.418.418 0 0 0 .036.541l1.32 1.266c.143.14.361.125.484-.033l6.272-8.048a.366.366 0 0 0-.064-.512zm-4.1 0l-.478-.372a.365.365 0 0 0-.51.063L4.566 9.879a.32.32 0 0 1-.484.033L1.891 7.769a.366.366 0 0 0-.515.006l-.423.433a.364.364 0 0 0 .006.514l3.258 3.185c.143.14.361.125.484-.033l6.272-8.048a.365.365 0 0 0-.063-.51z'\r\n          ></path>\r\n        </svg>\r\n      )}\r\n\r\n      {status === 'written' && (\r\n        <svg\r\n          xmlns='http://www.w3.org/2000/svg'\r\n          viewBox='0 0 16 15'\r\n          width='16'\r\n          height='15'\r\n        >\r\n          <path\r\n            fill='currentColor'\r\n            d='M9.75 7.713H8.244V5.359a.5.5 0 0 0-.5-.5H7.65a.5.5 0 0 0-.5.5v2.947a.5.5 0 0 0 .5.5h.094l.003-.001.003.002h2a.5.5 0 0 0 .5-.5v-.094a.5.5 0 0 0-.5-.5zm0-5.263h-3.5c-1.82 0-3.3 1.48-3.3 3.3v3.5c0 1.82 1.48 3.3 3.3 3.3h3.5c1.82 0 3.3-1.48 3.3-3.3v-3.5c0-1.82-1.48-3.3-3.3-3.3zm2 6.8a2 2 0 0 1-2 2h-3.5a2 2 0 0 1-2-2v-3.5a2 2 0 0 1 2-2h3.5a2 2 0 0 1 2 2v3.5z'\r\n          ></path>\r\n        </svg>\r\n      )}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default MessageStatus;\r\n","import React, { useState, useEffect } from 'react';\r\nimport useStyle from './styles';\r\nimport moment from 'moment';\r\nimport MessageStatus from './MessageStatus/MessageStatus';\r\n\r\nconst Message = ({ message: msg, sender }) => {\r\n  const classes = useStyle();\r\n  const [messageDate, setMessageDate] = useState('');\r\n\r\n  useEffect(() => {\r\n    setMessageDate(msg.createdAt);\r\n  }, [msg.createdAt]);\r\n\r\n  return (\r\n    <div\r\n      className={classes.root}\r\n      style={\r\n        sender === 'other'\r\n          ? { textAlign: 'left' }\r\n          : sender === 'admin'\r\n          ? { textAlign: 'center' }\r\n          : { textAlign: 'right' }\r\n      }\r\n    >\r\n      {/* other person message */}\r\n      {sender === 'other' && (\r\n        <div className={classes.otherMessage + ' otherMessage'}>\r\n          <div className={classes.otherMessageText}>{msg.messageTXT}</div>\r\n          <div className={classes.otherMessageDate}>\r\n            {moment(messageDate).format('hh:mm A')}\r\n          </div>\r\n        </div>\r\n      )}\r\n      {/* my message */}\r\n      {sender === 'me' && (\r\n        <div className={classes.myMessage + ' myMessage'}>\r\n          <div className={classes.myMessageText}>{msg.messageTXT}</div>\r\n          <div className={classes.myMessageDate}>\r\n            {moment(messageDate).format('hh:mm A')}\r\n            <span className={classes.msgStatus}>\r\n              <MessageStatus status={msg.status} />\r\n            </span>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {/* admin messages */}\r\n      {sender === 'admin' && (\r\n        <div className={classes.adminMessage + ' adminMessage'}>\r\n          <div className={classes.adminMessageText}>{msg.messageTXT}</div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst whatsAppStyle = {\r\n  root: {\r\n    width: '100%',\r\n    padding: '10px 8%',\r\n    position: 'relative',\r\n    '&>div': {\r\n      maxWidth: '90%',\r\n    },\r\n  },\r\n  //? other person message\r\n  otherMessage: {\r\n    background: 'white',\r\n    padding: '6px 7px 8px 9px',\r\n    display: 'inline-block',\r\n    borderRadius: '0 10px 10px 10px ',\r\n    position: 'relative',\r\n    boxShadow: '0 1px .5px rgba(0, 0, 0,.13)',\r\n    width: '300px',\r\n  },\r\n  otherMessageText: {\r\n    padding: '15px 0',\r\n    overflowWrap: ' break-word',\r\n  },\r\n  otherMessageDate: {\r\n    textAlign: 'right',\r\n    fontSize: '11px',\r\n    color: '#8C8C8C',\r\n  },\r\n  //? my message\r\n  myMessage: {\r\n    background: '#DCF8C6',\r\n    padding: '6px 7px 8px 9px',\r\n    display: 'inline-block',\r\n    borderRadius: '10px 0 10px 10px ',\r\n    position: 'relative',\r\n    boxShadow: '0 1px .5px rgba(0, 0, 0,.13)',\r\n    width: '300px',\r\n  },\r\n  myMessageText: {\r\n    padding: '15px 0',\r\n    overflowWrap: ' break-word',\r\n  },\r\n  myMessageDate: {\r\n    textAlign: 'right',\r\n    fontSize: '11px',\r\n    color: '#8C8C8C',\r\n  },\r\n  msgStatus: {\r\n    paddingLeft: '5px',\r\n    '& > img': {\r\n      width: '15px',\r\n      height: 'auto',\r\n    },\r\n  },\r\n  //? Admin Message\r\n  adminMessage: {\r\n    display: 'inline-block',\r\n    backgroundColor: '#E3F6FE',\r\n    boxShadow: '0 1px .5px rgba(0, 0,0,.13)',\r\n    padding: '10px 12px',\r\n    borderRadius: '10px',\r\n    textTransform: 'uppercase',\r\n    color: '#1D1E1F',\r\n    fontSize: '12.5px',\r\n    fontFamily: \"'Roboto Condensed', sans-serif \",\r\n    fontWeight: 'bold',\r\n    userSelect: 'none',\r\n  },\r\n};\r\n\r\n//? messengerStyle\r\nconst messengerStyle = {\r\n  root: {\r\n    width: '100%',\r\n    padding: '10px 8%',\r\n    position: 'relative',\r\n    '&>div': {\r\n      maxWidth: '90%',\r\n    },\r\n  },\r\n  //? other person message\r\n  otherMessage: {\r\n    background: '#d9d9d9',\r\n    padding: '6px 7px 8px 9px',\r\n    display: 'inline-block',\r\n    borderRadius: '0 10px 10px 10px ',\r\n    position: 'relative',\r\n    boxShadow: '0 1px .5px rgba(0, 0, 0,.13)',\r\n  },\r\n  otherMessageText: {\r\n    padding: '15px 0',\r\n    overflowWrap: ' break-word',\r\n  },\r\n  otherMessageDate: {\r\n    textAlign: 'right',\r\n    fontSize: '11px',\r\n    color: '#8C8C8C',\r\n  },\r\n  //? my message\r\n  myMessage: {\r\n    background: '#DCF8C6',\r\n    padding: '6px 7px 8px 9px',\r\n    display: 'inline-block',\r\n    borderRadius: '10px 0 10px 10px ',\r\n    position: 'relative',\r\n    boxShadow: '0 1px .5px rgba(0, 0, 0,.13)',\r\n  },\r\n  myMessageText: {\r\n    padding: '15px 0',\r\n    overflowWrap: ' break-word',\r\n  },\r\n  myMessageDate: {\r\n    textAlign: 'right',\r\n    fontSize: '11px',\r\n    color: '#8C8C8C',\r\n  },\r\n  msgStatus: {\r\n    paddingLeft: '5px',\r\n    '& > img': {\r\n      width: '15px',\r\n      height: 'auto',\r\n    },\r\n  },\r\n  //? Admin Message\r\n  adminMessage: {\r\n    display: 'inline-block',\r\n    backgroundColor: '#E3F6FE',\r\n    boxShadow: '0 1px .5px rgba(0, 0,0,.13)',\r\n    padding: '10px 12px',\r\n    borderRadius: '10px',\r\n    textTransform: 'uppercase',\r\n    color: '#1D1E1F',\r\n    fontSize: '12.5px',\r\n    fontFamily: \"'Roboto Condensed', sans-serif \",\r\n    fontWeight: 'bold',\r\n    userSelect: 'none',\r\n  },\r\n};\r\nconst useStyles = makeStyles((theme) => whatsAppStyle);\r\nexport default useStyles;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst whatsAppStyle = {\r\n  root: {\r\n    width: '100%',\r\n    padding: '10px 8%',\r\n    position: 'relative',\r\n    '&>div': {\r\n      maxWidth: '90%',\r\n    },\r\n  },\r\n  controls: {},\r\n  playStopContainer: {},\r\n  slider: {\r\n    width: '100%',\r\n  },\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => whatsAppStyle);\r\nexport default useStyles;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport useStyles from './styles';\r\nimport Play from '@material-ui/icons/PlayArrow';\r\nimport Pause from '@material-ui/icons/Pause';\r\n\r\nconst AudioControllers = ({ mediaLink }) => {\r\n  const classes = useStyles();\r\n  const [audio] = useState(new Audio(mediaLink));\r\n  const [playing, setPlaying] = useState(false);\r\n  const [seekBarData, setSeekBarData] = useState({\r\n    max: 100,\r\n    value: 0,\r\n  });\r\n\r\n  const playRecord = async () => {\r\n    await audio.play();\r\n    if (audio.currentTime === audio.duration) {\r\n      audio.currentTime = 0;\r\n    }\r\n  };\r\n  const pauseRecord = () => {\r\n    audio.pause();\r\n  };\r\n  const handleChangeAudioCurrentTime = (e) => {\r\n    const currentTime = e.target.value / 100;\r\n    audio.currentTime = currentTime;\r\n  };\r\n  useEffect(() => {\r\n    audio.preload = 'metadata';\r\n    audio.addEventListener('play', () => setPlaying(true));\r\n    audio.addEventListener('pause', () => setPlaying(false));\r\n    audio.addEventListener('timeupdate', () => {\r\n      setSeekBarData({\r\n        ...seekBarData,\r\n        max: Math.round(audio.duration * 100),\r\n        value: Math.round(audio.currentTime * 100),\r\n      });\r\n    });\r\n    audio.addEventListener('loadedmetadata', async () => {\r\n      audio.currentTime = 10;\r\n      setSeekBarData({\r\n        ...seekBarData,\r\n        value: Math.round(audio.currentTime * 100),\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.controls}>\r\n        <div className={classes.playStopContainer}>\r\n          {playing ? (\r\n            <div onClick={pauseRecord} className={classes.pause}>\r\n              <Pause />\r\n            </div>\r\n          ) : (\r\n            <div onClick={playRecord} className={classes.play}>\r\n              <Play />\r\n            </div>\r\n          )}\r\n          <input\r\n            type='range'\r\n            min='0'\r\n            max={seekBarData.max}\r\n            value={seekBarData.value}\r\n            onInput={handleChangeAudioCurrentTime}\r\n            onChange={handleChangeAudioCurrentTime}\r\n            className={classes.slider}\r\n            id='myRange'\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AudioControllers;\r\n","import React, { useState, useEffect } from 'react';\r\nimport useStyle from './styles';\r\nimport moment from 'moment';\r\nimport MessageStatus from '../Message/MessageStatus/MessageStatus';\r\nimport AudioControllers from './AudioControllers/AudioControllers';\r\n\r\nconst Record = ({ message: msg, sender, mediaLink }) => {\r\n  const classes = useStyle();\r\n  const [messageDate, setMessageDate] = useState('');\r\n  useEffect(() => {\r\n    setMessageDate(msg.createdAt);\r\n  }, [msg.createdAt]);\r\n\r\n  return (\r\n    <div\r\n      className={classes.root}\r\n      style={\r\n        sender === 'other'\r\n          ? { textAlign: 'left' }\r\n          : sender === 'admin'\r\n          ? { textAlign: 'center' }\r\n          : { textAlign: 'right' }\r\n      }\r\n    >\r\n      {/* other person message */}\r\n      {sender === 'other' && (\r\n        <div className={classes.otherMessage + ' otherMessage'}>\r\n          <AudioControllers mediaLink={mediaLink} />\r\n          <div className={classes.bottom}>\r\n            <div className={classes.otherMessageDate}>\r\n              {moment(messageDate).format('hh:mm A')}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {/* my message */}\r\n      {sender === 'me' && (\r\n        <div className={classes.myMessage + ' myMessage'}>\r\n          <AudioControllers mediaLink={mediaLink} />\r\n          <div className={classes.bottom}>\r\n            <div className={classes.myMessageDate}>\r\n              {moment(messageDate).format('hh:mm A')}\r\n              <span className={classes.msgStatus}>\r\n                <MessageStatus status={msg.status} />\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Record;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flex: 1,\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport Message from '../Message/Message';\r\nimport useStyle from './styles';\r\n\r\nconst MessageWrapper = ({ message, severity, children }) => {\r\n  const classes = useStyle();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Message message={message} severity={severity} />\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageWrapper;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    padding: '10px 8%',\r\n    position: 'relative',\r\n    '&>div': {\r\n      maxWidth: '90%',\r\n    },\r\n  },\r\n  //? other person message\r\n  otherMessage: {\r\n    background: 'white',\r\n    padding: '12px 15px',\r\n    display: 'inline-block',\r\n    borderRadius: '0 10px 10px 10px ',\r\n    position: 'relative',\r\n    boxShadow: '0 1px .5px rgba(0, 0, 0,.13)',\r\n  },\r\n  otherMessageText: {\r\n    overflowWrap: ' break-word',\r\n  },\r\n\r\n  typingDot: {\r\n    display: 'inline-block',\r\n    width: '10px',\r\n    height: '10px',\r\n    backgroundColor: '#ccc',\r\n    marginRight: '5px',\r\n    borderRadius: '50%',\r\n    animation: 'animateTypingDots 0.75s linear infinite',\r\n    '&:nth-child(1)': {\r\n      animationDelay: '0',\r\n    },\r\n    '&:nth-child(2)': {\r\n      animationDelay: '0.1s',\r\n    },\r\n    '&:nth-child(3)': {\r\n      animationDelay: '0.2s',\r\n      paddingRight: '0',\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport useStyle from './styles';\r\n\r\nconst MessageTyping = () => {\r\n  const classes = useStyle();\r\n\r\n  return (\r\n    <div className={classes.root} style={{ textAlign: 'left' }}>\r\n      {/* other person message */}\r\n      <div className={classes.otherMessage + ' otherMessage'}>\r\n        <div className={classes.otherMessageText}>\r\n          <span className={classes.typingDot}></span>\r\n          <span className={classes.typingDot}></span>\r\n          <span className={classes.typingDot}></span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageTyping;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport useStyle from './styles';\r\nimport Message from './Message/Message';\r\nimport Record from './Record/Record';\r\nimport { IconButton } from '@material-ui/core';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport MessageWrapper from '../../../global/MessageWrapper/MessageWrapper';\r\nimport MessageTyping from './MessageTyping/MessageTyping';\r\n\r\nconst MessagesContainer = ({ user }) => {\r\n  const classes = useStyle();\r\n  const roomMessages = useSelector((s) => s.roomMessages);\r\n  const {\r\n    loading: loadingMessages = true,\r\n    messages: displayedMessages = [],\r\n    err: errGettingMessages,\r\n  } = roomMessages;\r\n\r\n  const userData = useSelector((s) => s.currentChattingUserData);\r\n  const { status } = userData;\r\n\r\n  const scrollToEnd = () => {\r\n    document\r\n      .getElementById('messages-container')\r\n      .scrollTo(0, document.getElementById('messages-container').scrollHeight);\r\n  };\r\n\r\n  //? for scrolling to end of chat with each render\r\n\r\n  useEffect(() => {\r\n    const container = document.getElementById('messages-container');\r\n    //? scrollTop = 0  means it is opening for the first time\r\n    //? and check if the container.scrollHeight -\r\n    //? (container.scrollTop + container.clientHeight)\r\n    //? is greater than 300 because if the other user send a message when this user scrolling to top\r\n    //? we don't want to scroll him to bottom\r\n    if (\r\n      container.scrollTop === 0 ||\r\n      container.scrollHeight - (container.scrollTop + container.clientHeight) <\r\n        300\r\n    ) {\r\n      scrollToEnd();\r\n    }\r\n    //? for scrolling to end when typing\r\n    if (\r\n      (container.scrollTop === 0 ||\r\n        container.scrollHeight -\r\n          (container.scrollTop + container.clientHeight) <\r\n          300) &&\r\n      status === 'startTyping'\r\n    ) {\r\n      scrollToEnd();\r\n    }\r\n  }, [displayedMessages.length, status]);\r\n\r\n  //? for adding scroll event\r\n\r\n  useEffect(() => {\r\n    const container = document.getElementById('messages-container');\r\n    const downArrow = document.getElementById('down-arrow');\r\n    container.onscroll = () => {\r\n      if (\r\n        container.scrollHeight -\r\n          (container.scrollTop + container.clientHeight) <\r\n        300\r\n      ) {\r\n        downArrow.style.display = 'none';\r\n      } else {\r\n        downArrow.style.display = 'inline-flex';\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div id='messages-container' className={classes.root}>\r\n        {loadingMessages ? (\r\n          <MessageWrapper message='Getting messages ...' />\r\n        ) : errGettingMessages ? (\r\n          <MessageWrapper severity='error' message={errGettingMessages} />\r\n        ) : (\r\n          <>\r\n            <Message\r\n              key={'startingMessage'}\r\n              message={{\r\n                messageTXT: 'Messages are stored in secure server 🔐',\r\n              }}\r\n              sender='admin'\r\n            />\r\n            {displayedMessages.map((msg) =>\r\n              msg.messageType === 'text' ? (\r\n                <Message\r\n                  key={msg.clientId}\r\n                  message={msg}\r\n                  sender={\r\n                    msg.sender === user._id || !msg.sender\r\n                      ? 'me'\r\n                      : msg.sender === 'admin'\r\n                      ? 'admin'\r\n                      : 'other'\r\n                  }\r\n                />\r\n              ) : (\r\n                <Record\r\n                  key={msg.clientId}\r\n                  message={msg}\r\n                  sender={\r\n                    msg.sender === user._id || !msg.sender ? 'me' : 'other'\r\n                  }\r\n                  mediaLink={msg.mediaLink}\r\n                />\r\n              )\r\n            )}\r\n            {status && status === 'startTyping' && <MessageTyping />}\r\n          </>\r\n        )}\r\n      </div>\r\n      <div className={classes.earlierMessagesBtn}>\r\n        <IconButton\r\n          onClick={scrollToEnd}\r\n          style={{\r\n            width: '40px',\r\n            height: '40px',\r\n            display: 'none',\r\n          }}\r\n          id='down-arrow'\r\n        >\r\n          <KeyboardArrowDownIcon style={{ fontSize: '25px' }} />\r\n        </IconButton>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MessagesContainer;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    minHeight: '62px',\r\n    backgroundColor: '#F0F0F0',\r\n    position: 'relative',\r\n    zIndex: '10',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  msgBox: {\r\n    flex: 1,\r\n    height: '100%',\r\n    padding: '10px 20px',\r\n    paddingRight: '0',\r\n  },\r\n  msgInput: {\r\n    width: '100%',\r\n    height: '100%',\r\n    outline: 'none',\r\n    border: 'none',\r\n    padding: '10px 15px',\r\n    borderRadius: '20px',\r\n    fontSize: '15px',\r\n    color: '#4A4A4A',\r\n    fontFamily: \"'Roboto', sans-serif\",\r\n    fontWeight: 'bold',\r\n    maxHeight: '200px',\r\n    resize: 'none',\r\n    overflow: 'hidden',\r\n    userSelect: 'none',\r\n    backgroundColor: 'white',\r\n  },\r\n  send: {\r\n    color: '#9B9B9B',\r\n  },\r\n\r\n  recordingContainer: {\r\n    padding: '0 5px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  cancelRecording: {\r\n    border: '2px solid #E75E5A',\r\n    color: '#E75E5A',\r\n    '&:hover': {\r\n      backgroundColor: '#E75E5A',\r\n      color: 'white',\r\n    },\r\n  },\r\n  sendRecord: {\r\n    border: '2px solid #37D87E',\r\n    color: '#37D87E',\r\n    '&:hover': {\r\n      backgroundColor: '#37D87E',\r\n      color: 'white',\r\n    },\r\n  },\r\n  recordTimeContainer: {\r\n    margin: '0 8px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  recordingRedDot: {\r\n    width: '15px',\r\n    height: '15px',\r\n    backgroundColor: '#E75E5A',\r\n    borderRadius: '50%',\r\n    display: 'inline-block',\r\n    marginRight: '5px',\r\n    animation: '$animateRedDot 1s infinite ',\r\n  },\r\n\r\n  '@keyframes animateRedDot': {\r\n    '0%, 100%': {\r\n      backgroundColor: 'transparent',\r\n    },\r\n    '50%': {\r\n      backgroundColor: '#E75E5A',\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import * as c from '../constants/messagesConstants';\r\nimport axios from 'axios';\r\nimport * as urls from '../constants/urls';\r\n\r\nexport const getRoomsMessagesAction = (room) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: c.GET_ROOM_MESSAGES_REQUEST,\r\n    });\r\n\r\n    const token = `Bearer ${getState().loginUser.user.token}`;\r\n    const config = {\r\n      headers: {\r\n        authorization: token,\r\n      },\r\n    };\r\n\r\n    const {\r\n      data: { data },\r\n    } = await axios.get(`${urls.messagesUrl}/getRoomMessages/${room}`, config);\r\n    dispatch({\r\n      type: c.GET_ROOM_MESSAGES_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.GET_ROOM_MESSAGES_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createMessageAction = (messageObj) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: c.CREATE_MESSAGE_REQUEST,\r\n    });\r\n\r\n    const token = `Bearer ${getState().loginUser.user.token}`;\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: token,\r\n      },\r\n    };\r\n\r\n    const {\r\n      data: { data },\r\n    } = await axios.post(\r\n      `${urls.messagesUrl}/createMessage`,\r\n      messageObj,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: c.CREATE_MESSAGE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.CREATE_MESSAGE_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const markMessageAsSeen = (message) => (dispatch, getState) => {\r\n  const currentChattingUser = getState().currentChattingUserData;\r\n  const socket = getState().socket;\r\n  const currentOpenRoomId = getState().currentOpenRoom.currentOpenRoomId;\r\n  const myId = getState().loginUser.user._id;\r\n  const senderId = message.sender; //? won't be available until it comes from the server\r\n  const messageRoomId = message.room;\r\n  const addOtherMessage = senderId !== myId;\r\n  const { status } = currentChattingUser;\r\n\r\n  if (\r\n    addOtherMessage &&\r\n    messageRoomId === currentOpenRoomId &&\r\n    status.match(/online|startTyping|stopTyping/)\r\n  ) {\r\n    socket.emit('user-read-message', {\r\n      message,\r\n      senderOnlineId: currentChattingUser.onlineId,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateRoomMessagesAction = (message) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const currentOpenRoomId = getState().currentOpenRoom.currentOpenRoomId;\r\n  const myId = getState().loginUser.user._id;\r\n  const senderId = message.sender; //? won't be available until it comes from the server\r\n  const messageRoomId = message.room;\r\n  const msgServerId = message._id;\r\n  const addMyMessage = !senderId && !msgServerId;\r\n  const updateMyMessage = senderId === myId;\r\n  const addOtherMessage = senderId !== myId;\r\n\r\n  //? if the sender isn't available and message._id isn't available\r\n  //? then it's my message and it is coming from chatController not from the server\r\n  //? else if the sender is available and it is me\r\n  //? then i will update the current message that have uuid with the message coming from the server\r\n  //? if the sender isn't me then i will just add it to the displayed messages\r\n\r\n  if (currentOpenRoomId === messageRoomId) {\r\n    dispatch({\r\n      type: c.UPDATE_DISPLAYED_MESSAGES,\r\n      payload: { message, addMyMessage, updateMyMessage, addOtherMessage },\r\n    });\r\n  }\r\n};\r\n","class Record {\r\n  getAudioStream = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({\r\n        audio: true,\r\n        video: false,\r\n      });\r\n      this.stream = stream;\r\n      return stream;\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  };\r\n\r\n  mediaRecorder = async (stream) => {\r\n    const mediaRecorder = new MediaRecorder(stream);\r\n    mediaRecorder.start();\r\n    this.recorder = mediaRecorder;\r\n    return mediaRecorder;\r\n  };\r\n\r\n  startRec = () => {\r\n    const chunk = [];\r\n    this.recorder.addEventListener('dataavailable', async (e) => {\r\n      chunk.push(e.data);\r\n    });\r\n\r\n    this.recorder.addEventListener('stop', async (e) => {\r\n      const blob = new Blob(chunk, { type: 'audio/mpeg-3' });\r\n      const formData = new FormData();\r\n      formData.append('record', blob, 'recordName.mp3');\r\n      this.blob = blob;\r\n      this.formData = formData;\r\n      this.audio_url = URL.createObjectURL(this.blob);\r\n    });\r\n  };\r\n\r\n  stopRec = async () => {\r\n    this.recorder.stop();\r\n    //? this promise is for testing purposes to wait 5 milliseconds until the record is ready\r\n    await new Promise((resolve) => {\r\n      setTimeout(() => {\r\n        resolve();\r\n      }, 5);\r\n    });\r\n  };\r\n}\r\n\r\nexport default Record;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { Send, Mic, Close, Done } from '@material-ui/icons';\r\nimport useStyle from './styles';\r\nimport {\r\n  createMessageAction,\r\n  updateRoomMessagesAction,\r\n} from '../../../../actions/messageActions';\r\nimport { v4 as uuidV4 } from 'uuid';\r\nimport Record from '../../../../utils/record.js';\r\nimport axios from 'axios';\r\nimport * as urls from '../../../../constants/urls';\r\n\r\nconst ChatController = ({ currentOpenRoom, user }) => {\r\n  const classes = useStyle();\r\n  const dispatch = useDispatch();\r\n\r\n  const [message, setMessage] = useState('');\r\n  const [typing, setTyping] = useState(false);\r\n  const [recording, setRecording] = useState(false);\r\n  const [record] = useState(new Record());\r\n  const [timeText, setTimeText] = useState('00:00');\r\n  const [currentInterval, setCurrentInterval] = useState();\r\n\r\n  const socket = useSelector((s) => s.socket);\r\n\r\n  const userData = useSelector((s) => s.currentChattingUserData);\r\n  const { status } = userData;\r\n\r\n  const handleSubmitMessage = (e) => {\r\n    e.preventDefault();\r\n    if (message) {\r\n      const messageObj = {\r\n        room: currentOpenRoom._id,\r\n        receiver: currentOpenRoom.userToShowOnRoom._id,\r\n        messageTXT: message,\r\n        clientId: uuidV4(),\r\n        status: 'written',\r\n      };\r\n\r\n      dispatch(updateRoomMessagesAction(messageObj));\r\n      dispatch(createMessageAction(messageObj));\r\n      setTyping(false);\r\n      setMessage('');\r\n    }\r\n  };\r\n\r\n  const handleTypingMessage = (e) => {\r\n    setMessage(e.target.value);\r\n  };\r\n\r\n  const handleStartRecording = async () => {\r\n    const stream = await record.getAudioStream();\r\n    await record.mediaRecorder(stream);\r\n    record.startRec();\r\n    setRecording(true);\r\n  };\r\n\r\n  const uploadRecording = async () => {\r\n    const formData = record.formData;\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        `${urls.host}/api/v1/uploadRecordRoute`,\r\n        formData,\r\n        config\r\n      );\r\n      //? submitting th message\r\n      const messageObj = {\r\n        room: currentOpenRoom._id,\r\n        receiver: currentOpenRoom.userToShowOnRoom._id,\r\n        messageTXT: 'Record',\r\n        clientId: uuidV4(),\r\n        status: 'written',\r\n        messageType: 'record',\r\n        mediaLink: data.path,\r\n      };\r\n\r\n      dispatch(updateRoomMessagesAction(messageObj));\r\n      dispatch(createMessageAction(messageObj));\r\n\r\n      //?end submitting th message\r\n    } catch (err) {\r\n      alert('ERROR UPLOADING YOUR IMAGE');\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const handleCancelRecording = async () => {\r\n    setRecording(false);\r\n    await record.stopRec();\r\n  };\r\n  const handleSendRecording = async () => {\r\n    setRecording(false);\r\n    await record.stopRec();\r\n    uploadRecording();\r\n  };\r\n\r\n  //? for starting recordTime changing\r\n  useEffect(() => {\r\n    let minutes = 0;\r\n    let seconds = 0;\r\n    let minutesTXT = '';\r\n    let secondsTXT = '';\r\n    if (recording) {\r\n      setCurrentInterval(\r\n        setInterval(() => {\r\n          seconds++;\r\n          if (seconds >= 60) {\r\n            minutes++;\r\n            seconds = 0;\r\n          }\r\n          if (minutes < 10) {\r\n            minutesTXT = `0${minutes}`;\r\n          } else {\r\n            minutesTXT = `${minutes}`;\r\n          }\r\n          if (seconds < 10) {\r\n            secondsTXT = `0${seconds}`;\r\n          } else {\r\n            secondsTXT = `${seconds}`;\r\n          }\r\n          setTimeText(`${minutesTXT}:${secondsTXT}`);\r\n        }, 1000)\r\n      );\r\n    } else if (timeText !== '00:00') {\r\n      minutes = 0;\r\n      seconds = 0;\r\n      minutesTXT = '';\r\n      secondsTXT = '';\r\n      setTimeText('00:00');\r\n      if (currentInterval) clearInterval(currentInterval);\r\n    }\r\n    //! the next step is to upload the recording\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [recording]);\r\n  //? for setting typing variable when typing\r\n  useEffect(() => {\r\n    if (message.trim()) {\r\n      setTyping(true);\r\n    } else {\r\n      setTyping(false);\r\n    }\r\n  }, [message]);\r\n  //! search how to get your socket id then\r\n  //! send it to the user with emitting\r\n  //? for emitting typing event\r\n  useEffect(() => {\r\n    if (\r\n      (status === 'online' ||\r\n        status === 'startTyping' ||\r\n        status === 'stopTyping') &&\r\n      socket.id\r\n    ) {\r\n      if (typing) {\r\n        socket.emit('user-currently-typing', {\r\n          typingUserId: user._id,\r\n          onlineUserId: userData.onlineId,\r\n          typingUserOnlineId: socket.id,\r\n        });\r\n      } else {\r\n        socket.emit('user-stopped-typing', {\r\n          typingUserId: user._id,\r\n          onlineUserId: userData.onlineId,\r\n          typingUserOnlineId: socket.id,\r\n        });\r\n      }\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [currentOpenRoom, socket, status, typing, user, userData.onlineId]);\r\n  //? for clearing message when changing currentOpenUserRoom\r\n  useEffect(() => {\r\n    setMessage('');\r\n    if (socket.id) {\r\n      socket.emit('user-stopped-typing', {\r\n        typingUserId: user._id,\r\n        onlineUserId: userData.onlineId,\r\n        typingUserOnlineId: socket.id,\r\n      });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [userData._id]);\r\n\r\n  return (\r\n    <form\r\n      autoComplete='off'\r\n      className={classes.root}\r\n      onSubmit={handleSubmitMessage}\r\n    >\r\n      <div className={classes.msgBox}>\r\n        <input\r\n          disabled={recording}\r\n          id='new-message-input'\r\n          autoFocus={true}\r\n          placeholder='Type a message'\r\n          type='text'\r\n          className={classes.msgInput}\r\n          rows='1'\r\n          value={message}\r\n          onChange={handleTypingMessage}\r\n          autoComplete='off'\r\n        />\r\n      </div>\r\n      <div className={classes.send}>\r\n        {recording ? (\r\n          <div className={classes.recordingContainer}>\r\n            <IconButton\r\n              onClick={handleCancelRecording}\r\n              size='small'\r\n              className={classes.cancelRecording}\r\n            >\r\n              <Close />\r\n            </IconButton>\r\n            <div className={classes.recordTimeContainer}>\r\n              <span className={classes.recordingRedDot}></span>\r\n              <span className={classes.recordingTim}>{timeText}</span>\r\n            </div>\r\n            <IconButton\r\n              onClick={handleSendRecording}\r\n              size='small'\r\n              className={classes.sendRecord}\r\n            >\r\n              <Done />\r\n            </IconButton>\r\n          </div>\r\n        ) : message ? (\r\n          <IconButton type='submit'>\r\n            <Send style={{ color: '#9B9B9B' }} />\r\n          </IconButton>\r\n        ) : (\r\n          <IconButton onClick={handleStartRecording}>\r\n            <Mic />\r\n          </IconButton>\r\n        )}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ChatController;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    height: '100px',\r\n    position: 'relative',\r\n    zIndex: '10',\r\n    textAlign: 'center',\r\n    '&>button': {\r\n      marginTop: '10px',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport useStyle from './styles';\r\nimport Message from '../../../global/Message/Message';\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst AcceptChat = ({ message, onAccept, onBlock }) => {\r\n  const classes = useStyle();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Message message={message} />\r\n      <Button\r\n        style={{ marginRight: '10px' }}\r\n        variant='outlined'\r\n        margin='normal'\r\n        onClick={onAccept}\r\n      >\r\n        Accept\r\n      </Button>\r\n      <Button variant='outlined' margin='normal' onClick={onBlock}>\r\n        Block\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AcceptChat;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    position: 'relative',\r\n    zIndex: '10',\r\n    textAlign: 'center',\r\n    '&>button': {\r\n      marginTop: '10px',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport useStyle from './styles';\r\nimport Message from '../../../global/Message/Message';\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst Block = ({ severity, message, onUnBlock }) => {\r\n  const classes = useStyle();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Message severity={severity} message={message} />\r\n      {onUnBlock && (\r\n        <Button\r\n          style={{ marginRight: '10px' }}\r\n          variant='outlined'\r\n          margin='normal'\r\n          onClick={onUnBlock}\r\n        >\r\n          UnBlock\r\n        </Button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Block;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    position: 'absolute',\r\n    top: '0',\r\n    left: '0',\r\n    width: '100%',\r\n    height: '100%',\r\n    zIndex: '20',\r\n    overflow: 'auto',\r\n    backgroundColor: '#EDEDED',\r\n    '&::-webkit-scrollbar': {\r\n      width: '5px',\r\n    },\r\n\r\n    '&::-webkit-scrollbar-thumb': {\r\n      background: '#CCCCCC',\r\n      borderRadius: '10px',\r\n    },\r\n\r\n    '&::-webkit-scrollbar-thumb:hover': {\r\n      background: '#aaa',\r\n    },\r\n  },\r\n  closed: {\r\n    width: '0',\r\n    height: '0',\r\n  },\r\n  header: {\r\n    padding: '10px',\r\n    paddingBottom: '20px',\r\n    width: '100%',\r\n    height: '108px',\r\n    display: 'flex',\r\n    alignItems: 'flex-end',\r\n    justifyContent: 'space-between',\r\n    position: 'relative',\r\n    backgroundColor: '#00BFA5',\r\n    zIndex: '10',\r\n    color: 'white',\r\n    fontSize: '19px',\r\n  },\r\n\r\n  profilePhotoContainer: {\r\n    width: '100%',\r\n    backgroundColor: '#EDEDED',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    padding: '20px',\r\n  },\r\n\r\n  photoContainer: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n    alignItems: 'center',\r\n  },\r\n\r\n  avatarContainer: {\r\n    width: '250px',\r\n    height: '250px',\r\n    position: 'relative',\r\n    '&:hover>.controllersContainer': {\r\n      opacity: '1',\r\n    },\r\n    '& .MuiAvatar-root': {\r\n      width: '100%',\r\n      height: '100%',\r\n    },\r\n  },\r\n\r\n  profileImage: {\r\n    position: 'absolute',\r\n    zIndex: '100',\r\n    width: '100%',\r\n    height: '100%',\r\n    borderRadius: '50%',\r\n  },\r\n  infoHeader: {\r\n    color: '#009688',\r\n    fontSize: '20px',\r\n    fontWeight: 'bold',\r\n    marginBottom: '10px',\r\n  },\r\n  userEmail: {\r\n    textDecoration: 'none',\r\n    color: '#555',\r\n  },\r\n\r\n  infoContent: {\r\n    color: '#333',\r\n  },\r\n\r\n  infoContainer: {\r\n    width: '100%',\r\n    backgroundColor: '#ffffff',\r\n    padding: '10px 15px',\r\n    marginTop: '10px',\r\n    paddingBottom: '20px',\r\n    boxShadow: '0 1px 3px #ccc, 0 -1px 3px #ccc ',\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport useStyle from './styles';\r\nimport { IconButton, Avatar } from '@material-ui/core';\r\nimport { ArrowBack } from '@material-ui/icons';\r\n\r\nconst UserInfo = ({ open, setOpenUserInfo }) => {\r\n  const classes = useStyle();\r\n\r\n  const currentChattingUserData = useSelector((s) => s.currentChattingUserData);\r\n  const { photo, firstName, about, email } = currentChattingUserData;\r\n\r\n  return (\r\n    <div className={classes.root + ' ' + (open ? '' : classes.closed)}>\r\n      <div className={classes.header}>\r\n        <div>\r\n          <IconButton\r\n            style={{ color: 'white' }}\r\n            onClick={() => setOpenUserInfo(false)}\r\n          >\r\n            <ArrowBack />\r\n          </IconButton>\r\n          {firstName}\r\n        </div>\r\n        <div className={classes.saveChangesContainer}></div>\r\n      </div>\r\n      <div className={classes.content}>\r\n        <section className={classes.profilePhotoContainer}>\r\n          <div className={classes.avatarContainer}>\r\n            <Avatar\r\n              src={photo}\r\n              alt='user profile'\r\n              className={classes.profileImage}\r\n            />\r\n          </div>\r\n        </section>\r\n        <section className={classes.infoContainer}>\r\n          <header className={classes.infoHeader}>Name</header>\r\n          <p className={classes.infoContent}>{firstName}</p>\r\n        </section>\r\n        <section className={classes.infoContainer}>\r\n          <header className={classes.infoHeader}>Email</header>\r\n          <p className={classes.infoContent}>\r\n            <a className={classes.userEmail} href={`mailto:${email}`}>\r\n              {email}\r\n            </a>\r\n          </p>\r\n        </section>\r\n        <section className={classes.infoContainer}>\r\n          <header className={classes.infoHeader}>About</header>\r\n          <p className={classes.infoContent}>{about}</p>\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserInfo;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useStyle from './styles';\r\nimport Header from './Header/Header';\r\nimport MessagesContainer from './MessagesContainer/MessagesContainer';\r\nimport ChatController from './ChatController/ChatController';\r\nimport { getRoomsMessagesAction } from '../../../actions/messageActions';\r\nimport {\r\n  acceptRoomAction,\r\n  blockRoomAction,\r\n  unblockRoomAction,\r\n} from '../../../actions/roomActions';\r\nimport MessageWrapper from '../../global/MessageWrapper/MessageWrapper';\r\nimport AcceptChat from './AcceptChat/AcceptChat';\r\nimport Block from './Block/Block';\r\nimport UserInfo from './UserInfo/UserInfo';\r\n\r\nconst ChatMsg = ({\r\n  currentOpenRoom,\r\n  currentOpenRoomId,\r\n  setOpenSideBar,\r\n  setOpenChatBox,\r\n}) => {\r\n  const classes = useStyle();\r\n  const dispatch = useDispatch();\r\n\r\n  const [openUserInfo, setOpenUserInfo] = useState(false);\r\n\r\n  const { user } = useSelector((s) => s.loginUser);\r\n\r\n  useEffect(() => {\r\n    dispatch(getRoomsMessagesAction(currentOpenRoomId));\r\n  }, [currentOpenRoomId, dispatch]);\r\n\r\n  const handleAcceptChat = () => {\r\n    dispatch(acceptRoomAction(currentOpenRoomId));\r\n  };\r\n  const handleBlockChat = () => {\r\n    dispatch(\r\n      blockRoomAction(currentOpenRoomId, currentOpenRoom.userToShowOnRoom._id)\r\n    );\r\n  };\r\n  const handleUnBlockChat = () => {\r\n    dispatch(\r\n      unblockRoomAction(currentOpenRoomId, currentOpenRoom.userToShowOnRoom._id)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {currentOpenRoomId && (\r\n        <Header\r\n          setOpenUserInfo={setOpenUserInfo}\r\n          currentOpenRoom={currentOpenRoom}\r\n          setOpenSideBar={setOpenSideBar}\r\n          setOpenChatBox={setOpenChatBox}\r\n        />\r\n      )}\r\n      {/* //? for showing accepting or blocking messages */}\r\n      {currentOpenRoom.myBlock ||\r\n      currentOpenRoom.otherUserBlock ? null : currentOpenRoomId &&\r\n        !currentOpenRoom.accepted ? (\r\n        currentOpenRoom.otherUser === user._id ? (\r\n          <AcceptChat\r\n            onAccept={handleAcceptChat}\r\n            onBlock={handleBlockChat}\r\n            message={`${currentOpenRoom.userToShowOnRoom.firstName} wants to chat you`}\r\n          ></AcceptChat>\r\n        ) : (\r\n          <MessageWrapper\r\n            message={`Wait until ${currentOpenRoom.userToShowOnRoom.firstName} accept your request`}\r\n          />\r\n        )\r\n      ) : null}\r\n      {/* //? for showing you are blocked or you blocked */}\r\n      {currentOpenRoom.myBlock ? (\r\n        <Block\r\n          message={`You blocked ${currentOpenRoom.userToShowOnRoom.fullName}`}\r\n          onUnBlock={handleUnBlockChat}\r\n        ></Block>\r\n      ) : currentOpenRoom.otherUserBlock ? (\r\n        <Block\r\n          message={`You are blocked from ${currentOpenRoom.userToShowOnRoom.fullName}`}\r\n          severity='error'\r\n        ></Block>\r\n      ) : null}\r\n\r\n      {/* //? for showing messages if it is accepted even if it is blocked messages will appear */}\r\n\r\n      {currentOpenRoom.accepted && <MessagesContainer user={user} />}\r\n      {currentOpenRoomId &&\r\n        currentOpenRoom.accepted &&\r\n        !currentOpenRoom.myBlock &&\r\n        !currentOpenRoom.otherUserBlock && (\r\n          <ChatController currentOpenRoom={currentOpenRoom} user={user} />\r\n        )}\r\n\r\n      <UserInfo open={openUserInfo} setOpenUserInfo={setOpenUserInfo} />\r\n\r\n      <div className={classes.bgObjects}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatMsg;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport useStyle from './styles';\r\nimport NoChat from './NoChat/NoChat';\r\nimport ChatMsg from './ChatMsg/ChatMsg';\r\nimport { setCurrentOpenRoomAction } from '../../actions/roomActions';\r\n\r\nconst ChatBox = ({ open, setOpenSideBar, setOpenChatBox, smallScreen }) => {\r\n  const dispatch = useDispatch();\r\n  const currentOpenRoom = useSelector((s) => s.currentOpenRoom);\r\n  const {\r\n    currentOpenRoomId,\r\n    currentOpenRoom: currentOpenRoomData = {},\r\n  } = currentOpenRoom;\r\n  //! here add\r\n\r\n  useEffect(() => {\r\n    if (currentOpenRoomId && !currentOpenRoomData._id) {\r\n      dispatch(setCurrentOpenRoomAction(currentOpenRoomId));\r\n    }\r\n  }, [currentOpenRoomData, currentOpenRoomId, dispatch]);\r\n\r\n  const classes = useStyle();\r\n  return (\r\n    <div\r\n      className={\r\n        classes.root +\r\n        ' ' +\r\n        (smallScreen ? (open ? classes.open : classes.closed) : '')\r\n      }\r\n    >\r\n      {currentOpenRoomId && currentOpenRoomData._id ? (\r\n        <ChatMsg\r\n          currentOpenRoomId={currentOpenRoomId}\r\n          currentOpenRoom={currentOpenRoomData}\r\n          setOpenSideBar={setOpenSideBar}\r\n          setOpenChatBox={setOpenChatBox}\r\n        />\r\n      ) : (\r\n        <NoChat />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBox;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport useStyles from './styles';\r\nimport Sidebar from '../../components/Sidebar/Sidebar';\r\nimport ChatBox from '../../components/ChatBox/ChatBox';\r\nimport { createSocketAction } from '../../actions/socketActions';\r\nimport {\r\n  updateRoomMessagesAction,\r\n  markMessageAsSeen,\r\n} from '../../actions/messageActions';\r\nimport {\r\n  updateRoomAction,\r\n  updateRoomWithIdAction,\r\n  updateCurrentOpenRoomAction,\r\n  updateRoomAfterOneDeletedAction,\r\n} from '../../actions/roomActions';\r\nimport { setCurrentChattingUserData } from '../../actions/userActions';\r\nimport { CREATE_ROOM_RESET } from '../../constants/roomConstants';\r\n\r\nconst App = ({ history }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const [openSideBar, setOpenSideBar] = useState(true);\r\n  const [openChatBox, setOpenChatBox] = useState(true);\r\n  const [smallScreen, setSmallScreen] = useState(false);\r\n\r\n  const loginUser = useSelector((s) => s.loginUser);\r\n  const { user } = loginUser;\r\n\r\n  const socket = useSelector((s) => s.socket);\r\n\r\n  //? check if user isn't logged in\r\n  useEffect(() => {\r\n    if (!user || !user.token) {\r\n      history.replace('/login');\r\n    } else {\r\n      dispatch(createSocketAction());\r\n    }\r\n  }, [dispatch, history, user]);\r\n\r\n  useEffect(() => {\r\n    const windowWidth = window.innerWidth;\r\n    if (windowWidth <= 600) {\r\n      setOpenSideBar(true);\r\n      setOpenChatBox(false);\r\n      setSmallScreen(true);\r\n    }\r\n  }, []);\r\n\r\n  //? for displaying room messages if there is a currentOpenRoom\r\n  useEffect(() => {\r\n    if (socket.on) {\r\n      socket.on('server--user-send-message', (data) => {\r\n        //! add get room with id =>DONE\r\n        //! then add action to get room with id and its constant will be update room and put up => DONE\r\n        //! then the payload will be the fetched room by action =>DONE\r\n        //! and then update it => DONE\r\n        //! IMPORTANT this trick is so important to use setMessages(messages=>[])\r\n        //! dispatching updateMessages\r\n        //? this for updating the rooms on the room container\r\n        dispatch(updateRoomWithIdAction(data.room));\r\n\r\n        //! add updateDisplayedMessagesAction\r\n        //! the action will check if there is currentOpenRoom and message room is the currentOpenRoom\r\n        //! then the constant will be UPDATE_DISPLAYED_MESSAGES\r\n        //! the reducer will push the new message to the displayed messages\r\n        dispatch(updateRoomMessagesAction(data));\r\n\r\n        //! this functionality won't work now\r\n        //? we will mark message as seen if the small screen is false and chat box is open\r\n        //? and the markMessageAsSeen action will take are of determining the current open chat\r\n        // if (smallScreen && openChatBox) {\r\n        dispatch(markMessageAsSeen(data));\r\n        // }\r\n      });\r\n\r\n      socket.on('server--user-added-new-room', (room) => {\r\n        dispatch(updateRoomAction(room));\r\n        dispatch({\r\n          type: CREATE_ROOM_RESET,\r\n        });\r\n      });\r\n\r\n      socket.on('server--user-accept-new-room', (room) => {\r\n        dispatch(updateRoomAction(room));\r\n        dispatch(updateCurrentOpenRoomAction(room._id));\r\n      });\r\n\r\n      socket.on('server--user-delete-chat', (roomId) => {\r\n        dispatch(updateRoomAfterOneDeletedAction(roomId));\r\n      });\r\n\r\n      socket.on('server--user-block-room', (block) => {\r\n        dispatch(updateCurrentOpenRoomAction(block.room));\r\n      });\r\n\r\n      socket.on('server--user-unblock-room', (block) => {\r\n        dispatch(updateCurrentOpenRoomAction(block.room));\r\n      });\r\n      socket.on('server--user-online', ({ userId, onlineId }) => {\r\n        dispatch(\r\n          setCurrentChattingUserData({ status: 'online', userId, onlineId })\r\n        );\r\n      });\r\n      socket.on('server--user-offline', ({ userId, lastSeenAt }) => {\r\n        dispatch(\r\n          setCurrentChattingUserData({\r\n            status: 'offline',\r\n            userId,\r\n            lastSeenAt,\r\n          })\r\n        );\r\n      });\r\n      socket.on(\r\n        'server--user-currently-typing',\r\n        ({ userId, typingUserOnlineId }) => {\r\n          dispatch(\r\n            setCurrentChattingUserData({\r\n              status: 'startTyping',\r\n              userId,\r\n              typing: true,\r\n              typingUserOnlineId,\r\n            })\r\n          );\r\n        }\r\n      );\r\n\r\n      socket.on(\r\n        'server--user-stopped-typing',\r\n        ({ userId, typingUserOnlineId }) => {\r\n          dispatch(\r\n            setCurrentChattingUserData({\r\n              status: 'stopTyping',\r\n              userId,\r\n              typing: false,\r\n              typingUserOnlineId,\r\n            })\r\n          );\r\n        }\r\n      );\r\n\r\n      // socket.on('server--message-delivered', (message) => {\r\n      //   //? dispatch(updateUserStatus({ status: 'online', userId, onlineId }));\r\n      //   dispatch(updateRoomMessagesAction(message));\r\n\r\n      // });\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [dispatch, socket]);\r\n\r\n  return user && user.token ? (\r\n    <div className={classes.root}>\r\n      <Sidebar\r\n        smallScreen={smallScreen}\r\n        open={openSideBar}\r\n        setOpenChatBox={setOpenChatBox}\r\n        setOpenSideBar={setOpenSideBar}\r\n      />\r\n      <ChatBox\r\n        smallScreen={smallScreen}\r\n        open={openChatBox}\r\n        setOpenSideBar={setOpenSideBar}\r\n        setOpenChatBox={setOpenChatBox}\r\n      />\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default App;\r\n","import * as c from '../constants/socketConstants';\r\nimport * as urls from '../constants/urls';\r\nimport socketIOClient from 'socket.io-client';\r\n\r\nexport const createSocketAction = () => (dispatch, getState) => {\r\n  const loginUser = getState().loginUser.user;\r\n  const socket = socketIOClient.connect(urls.host, {\r\n    query: { id: loginUser._id },\r\n  });\r\n\r\n  dispatch({\r\n    type: c.CREATE_SOCKET,\r\n    payload: socket,\r\n  });\r\n};\r\n","export const CREATE_SOCKET = 'CREATE_SOCKET';\r\nexport const DISCONNECT_SOCKET = 'DISCONNECT_SOCKET';\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '90vw',\r\n    height: '90vh',\r\n    background: 'white',\r\n    position: 'relative',\r\n    zIndex: '2',\r\n    boxShadow: ' -2px -2px 10px grey',\r\n    display: 'flex',\r\n    textAlign: 'center',\r\n    flexDirection: 'column',\r\n    overflow: 'auto',\r\n    '&::-webkit-scrollbar': {\r\n      width: '5px',\r\n    },\r\n\r\n    '&::-webkit-scrollbar-thumb': {\r\n      background: '#CCCCCC',\r\n      borderRadius: '10px',\r\n    },\r\n\r\n    '&::-webkit-scrollbar-thumb:hover': {\r\n      background: '#aaa',\r\n    },\r\n  },\r\n  header: {\r\n    width: '100%',\r\n    height: '200px',\r\n    backgroundColor: '#EDEDED',\r\n    boxShadow: '0 1px 3px #ccc, 0 -1px 3px #ccc ',\r\n\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '10px',\r\n  },\r\n  myPic: {\r\n    width: '180px',\r\n    height: '180px',\r\n  },\r\n  myName: {\r\n    fontSize: '30px',\r\n    marginLeft: '20px',\r\n  },\r\n  myEmail: {\r\n    marginTop: '15px',\r\n    textAlign: 'left',\r\n    marginLeft: '20px',\r\n    fontSize: '20px',\r\n    '& a': {\r\n      textDecoration: 'none',\r\n      color: '#009688',\r\n    },\r\n  },\r\n\r\n  contentContainer: {\r\n    width: '100%',\r\n    paddingTop: '20px',\r\n    '& a': {\r\n      marginRight: '10px',\r\n      cursor: 'pointer',\r\n    },\r\n    '& section': {\r\n      marginBottom: '20px',\r\n      padding: '10px 0',\r\n    },\r\n    '& section:nth-child(even)': {\r\n      backgroundColor: '#EDEDED',\r\n\r\n      boxShadow: '0 1px 3px #ccc, 0 -1px 3px #ccc ',\r\n    },\r\n  },\r\n\r\n  facebook: {\r\n    fontSize: '50px',\r\n    color: '#314E8D',\r\n  },\r\n  twitter: {\r\n    fontSize: '50px',\r\n    color: '#1CA0F1',\r\n  },\r\n  linkedIn: {\r\n    fontSize: '50px',\r\n    color: '#0A66C2',\r\n  },\r\n  phoneContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  whatsApp: {\r\n    fontSize: '50px',\r\n    color: '#0CC042',\r\n    marginRight: '10px',\r\n  },\r\n  phoneNo: {\r\n    display: 'inline-block',\r\n    backgroundColor: 'white',\r\n    padding: '10px 8px',\r\n    borderRadius: '10px',\r\n    boxShadow: '0px 0px 3px  #ccc inset,1px 1px 3px  #ccc inset',\r\n    cursor: 'pointer',\r\n    fontSize: '18px',\r\n  },\r\n\r\n  feedbackForm: {\r\n    width: '350px',\r\n    margin: 'auto',\r\n  },\r\n\r\n  userFeedBack: {\r\n    padding: '10px 15px',\r\n    border: 'none',\r\n    resize: 'none',\r\n    minHeight: '100px',\r\n    maxHeight: '120px',\r\n    width: '350px',\r\n    boxShadow: '0px 0px 3px  #ccc inset,1px 1px 3px  #ccc inset',\r\n    borderRadius: '10px',\r\n    transition: '0 all',\r\n    outline: 'none',\r\n    lineHeight: '1.5',\r\n    '&::-webkit-scrollbar': {\r\n      width: '5px',\r\n    },\r\n\r\n    '&::-webkit-scrollbar-thumb': {\r\n      background: '#CCCCCC',\r\n      borderRadius: '10px',\r\n    },\r\n\r\n    '&::-webkit-scrollbar-thumb:hover': {\r\n      background: '#aaa',\r\n    },\r\n\r\n    '&:focus': {\r\n      backgroundColor: '#eee',\r\n    },\r\n  },\r\n  sendUserFeedBackBtn: {\r\n    backgroundColor: '#049588',\r\n    color: 'white',\r\n    '&:hover': {\r\n      backgroundColor: '#049560',\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React, { useState } from 'react';\r\nimport useStyles from './styles';\r\nimport { Avatar, IconButton, Button } from '@material-ui/core';\r\nimport { ArrowBack } from '@material-ui/icons';\r\nimport { Link } from 'react-router-dom';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport WhatsAppIcon from '@material-ui/icons/WhatsApp';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\n\r\nconst ContactMe = () => {\r\n  //? defining some variables\r\n  const classes = useStyles();\r\n  const [userFeedBack, setUserFeedBack] = useState('');\r\n\r\n  const handleSubmitUserFeedBack = (e) => {\r\n    e.preventDefault();\r\n    setUserFeedBack('');\r\n  };\r\n  return (\r\n    <>\r\n      <div className={classes.root}>\r\n        <header className={classes.header}>\r\n          <Link\r\n            to='/'\r\n            style={{ width: '20px', height: '20px', marginRight: '20px' }}\r\n          >\r\n            <ArrowBack />\r\n          </Link>\r\n\r\n          <Avatar src='/images/other/mine.jpg' className={classes.myPic} />\r\n          <div className={classes.info}>\r\n            <div className={classes.myName}>Amr Mohammed Hassan</div>\r\n            <div className={classes.myEmail}>\r\n              <a\r\n                title='Send Gmail Email'\r\n                href='mailto:amrmhassanmarsafa@gmail.com'\r\n              >\r\n                Send Email\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </header>\r\n        <div className={classes.contentContainer}>\r\n          <section>\r\n            <a href='https://www.facebook.com/amrm.hassan.10'>\r\n              <IconButton title='FaceBook Profile'>\r\n                <FacebookIcon className={classes.facebook} />\r\n              </IconButton>\r\n            </a>\r\n            <a href='https://twitter.com/Amr07680989'>\r\n              <IconButton title='Twitter Profile'>\r\n                <TwitterIcon className={classes.twitter} />\r\n              </IconButton>\r\n            </a>\r\n            <a href='https://www.linkedin.com/in/amr-hassan-354985193/'>\r\n              <IconButton title='LinkedIn Profile'>\r\n                <LinkedInIcon className={classes.linkedIn} />\r\n              </IconButton>\r\n            </a>\r\n          </section>\r\n          <section title='WhatsApp Number' className={classes.phoneContainer}>\r\n            <WhatsAppIcon\r\n              title='WhatsApp Number'\r\n              className={classes.whatsApp}\r\n            />\r\n            <div title='WhatsApp Number' className={classes.phoneNo}>\r\n              +20 1147497502\r\n            </div>\r\n          </section>\r\n          <section>\r\n            <form\r\n              onSubmit={handleSubmitUserFeedBack}\r\n              className={classes.feedbackForm}\r\n            >\r\n              <textarea\r\n                className={classes.userFeedBack}\r\n                placeholder='You can leave a me a message here ...'\r\n                onChange={(e) => setUserFeedBack(e.target.value)}\r\n                value={userFeedBack}\r\n              ></textarea>\r\n              <Button\r\n                fullWidth\r\n                variant='contained'\r\n                className={classes.sendUserFeedBackBtn}\r\n                disabled={userFeedBack.trim().length < 5 && true}\r\n                type='submit'\r\n              >\r\n                Send\r\n              </Button>\r\n            </form>\r\n          </section>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactMe;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction='up' ref={ref} {...props} />;\r\n});\r\n\r\nexport default function FullScreenDialog() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant='outlined' color='primary' onClick={handleClickOpen}>\r\n        Open full-screen dialog\r\n      </Button>\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge='start'\r\n              color='inherit'\r\n              onClick={handleClose}\r\n              aria-label='close'\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant='h6' className={classes.title}>\r\n              Sound\r\n            </Typography>\r\n            <Button autoFocus color='inherit' onClick={handleClose}>\r\n              save\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <List>\r\n          <ListItem button>\r\n            <ListItemText primary='Phone ringtone' secondary='Titania' />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem button>\r\n            <ListItemText\r\n              primary='Default notification ringtone'\r\n              secondary='Tethys'\r\n            />\r\n          </ListItem>\r\n        </List>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport LogIn from '../views/LogIn/LogIn';\r\nimport SignUp from '../views/SignUp/SignUp';\r\nimport ForgotPassword from '../views/ForgotPassword/ForgotPassword';\r\nimport ResetPassword from '../views/ResetPassword/ResetPassword';\r\nimport AddFriend from '../views/AddFriend/AddFriend';\r\nimport VerifyEmail from '../views/VerifyEmail/VerifyEmail';\r\nimport Home from '../views/Home/Home';\r\nimport ContactMe from '../views/ContactMe/ContactMe';\r\nimport Test from '../Tests/Test';\r\n\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Route path='/login' component={LogIn} />\r\n      <Route path='/signup' component={SignUp} />\r\n      <Route path='/home' component={Home} />\r\n      <Route path='/contactMe' component={ContactMe} />\r\n      <Route path='/forgotPassword' component={ForgotPassword} />\r\n      <Route path='/addFriend' component={AddFriend} />\r\n      <Route path='/resetPassword/:token' component={ResetPassword} />\r\n      <Route path='/verifyEmail/:token' component={VerifyEmail} />\r\n      <Route path='/test' component={Test} />\r\n      <Route path='/' component={Home} exact />\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import * as c from '../constants/messagesConstants';\r\n\r\n//! improvement => when user visit room and its content added to hist redux\r\n//! try not remove it when opening another room\r\n//! for better performance\r\n\r\nexport const getRoomMessagesReducer = (state = { messages: [] }, action) => {\r\n  switch (action.type) {\r\n    case c.GET_ROOM_MESSAGES_REQUEST:\r\n      return { loading: true };\r\n    case c.GET_ROOM_MESSAGES_SUCCESS:\r\n      return { loading: false, messages: action.payload };\r\n    case c.GET_ROOM_MESSAGES_FAIL:\r\n      return { loading: false, err: action.payload };\r\n    case c.UPDATE_DISPLAYED_MESSAGES:\r\n      try {\r\n        const {\r\n          message,\r\n          addMyMessage,\r\n          updateMyMessage,\r\n          addOtherMessage,\r\n        } = action.payload;\r\n        let messages = [...state.messages];\r\n\r\n        if (addMyMessage) {\r\n          messages.push(message);\r\n        } else if (updateMyMessage) {\r\n          const newModifiedMessages = updateAnArray(messages, message);\r\n          messages = newModifiedMessages;\r\n        } else if (addOtherMessage) {\r\n          messages.push(message);\r\n        } else {\r\n          alert('Non expected state coming from message reducer check console');\r\n        }\r\n        return { ...state, messages };\r\n      } catch (err) {\r\n        return state;\r\n      }\r\n\r\n    case c.GET_ROOM_MESSAGES_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const createMessageReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case c.CREATE_MESSAGE_REQUEST:\r\n      return { loading: true };\r\n    case c.CREATE_MESSAGE_SUCCESS:\r\n      return { loading: false, message: action.payload, success: true };\r\n    case c.CREATE_MESSAGE_FAIL:\r\n      return { loading: false, err: action.payload };\r\n    case c.CREATE_MESSAGE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst updateAnArray = (array = [], newObj = {}, identifier = 'clientId') => {\r\n  const oldObj = array.find((item) => item[identifier] === newObj[identifier]);\r\n\r\n  const oldObjIndex = array.indexOf(oldObj);\r\n  // const firstPartArray = array.splice(0, oldObjIndex);\r\n  // const lastPartArray = array.splice(oldObjIndex + 1);\r\n  // const finalResultArray = [...firstPartArray, newObj, ...lastPartArray];\r\n  array.splice(oldObjIndex, 1, newObj);\r\n\r\n  return array;\r\n};\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport {\r\n  loginUserReducer,\r\n  userForgotPasswordReducer,\r\n  userResetPasswordReducer,\r\n  setCurrentChattingUserDataReducer,\r\n  updateMeReducer,\r\n  userVerifyEmailReducer,\r\n  searchUsersReducer,\r\n} from './reducers/userReducers';\r\nimport {\r\n  getMyRoomsReducer,\r\n  createRoomReducer,\r\n  currentOpenRoomReducer,\r\n} from './reducers/roomReducers';\r\n\r\nimport {\r\n  getRoomMessagesReducer,\r\n  createMessageReducer,\r\n} from './reducers/messageReducers';\r\nimport { createSocketReducer } from './reducers/socketReducers';\r\n\r\nconst reducer = combineReducers({\r\n  loginUser: loginUserReducer,\r\n  myRooms: getMyRoomsReducer,\r\n  createRoom: createRoomReducer,\r\n  currentOpenRoom: currentOpenRoomReducer,\r\n  roomMessages: getRoomMessagesReducer,\r\n  createMessage: createMessageReducer,\r\n  socket: createSocketReducer,\r\n  userForgotPassword: userForgotPasswordReducer,\r\n  userResetPassword: userResetPasswordReducer,\r\n  currentChattingUserData: setCurrentChattingUserDataReducer,\r\n  updateMe: updateMeReducer,\r\n  userVerifyEmail: userVerifyEmailReducer,\r\n  searchUsers: searchUsersReducer,\r\n});\r\n\r\nconst loggedInUser = localStorage.getItem('loggedInUser')\r\n  ? JSON.parse(localStorage.getItem('loggedInUser'))\r\n  : {};\r\nconst currentChattingUserData = localStorage.getItem('currentChattingUserData')\r\n  ? JSON.parse(localStorage.getItem('currentChattingUserData'))\r\n  : {};\r\n\r\nconst currentRoomId = localStorage.getItem('currentOpenRoomId') || '';\r\n\r\nlet initialState = {\r\n  loginUser: { user: loggedInUser },\r\n  currentOpenRoom: {\r\n    currentOpenRoomId: currentRoomId,\r\n    currentOpenRoomData: {},\r\n  },\r\n  currentChattingUserData: currentChattingUserData,\r\n};\r\n\r\nconst middleware = [thunk];\r\nlet store;\r\nif (process.env.NODE_ENV === 'development') {\r\n  store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n  );\r\n} else {\r\n  store = createStore(reducer, initialState, applyMiddleware(...middleware));\r\n}\r\n\r\nexport default store;\r\n","import * as c from '../constants/userConstants';\r\n\r\nexport const loginUserReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case c.LOGIN_REQUEST:\r\n      return { loading: true };\r\n    case c.LOGIN_SUCCESS:\r\n      return { loading: false, user: action.payload, success: true };\r\n    case c.LOGIN_FAIL:\r\n      return { loading: false, err: action.payload };\r\n    case c.SIGNUP_REQUEST:\r\n      return { loading: true };\r\n    case c.SIGNUP_SUCCESS:\r\n      return { loading: false, user: action.payload, success: true };\r\n    case c.SIGNUP_FAIL:\r\n      return { loading: false, err: action.payload };\r\n    case c.LOGOUT_USER:\r\n      return {};\r\n    case c.UPDATE_USER_SUCCESS:\r\n      return { ...state, user: { ...state.user, ...action.payload } };\r\n    case c.VERIFY_USER_SUCCESS:\r\n      return { loading: false, user: action.payload, success: true };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const updateMeReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case c.UPDATE_USER_REQUEST:\r\n      return { loading: true };\r\n    case c.UPDATE_USER_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case c.UPDATE_USER_FAIL:\r\n      return { loading: false, err: action.payload };\r\n    case c.UPDATE_USER_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setCurrentChattingUserDataReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case c.CURRENT_USER_DATA:\r\n      return { ...state, ...action.payload };\r\n    case c.CURRENT_USER_DATA_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userForgotPasswordReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case c.FORGOT_PASSWORD_REQUEST:\r\n      return { loading: true };\r\n    case c.FORGOT_PASSWORD_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case c.FORGOT_PASSWORD_FAIL:\r\n      return { loading: false, err: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const userResetPasswordReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case c.RESET_PASSWORD_REQUEST:\r\n      return { loading: true };\r\n    case c.RESET_PASSWORD_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case c.RESET_PASSWORD_FAIL:\r\n      return { loading: false, err: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const searchUsersReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case c.SEARCH_USERS_REQUEST:\r\n      return { loading: true };\r\n    case c.SEARCH_USERS_SUCCESS:\r\n      return { loading: false, success: true, users: action.payload };\r\n    case c.SEARCH_USERS_FAIL:\r\n      return { loading: false, err: action.payload };\r\n    case c.SEARCH_USERS_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userVerifyEmailReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case c.VERIFY_USER_REQUEST:\r\n      return { loading: true };\r\n    case c.VERIFY_USER_FAIL:\r\n      return { loading: false, err: action.payload };\r\n    case c.VERIFY_USER_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as c from '../constants/roomConstants';\r\n\r\nexport const getMyRoomsReducer = (state = { rooms: [] }, action) => {\r\n  switch (action.type) {\r\n    case c.GET_MY_ROOMS_REQUEST:\r\n      return { loading: true };\r\n    case c.GET_MY_ROOMS_SUCCESS:\r\n      return { loading: false, rooms: action.payload };\r\n    case c.GET_MY_ROOMS_FAIL:\r\n      return { loading: false, err: action.payload };\r\n    case c.UPDATE_ROOM_PUT_UP:\r\n      let roomId = action.payload._id;\r\n      let rooms = [...state.rooms].filter((room) => room._id !== roomId);\r\n      rooms.unshift(action.payload);\r\n      return { ...state, rooms };\r\n    case c.UPDATE_ROOMS_AFTER_DELETING:\r\n      const roomIdToDelete = action.payload;\r\n\r\n      const roomsAfterDeleting = [...state.rooms].filter(\r\n        (room) => room._id !== roomIdToDelete\r\n      );\r\n      return { ...state, rooms: roomsAfterDeleting };\r\n    case c.GET_MY_ROOMS_RESET:\r\n      return {};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const createRoomReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case c.CREATE_ROOM_REQUEST:\r\n      return { loading: true };\r\n    case c.CREATE_ROOM_SUCCESS:\r\n      return { loading: false, room: action.payload, success: true };\r\n    case c.CREATE_ROOM_FAIL:\r\n      return { loading: false, err: action.payload };\r\n    case c.CREATE_ROOM_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const acceptRoomReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case c.HANDLE_ACCEPT_ROOM_REQUEST:\r\n      return { loading: true };\r\n    case c.HANDLE_ACCEPT_ROOM_SUCCESS:\r\n      return { loading: false, room: action.payload, success: true };\r\n    case c.HANDLE_ACCEPT_ROOM_FAIL:\r\n      return { loading: false, err: action.payload };\r\n    case c.HANDLE_BLOCK_ROOM_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const currentOpenRoomReducer = (\r\n  state = { currentOpenRoomId: '', currentOpenRoom: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case c.CURRENT_OPEN_ROOM_REQUEST:\r\n      return { loading: true };\r\n    case c.CURRENT_OPEN_ROOM_SUCCESS:\r\n      return {\r\n        currentOpenRoom: action.payload,\r\n        loading: false,\r\n        success: true,\r\n        currentOpenRoomId: action.payload._id,\r\n      };\r\n    case c.CURRENT_OPEN_ROOM_FAIL:\r\n      return { loading: false, err: action.payload };\r\n    case c.CURRENT_OPEN_ROOM_RESET:\r\n      return {};\r\n    case c.UPDATE_CURRENT_OPEN_ROOM:\r\n      return { ...state, currentOpenRoom: action.payload };\r\n    case c.TYPING_MESSAGE:\r\n      return { ...state, typing: action.payload };\r\n    //   let currentOpenRoom = { ...state.currentOpenRoom };\r\n    //   let userToShowOnRoom = { ...currentOpenRoom }.userToShowOnRoom;\r\n    //   userToShowOnRoom = { ...userToShowOnRoom, typing: action.payload };\r\n    //   currentOpenRoom = { ...currentOpenRoom, userToShowOnRoom };\r\n    //   return { ...state, currentOpenRoom };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const deleteRoomReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case c.DELETE_ROOM_REQUEST:\r\n      return { loading: true };\r\n    case c.DELETE_ROOM_SUCCESS:\r\n      return { loading: false, room: action.payload, success: true };\r\n    case c.DELETE_ROOM_FAIL:\r\n      return { loading: false, err: action.payload };\r\n    case c.DELETE_ROOM_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as c from '../constants/socketConstants';\r\n\r\nexport const createSocketReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case c.CREATE_SOCKET:\r\n      return action.payload;\r\n    case c.DISCONNECT_SOCKET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App/App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}