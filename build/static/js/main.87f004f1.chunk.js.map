{"version":3,"sources":["views/LogIn/styles.js","constants/urls.js","views/LogIn/LogIn.jsx","actions/userActions.js","constants/userConstants.js","views/SignUp/styles.js","views/SignUp/SignUp.jsx","views/ForgotPassword/styles.js","views/ForgotPassword/ForgotPassword.jsx","views/ResetPassword/styles.js","views/ResetPassword/ResetPassword.jsx","views/Home/styles.js","components/Sidebar/styles.js","components/Sidebar/Header/styles.js","actions/roomActions.js","constants/roomConstants.js","components/global/Message/styles.js","components/global/Message/Message.jsx","components/Sidebar/Header/Header.jsx","components/Sidebar/SearchBox/styles.js","components/Sidebar/SearchBox/SearchBox.jsx","components/Sidebar/ChatsContainer/styles.js","components/Sidebar/ChatsContainer/ChatGo/styles.js","components/Sidebar/ChatsContainer/ChatGo/ChatGo.jsx","components/Sidebar/ChatsContainer/ChatsContainer.jsx","components/Sidebar/Sidebar.jsx","components/ChatBox/styles.js","components/ChatBox/NoChat/styles.js","components/ChatBox/NoChat/NoChat.jsx","components/ChatBox/ChatMsg/styles.js","components/ChatBox/ChatMsg/Header/styles.js","components/ChatBox/ChatMsg/Header/Header.jsx","components/ChatBox/ChatMsg/MessagesContainer/styles.js","components/ChatBox/ChatMsg/MessagesContainer/Message/styles.js","components/ChatBox/ChatMsg/MessagesContainer/Message/Message.jsx","components/ChatBox/ChatMsg/MessagesContainer/MessagesContainer.jsx","actions/messageActions.js","constants/messagesConstants.js","components/ChatBox/ChatMsg/ChatController/styles.js","components/ChatBox/ChatMsg/ChatController/ChatController.jsx","components/ChatBox/ChatMsg/ChatMsg.jsx","components/ChatBox/ChatBox.jsx","views/Home/Home.jsx","actions/socketActions.js","constants/socketConstants.js","Tests/Test.jsx","App/App.jsx","store.js","reducers/userReducers.js","reducers/roomReducers.js","reducers/messageReducers.js","reducers/socketReducers.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","height","background","position","zIndex","boxShadow","display","textAlign","paddingTop","emailInput","fontWeight","passwordInput","InputBorder","borderColor","loginBtn","backgroundColor","marginTop","notSignedUp","signUpLink","textDecoration","color","lonInTopHeader","margin","alignItems","justifyContent","loginLogo","host","usersUrl","roomsUrl","messagesUrl","createMuiTheme","palette","primary","green","LogIn","history","useState","email","password","userData","setUserData","classes","dispatch","useDispatch","loginUser","useSelector","s","logInLoading","loading","loggedInUser","user","logInError","err","successLogIn","success","Alert","props","elevation","variant","handleInputChange","e","target","name","value","useEffect","token","push","Snackbar","open","autoHideDuration","anchorOrigin","horizontal","vertical","severity","className","Container","maxWidth","Typography","style","src","alt","loginFrom","onSubmit","preventDefault","getState","a","type","config","headers","axios","post","urls","data","payload","localStorage","setItem","JSON","stringify","response","message","loginUserAction","ThemeProvider","TextField","fullWidth","label","required","id","disabled","autoComplete","onChange","InputProps","notchedOutline","inputProps","minLength","Button","endIcon","CircularProgress","to","SignUp","firstName","lastName","passwordConfirm","signupLoading","signupError","signupSuccess","signupUserAction","Grid","container","spacing","item","sm","xs","fontSize","ForgotPassword","setEmail","userForgotPassword","loadingForgotPassword","successForgotPassword","errForgotPassword","userForgotPasswordAction","ResetPassword","match","params","console","log","userResetPassword","loadingResetPassword","successResetPassword","errResetPassword","setTimeout","userResetPasswordAction","minWidth","flexDirection","overflow","borderRight","flex","padding","text","addChat","border","sidebarIcons","addChatDialogBtn","getMyRoomsAction","authorization","get","Message","useStyle","Header","setOpen","createRoom","createRoomLoading","createRoomSuccess","createRoomErr","room","handleCloseDialog","IconButton","Avatar","photo","Dialog","onClose","aria-labelledby","DialogTitle","otherUserEmail","trim","DialogContent","autoFocus","DialogActions","onClick","length","Add","borderBottom","main","borderRadius","searchBox","outline","searchIcon","marginRight","SearchBox","placeholder","btnBase","cursor","avatarContainer","info","infoTop","marginBottom","whiteSpace","textOverflow","fontFamily","date","lastMsg","newChat","ChatGo","ButtonBase","currentRoomId","_id","userToShowOnRoom","moment","lastMessage","createdAt","format","new","messageTXT","ChatsContainer","myRooms","loadingMyRooms","rooms","errGettingMyRooms","map","key","Sidebar","mainLogo","mainText","subTitle","lineHeight","contactMe","NoChat","bgObjects","backgroundImage","backgroundSize","backgroundPosition","top","left","opacity","userInfoBtnBase","userInfo","status","otherPerson","setOtherPerson","currentOpenRoom","roomData","find","earlierMessagesBtn","right","bottom","otherMessage","otherMessageText","otherMessageDate","myMessage","myMessageText","myMessageDate","msgStatus","paddingLeft","adminMessage","textTransform","userSelect","msg","sender","messageDate","setMessageDate","adminMessageText","MessagesContainer","roomMessages","loadingMessages","messagesFromServer","messages","errGettingMessages","socket","createMessage","sendingMessageSuccess","sentMessage","setMessages","document","getElementById","scrollTo","scrollHeight","on","Date","Math","random","minHeight","msgBox","paddingRight","msgInput","maxHeight","resize","send","ChatController","setMessage","setTyping","messageReceiver","setMessageReceiver","messageObj","receiver","createMessageAction","emit","rows","Send","ChatMsg","ChatBox","App","socketIOClient","roomsToJoin","DirectionSnackbar","React","handleClose","path","component","Home","Test","exact","reducer","combineReducers","state","action","initialState","getItem","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render"],"mappings":"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","file":"static/js/main.87f004f1.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '90vw',\r\n    height: '90vh',\r\n    background: 'white',\r\n    position: 'relative',\r\n    zIndex: '2',\r\n    boxShadow: ' -2px -2px 10px grey',\r\n    display: 'flex',\r\n    textAlign: 'center',\r\n    paddingTop: '30px',\r\n  },\r\n  emailInput: {\r\n    fontWeight: 'bold',\r\n    '& >.MuiInputLabel-outlined': {\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  passwordInput: {\r\n    '& >.MuiInputLabel-outlined': {\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  InputBorder: {\r\n    borderColor: '#019688',\r\n  },\r\n  loginBtn: {\r\n    backgroundColor: '#019688',\r\n    fontWeight: 'bold',\r\n    marginTop: '25px',\r\n    '&:hover': {\r\n      backgroundColor: '#008276',\r\n    },\r\n  },\r\n  notSignedUp: {\r\n    paddingTop: '20px',\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n  },\r\n  signUpLink: {\r\n    textDecoration: 'none',\r\n    color: '#019688',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n  lonInTopHeader: {\r\n    display: 'inline-flex',\r\n    margin: 'auto',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  loginLogo: {\r\n    textAlign: 'center',\r\n    display: 'inline-block',\r\n    width: '75px',\r\n    height: '75px',\r\n    margin: 'auto',\r\n    '&>img': {\r\n      width: '100%',\r\n      height: '100%',\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","export const host = 'https://amh-whatapp-clone.herokuapp.com';\r\n// export const host = 'http://localhost:5000';\r\n\r\nexport const usersUrl = `${host}/api/v1/users`;\r\nexport const roomsUrl = `${host}/api/v1/rooms`;\r\nexport const messagesUrl = `${host}/api/v1/messages`;\r\n","import React, { useEffect, useState } from 'react';\r\nimport useStyles from './styles';\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Container,\r\n  createMuiTheme,\r\n  ThemeProvider,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { Link } from 'react-router-dom';\r\nimport { loginUserAction } from '../../actions/userActions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: green,\r\n  },\r\n});\r\n\r\nconst LogIn = ({ history }) => {\r\n  //? setting local state\r\n  const [userData, setUserData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  //? defining some variables\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  //? getting user data from redux\r\n  const loginUser = useSelector((s) => s.loginUser);\r\n  const {\r\n    loading: logInLoading,\r\n    user: loggedInUser,\r\n    err: logInError,\r\n    success: successLogIn,\r\n  } = loginUser;\r\n\r\n  //? some functions\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant='filled' {...props} />;\r\n  }\r\n  const handleLoginSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(loginUserAction(userData));\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUserData({\r\n      ...userData,\r\n      [name]: value,\r\n    });\r\n  };\r\n  //? some useEffect functions\r\n  useEffect(() => {\r\n    if (loggedInUser && loggedInUser.token) {\r\n      history.push('/home');\r\n    }\r\n    //! try applying this in the main App.jsx to login every time with userToken\r\n    //! else if (loggedInUser && loggedInUser.token) {\r\n    //! add here the code to log user in with his token\r\n    //! to check if the token is expired or not\r\n    //! add this to backend too , to login with token\r\n    //! dispatch(loginUserAction(loggedInUser.token));\r\n    //! }\r\n  }, [dispatch, history, loggedInUser, successLogIn]);\r\n  return (\r\n    <>\r\n      {successLogIn ? (\r\n        <Snackbar\r\n          open={successLogIn}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='success'>Logged in successfully</Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {logInLoading ? (\r\n        <Snackbar\r\n          open={logInLoading}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='info'>Logging in</Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {logInError ? (\r\n        <Snackbar\r\n          open={logInError && true}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='error'>{logInError}</Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      <div className={classes.root}>\r\n        <Container maxWidth='xs'>\r\n          <Typography\r\n            className={classes.lonInTopHeader}\r\n            style={{ textAlign: 'center' }}\r\n            variant='h2'\r\n          >\r\n            Login\r\n            <div className={classes.loginLogo}>\r\n              <img src='images/login/loginLogo.png' alt='Login Logo' />\r\n            </div>\r\n          </Typography>\r\n          <form className={classes.loginFrom} onSubmit={handleLoginSubmit}>\r\n            <ThemeProvider theme={theme}>\r\n              <TextField\r\n                fullWidth\r\n                margin='normal'\r\n                variant='outlined'\r\n                label='Email'\r\n                required\r\n                name='email'\r\n                type='email'\r\n                id='email'\r\n                disabled={logInLoading}\r\n                autoComplete='current-email'\r\n                onChange={handleInputChange}\r\n                value={userData.email}\r\n                className={classes.emailInput}\r\n                InputProps={{\r\n                  className: classes.emailInput,\r\n                  classes: {\r\n                    notchedOutline: classes.InputBorder,\r\n                  },\r\n                }}\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                margin='normal'\r\n                variant='outlined'\r\n                label='Password'\r\n                required\r\n                name='password'\r\n                type='password'\r\n                id='password'\r\n                disabled={logInLoading}\r\n                autoComplete='current-password'\r\n                onChange={handleInputChange}\r\n                value={userData.password}\r\n                inputProps={{\r\n                  minLength: 8,\r\n                }}\r\n                className={classes.passwordInput}\r\n                InputProps={{\r\n                  className: classes.passwordInput,\r\n                  classes: {\r\n                    notchedOutline: classes.InputBorder,\r\n                  },\r\n                }}\r\n              />\r\n            </ThemeProvider>\r\n\r\n            <Button\r\n              type='submit'\r\n              variant='contained'\r\n              color='primary'\r\n              className={classes.loginBtn}\r\n              fullWidth\r\n              disabled={logInLoading}\r\n              endIcon={\r\n                logInLoading && (\r\n                  <CircularProgress\r\n                    style={{ color: 'black', width: '20px', height: '20px' }}\r\n                  />\r\n                )\r\n              }\r\n            >\r\n              Login\r\n            </Button>\r\n          </form>\r\n          <Typography className={classes.notSignedUp}>\r\n            Don't have email ?{' '}\r\n            <Link className={classes.signUpLink} to='/signup'>\r\n              {' '}\r\n              Signup\r\n            </Link>\r\n          </Typography>\r\n          <Typography className={classes.notSignedUp}>\r\n            <Link className={classes.signUpLink} to='/forgotPassword'>\r\n              Forgot password\r\n            </Link>{' '}\r\n            ?\r\n          </Typography>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LogIn;\r\n","import * as c from '../constants/userConstants';\r\nimport * as urls from '../constants/urls';\r\nimport axios from 'axios';\r\n\r\nexport const loginUserAction = (userData) => async (dispatch, getState) => {\r\n  try {\r\n    // const isToken = typeof userData === 'string';\r\n    dispatch({\r\n      type: c.LOGIN_REQUEST,\r\n    });\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      `${urls.usersUrl}/login`,\r\n      userData,\r\n      config\r\n    );\r\n\r\n    const { token, user } = data;\r\n    const payload = { ...user, token };\r\n\r\n    dispatch({\r\n      type: c.LOGIN_SUCCESS,\r\n      payload,\r\n    });\r\n\r\n    localStorage.setItem('loggedInUser', JSON.stringify(payload));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.LOGIN_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const signupUserAction = (userData) => async (dispatch, getState) => {\r\n  try {\r\n    // const isToken = typeof userData === 'string';\r\n    dispatch({\r\n      type: c.SIGNUP_REQUEST,\r\n    });\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      `${urls.usersUrl}/signup`,\r\n      userData,\r\n      config\r\n    );\r\n\r\n    const { token, user } = data;\r\n    const payload = { ...user, token };\r\n\r\n    dispatch({\r\n      type: c.SIGNUP_SUCCESS,\r\n      payload,\r\n    });\r\n\r\n    localStorage.setItem('loggedInUser', JSON.stringify(payload));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.SIGNUP_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const userForgotPasswordAction = (email) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    // const isToken = typeof userData === 'string';\r\n    dispatch({\r\n      type: c.FORGOT_PASSWORD_REQUEST,\r\n    });\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    await axios.post(`${urls.usersUrl}/forgotPassword`, { email }, config);\r\n\r\n    dispatch({\r\n      type: c.FORGOT_PASSWORD_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.FORGOT_PASSWORD_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const userResetPasswordAction = (token, userData) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    // const isToken = typeof userData === 'string';\r\n    dispatch({\r\n      type: c.RESET_PASSWORD_REQUEST,\r\n    });\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    await axios.post(\r\n      `${urls.usersUrl}/resetPassword/${token}`,\r\n      userData,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: c.RESET_PASSWORD_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.RESET_PASSWORD_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n","export const LOGIN_REQUEST = 'LOGIN_REQUEST';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\n\r\nexport const SIGNUP_REQUEST = 'SIGNUP_REQUEST';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\r\n\r\nexport const FORGOT_PASSWORD_REQUEST = 'FORGOT_PASSWORD_REQUEST';\r\nexport const FORGOT_PASSWORD_SUCCESS = 'FORGOT_PASSWORD_SUCCESS';\r\nexport const FORGOT_PASSWORD_FAIL = 'FORGOT_PASSWORD_FAIL';\r\n\r\nexport const RESET_PASSWORD_REQUEST = 'RESET_PASSWORD_REQUEST';\r\nexport const RESET_PASSWORD_SUCCESS = 'RESET_PASSWORD_SUCCESS';\r\nexport const RESET_PASSWORD_FAIL = 'RESET_PASSWORD_FAIL';\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '90vw',\r\n    height: '90vh',\r\n    background: 'white',\r\n    position: 'relative',\r\n    zIndex: '2',\r\n    boxShadow: ' -2px -2px 10px grey',\r\n    display: 'flex',\r\n    textAlign: 'center',\r\n    paddingTop: '30px',\r\n  },\r\n  emailInput: {\r\n    fontWeight: 'bold',\r\n    '& >.MuiInputLabel-outlined': {\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  passwordInput: {\r\n    '& >.MuiInputLabel-outlined': {\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  InputBorder: {\r\n    borderColor: '#019688',\r\n  },\r\n  loginBtn: {\r\n    backgroundColor: '#019688',\r\n    fontWeight: 'bold',\r\n    marginTop: '25px',\r\n    '&:hover': {\r\n      backgroundColor: '#008276',\r\n    },\r\n  },\r\n  notSignedUp: {\r\n    paddingTop: '20px',\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n  },\r\n  signUpLink: {\r\n    textDecoration: 'none',\r\n    color: '#019688',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n  lonInTopHeader: {\r\n    display: 'inline-flex',\r\n    margin: 'auto',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  loginLogo: {\r\n    textAlign: 'center',\r\n    display: 'inline-block',\r\n    width: '75px',\r\n    height: '75px',\r\n    margin: 'auto',\r\n    '&>img': {\r\n      width: '100%',\r\n      height: '100%',\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React, { useEffect, useState } from 'react';\r\nimport useStyles from './styles';\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Container,\r\n  createMuiTheme,\r\n  ThemeProvider,\r\n  Typography,\r\n  Grid,\r\n} from '@material-ui/core';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { Link } from 'react-router-dom';\r\nimport { signupUserAction } from '../../actions/userActions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: green,\r\n  },\r\n});\r\n\r\nconst SignUp = ({ history }) => {\r\n  //? setting local state\r\n  const [userData, setUserData] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    password: '',\r\n    passwordConfirm: '',\r\n  });\r\n\r\n  //? defining some variables\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  //? getting user data from redux\r\n  const loginUser = useSelector((s) => s.loginUser);\r\n  const {\r\n    loading: signupLoading,\r\n    user: loggedInUser,\r\n    err: signupError,\r\n    success: signupSuccess,\r\n  } = loginUser;\r\n\r\n  //? some functions\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant='filled' {...props} />;\r\n  }\r\n  const handleSignupSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(signupUserAction(userData));\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUserData({\r\n      ...userData,\r\n      [name]: value,\r\n    });\r\n  };\r\n  //? some useEffect functions\r\n  useEffect(() => {\r\n    if (loggedInUser && loggedInUser.token) {\r\n      history.push('/home');\r\n    }\r\n    //! try applying this in the main App.jsx to login every time with userToken\r\n    //! else if (loggedInUser && loggedInUser.token) {\r\n    //! add here the code to log user in with his token\r\n    //! to check if the token is expired or not\r\n    //! add this to backend too , to login with token\r\n    //! dispatch(loginUserAction(loggedInUser.token));\r\n    //! }\r\n  }, [dispatch, history, loggedInUser]);\r\n  return (\r\n    <>\r\n      {signupSuccess ? (\r\n        <Snackbar\r\n          open={signupSuccess}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='success'>Signed up successfully</Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {signupLoading ? (\r\n        <Snackbar\r\n          open={signupLoading}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='info'>Signing up</Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {signupError ? (\r\n        <Snackbar\r\n          open={signupError && true}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='error'>{signupError}</Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      <div className={classes.root}>\r\n        <Container maxWidth='xs'>\r\n          <Typography\r\n            className={classes.lonInTopHeader}\r\n            style={{ textAlign: 'center' }}\r\n            variant='h2'\r\n          >\r\n            Signup\r\n            <div className={classes.loginLogo}>\r\n              <img src='images/login/loginLogo.png' alt='Login Logo' />\r\n            </div>\r\n          </Typography>\r\n          <form className={classes.loginFrom} onSubmit={handleSignupSubmit}>\r\n            <ThemeProvider theme={theme}>\r\n              <Grid container spacing={2}>\r\n                <Grid item sm={6} xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    margin='normal'\r\n                    variant='outlined'\r\n                    label='First Name'\r\n                    required\r\n                    name='firstName'\r\n                    type='text'\r\n                    id='firstName'\r\n                    disabled={signupLoading}\r\n                    autoComplete='first-name'\r\n                    onChange={handleInputChange}\r\n                    value={userData.firstName}\r\n                    className={classes.emailInput}\r\n                    InputProps={{\r\n                      className: classes.emailInput,\r\n                      classes: {\r\n                        notchedOutline: classes.InputBorder,\r\n                      },\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item sm={6} xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    margin='normal'\r\n                    variant='outlined'\r\n                    label='Last Name'\r\n                    required\r\n                    name='lastName'\r\n                    disabled={signupLoading}\r\n                    type='text'\r\n                    id='lastName'\r\n                    autoComplete='last-name'\r\n                    onChange={handleInputChange}\r\n                    value={userData.lastName}\r\n                    className={classes.emailInput}\r\n                    InputProps={{\r\n                      className: classes.emailInput,\r\n                      classes: {\r\n                        notchedOutline: classes.InputBorder,\r\n                      },\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <TextField\r\n                fullWidth\r\n                margin='normal'\r\n                variant='outlined'\r\n                label='Email'\r\n                required\r\n                disabled={signupLoading}\r\n                name='email'\r\n                type='email'\r\n                id='email'\r\n                autoComplete='current-email'\r\n                onChange={handleInputChange}\r\n                value={userData.email}\r\n                className={classes.emailInput}\r\n                InputProps={{\r\n                  className: classes.emailInput,\r\n                  classes: {\r\n                    notchedOutline: classes.InputBorder,\r\n                  },\r\n                }}\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                margin='normal'\r\n                variant='outlined'\r\n                label='Password'\r\n                required\r\n                name='password'\r\n                disabled={signupLoading}\r\n                type='password'\r\n                id='password'\r\n                autoComplete='current-password'\r\n                onChange={handleInputChange}\r\n                value={userData.password}\r\n                inputProps={{\r\n                  minLength: 8,\r\n                }}\r\n                className={classes.passwordInput}\r\n                InputProps={{\r\n                  className: classes.passwordInput,\r\n                  classes: {\r\n                    notchedOutline: classes.InputBorder,\r\n                  },\r\n                }}\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                margin='normal'\r\n                variant='outlined'\r\n                label='Password Confirmation'\r\n                required\r\n                name='passwordConfirm'\r\n                disabled={signupLoading}\r\n                type='password'\r\n                id='passwordConfirm'\r\n                autoComplete='current-passwordConfirm'\r\n                onChange={handleInputChange}\r\n                value={userData.passwordConfirm}\r\n                inputProps={{\r\n                  minLength: 8,\r\n                }}\r\n                className={classes.passwordInput}\r\n                InputProps={{\r\n                  className: classes.passwordInput,\r\n                  classes: {\r\n                    notchedOutline: classes.InputBorder,\r\n                  },\r\n                }}\r\n              />\r\n            </ThemeProvider>\r\n\r\n            <Button\r\n              type='submit'\r\n              variant='contained'\r\n              color='primary'\r\n              className={classes.loginBtn}\r\n              fullWidth\r\n              disabled={signupLoading}\r\n              endIcon={\r\n                signupLoading && (\r\n                  <CircularProgress\r\n                    style={{ color: 'black', width: '20px', height: '20px' }}\r\n                  />\r\n                )\r\n              }\r\n            >\r\n              Signup\r\n            </Button>\r\n          </form>\r\n          <Typography className={classes.notSignedUp}>\r\n            Have an account ?{' '}\r\n            <Link className={classes.signUpLink} to='/login'>\r\n              {' '}\r\n              Login\r\n            </Link>\r\n          </Typography>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '90vw',\r\n    height: '90vh',\r\n    background: 'white',\r\n    position: 'relative',\r\n    zIndex: '2',\r\n    boxShadow: ' -2px -2px 10px grey',\r\n    display: 'flex',\r\n    textAlign: 'center',\r\n    paddingTop: '30px',\r\n  },\r\n  emailInput: {\r\n    fontWeight: 'bold',\r\n    '& >.MuiInputLabel-outlined': {\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  passwordInput: {\r\n    '& >.MuiInputLabel-outlined': {\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  InputBorder: {\r\n    borderColor: '#019688',\r\n  },\r\n  loginBtn: {\r\n    backgroundColor: '#019688',\r\n    fontWeight: 'bold',\r\n    marginTop: '25px',\r\n    '&:hover': {\r\n      backgroundColor: '#008276',\r\n    },\r\n  },\r\n  notSignedUp: {\r\n    paddingTop: '20px',\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n  },\r\n  signUpLink: {\r\n    textDecoration: 'none',\r\n    color: '#019688',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n  lonInTopHeader: {\r\n    display: 'inline-flex',\r\n    margin: 'auto',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    fontSize: '30px',\r\n  },\r\n  loginLogo: {\r\n    textAlign: 'center',\r\n    display: 'inline-block',\r\n    width: '75px',\r\n    height: '75px',\r\n    margin: 'auto',\r\n    '&>img': {\r\n      width: '100%',\r\n      height: '100%',\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React, { useEffect, useState } from 'react';\r\nimport useStyles from './styles';\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Container,\r\n  createMuiTheme,\r\n  ThemeProvider,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { userForgotPasswordAction } from '../../actions/userActions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: green,\r\n  },\r\n});\r\n\r\nconst ForgotPassword = ({ history }) => {\r\n  //? setting local state\r\n  const [email, setEmail] = useState('');\r\n\r\n  //? defining some variables\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  //? getting user data from redux\r\n  const { user } = useSelector((s) => s.loginUser);\r\n  const userForgotPassword = useSelector((s) => s.userForgotPassword);\r\n  const {\r\n    loading: loadingForgotPassword,\r\n    success: successForgotPassword,\r\n    err: errForgotPassword,\r\n  } = userForgotPassword;\r\n\r\n  //? some functions\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant='filled' {...props} />;\r\n  }\r\n\r\n  const handleForgotPasswordSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(userForgotPasswordAction(email));\r\n  };\r\n\r\n  //? some useEffect functions\r\n  useEffect(() => {\r\n    if (user && user.token) {\r\n      history.push('/home');\r\n    }\r\n    //! try applying this in the main App.jsx to login every time with userToken\r\n    //! else if (loggedInUser && loggedInUser.token) {\r\n    //! add here the code to log user in with his token\r\n    //! to check if the token is expired or not\r\n    //! add this to backend too , to login with token\r\n    //! dispatch(loginUserAction(loggedInUser.token));\r\n    //! }\r\n  }, [dispatch, history, user]);\r\n  return (\r\n    <>\r\n      {/* //? edit from here */}\r\n      {successForgotPassword ? (\r\n        <Snackbar\r\n          open={successForgotPassword}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='success'>\r\n            Please check you email for resetting password link <br />\r\n            You can close this window now\r\n          </Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {loadingForgotPassword ? (\r\n        <Snackbar\r\n          open={loadingForgotPassword}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='info'>Sending your request</Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {errForgotPassword ? (\r\n        <Snackbar\r\n          open={errForgotPassword && true}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='error'>{errForgotPassword}</Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {/* //? to here */}\r\n      <div className={classes.root}>\r\n        <Container maxWidth='xs'>\r\n          <Typography\r\n            className={classes.lonInTopHeader}\r\n            style={{ textAlign: 'center' }}\r\n            variant='h2'\r\n          >\r\n            Enter your email\r\n          </Typography>\r\n          <form\r\n            className={classes.loginFrom}\r\n            onSubmit={handleForgotPasswordSubmit}\r\n          >\r\n            <ThemeProvider theme={theme}>\r\n              <TextField\r\n                fullWidth\r\n                margin='normal'\r\n                variant='outlined'\r\n                label='Email'\r\n                required\r\n                name='email'\r\n                type='email'\r\n                id='email'\r\n                disabled={loadingForgotPassword}\r\n                autoComplete='current-email'\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                value={email}\r\n                className={classes.emailInput}\r\n                InputProps={{\r\n                  className: classes.emailInput,\r\n                  classes: {\r\n                    notchedOutline: classes.InputBorder,\r\n                  },\r\n                }}\r\n              />\r\n            </ThemeProvider>\r\n\r\n            <Button\r\n              type='submit'\r\n              variant='contained'\r\n              color='primary'\r\n              className={classes.loginBtn}\r\n              fullWidth\r\n              disabled={loadingForgotPassword}\r\n              endIcon={\r\n                loadingForgotPassword && (\r\n                  <CircularProgress\r\n                    style={{ color: 'black', width: '20px', height: '20px' }}\r\n                  />\r\n                )\r\n              }\r\n            >\r\n              Send\r\n            </Button>\r\n          </form>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '90vw',\r\n    height: '90vh',\r\n    background: 'white',\r\n    position: 'relative',\r\n    zIndex: '2',\r\n    boxShadow: ' -2px -2px 10px grey',\r\n    display: 'flex',\r\n    textAlign: 'center',\r\n    paddingTop: '30px',\r\n  },\r\n  emailInput: {\r\n    fontWeight: 'bold',\r\n    '& >.MuiInputLabel-outlined': {\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  passwordInput: {\r\n    '& >.MuiInputLabel-outlined': {\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  InputBorder: {\r\n    borderColor: '#019688',\r\n  },\r\n  loginBtn: {\r\n    backgroundColor: '#019688',\r\n    fontWeight: 'bold',\r\n    marginTop: '25px',\r\n    '&:hover': {\r\n      backgroundColor: '#008276',\r\n    },\r\n  },\r\n  notSignedUp: {\r\n    paddingTop: '20px',\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n  },\r\n  signUpLink: {\r\n    textDecoration: 'none',\r\n    color: '#019688',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n  lonInTopHeader: {\r\n    display: 'inline-flex',\r\n    margin: 'auto',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    fontSize: '30px',\r\n  },\r\n  loginLogo: {\r\n    textAlign: 'center',\r\n    display: 'inline-block',\r\n    width: '75px',\r\n    height: '75px',\r\n    margin: 'auto',\r\n    '&>img': {\r\n      width: '100%',\r\n      height: '100%',\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React, { useEffect, useState } from 'react';\r\nimport useStyles from './styles';\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Container,\r\n  createMuiTheme,\r\n  ThemeProvider,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { Link } from 'react-router-dom';\r\nimport { userResetPasswordAction } from '../../actions/userActions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: green,\r\n  },\r\n});\r\n\r\nconst ResetPassword = ({ history, match }) => {\r\n  const token = match.params.token;\r\n  console.log({ token });\r\n  //? setting local state\r\n  const [userData, setUserData] = useState({\r\n    email: '',\r\n    password: '',\r\n    passwordConfirm: '',\r\n  });\r\n\r\n  //? defining some variables\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  //? getting user data from redux\r\n  const { user } = useSelector((s) => s.loginUser);\r\n  const userResetPassword = useSelector((s) => s.userResetPassword);\r\n  const {\r\n    loading: loadingResetPassword,\r\n    success: successResetPassword,\r\n    err: errResetPassword,\r\n  } = userResetPassword;\r\n\r\n  //? some functions\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant='filled' {...props} />;\r\n  }\r\n  const handleResetPasswordSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(userResetPasswordAction(token, userData));\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUserData({\r\n      ...userData,\r\n      [name]: value,\r\n    });\r\n  };\r\n  //? some useEffect functions\r\n  useEffect(() => {\r\n    if (user && user.token) {\r\n      history.push('/home');\r\n    }\r\n    //! try applying this in the main App.jsx to login every time with userToken\r\n    //! else if (loggedInUser && loggedInUser.token) {\r\n    //! add here the code to log user in with his token\r\n    //! to check if the token is expired or not\r\n    //! add this to backend too , to login with token\r\n    //! dispatch(loginUserAction(loggedInUser.token));\r\n    //! }\r\n  }, [dispatch, history, user]);\r\n\r\n  useEffect(() => {\r\n    if (successResetPassword) {\r\n      setTimeout(() => {\r\n        history.push('/login');\r\n      }, 2000);\r\n    }\r\n  }, [history, successResetPassword]);\r\n  return (\r\n    <>\r\n      {successResetPassword ? (\r\n        <Snackbar\r\n          open={successResetPassword}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='success'>Password updated successfully</Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {loadingResetPassword ? (\r\n        <Snackbar\r\n          open={loadingResetPassword}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='info'>Sending Your Request</Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {errResetPassword ? (\r\n        <Snackbar\r\n          open={errResetPassword && true}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='error'>{errResetPassword}</Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      <div className={classes.root}>\r\n        <Container maxWidth='xs'>\r\n          <Typography\r\n            className={classes.lonInTopHeader}\r\n            style={{ textAlign: 'center' }}\r\n            variant='h2'\r\n          >\r\n            Reset your password password\r\n          </Typography>\r\n          <form\r\n            className={classes.loginFrom}\r\n            onSubmit={handleResetPasswordSubmit}\r\n          >\r\n            <ThemeProvider theme={theme}>\r\n              <TextField\r\n                fullWidth\r\n                margin='normal'\r\n                variant='outlined'\r\n                label='Email'\r\n                required\r\n                name='email'\r\n                type='email'\r\n                id='email'\r\n                disabled={loadingResetPassword}\r\n                autoComplete='current-email'\r\n                onChange={handleInputChange}\r\n                value={userData.email}\r\n                className={classes.emailInput}\r\n                InputProps={{\r\n                  className: classes.emailInput,\r\n                  classes: {\r\n                    notchedOutline: classes.InputBorder,\r\n                  },\r\n                }}\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                margin='normal'\r\n                variant='outlined'\r\n                label='New Password'\r\n                required\r\n                name='password'\r\n                type='password'\r\n                id='password'\r\n                disabled={loadingResetPassword}\r\n                autoComplete='current-password'\r\n                onChange={handleInputChange}\r\n                value={userData.password}\r\n                inputProps={{\r\n                  minLength: 8,\r\n                }}\r\n                className={classes.passwordInput}\r\n                InputProps={{\r\n                  className: classes.passwordInput,\r\n                  classes: {\r\n                    notchedOutline: classes.InputBorder,\r\n                  },\r\n                }}\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                margin='normal'\r\n                variant='outlined'\r\n                label='New Password Again'\r\n                required\r\n                name='passwordConfirm'\r\n                type='password'\r\n                id='passwordConfirm'\r\n                disabled={loadingResetPassword}\r\n                autoComplete='current-password'\r\n                onChange={handleInputChange}\r\n                value={userData.passwordConfirm}\r\n                inputProps={{\r\n                  minLength: 8,\r\n                }}\r\n                className={classes.passwordInput}\r\n                InputProps={{\r\n                  className: classes.passwordInput,\r\n                  classes: {\r\n                    notchedOutline: classes.InputBorder,\r\n                  },\r\n                }}\r\n              />\r\n            </ThemeProvider>\r\n\r\n            <Button\r\n              type='submit'\r\n              variant='contained'\r\n              color='primary'\r\n              className={classes.loginBtn}\r\n              fullWidth\r\n              disabled={loadingResetPassword}\r\n              endIcon={\r\n                loadingResetPassword && (\r\n                  <CircularProgress\r\n                    style={{ color: 'black', width: '20px', height: '20px' }}\r\n                  />\r\n                )\r\n              }\r\n            >\r\n              Send\r\n            </Button>\r\n          </form>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '90vw',\r\n    height: '90vh',\r\n    minWidth: '650px',\r\n    background: 'white',\r\n    position: 'relative',\r\n    zIndex: '2',\r\n    boxShadow: ' -2px -2px 10px grey',\r\n    display: 'flex',\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    overflow: 'hidden',\r\n    borderRight: '2px solid #E5E5E6',\r\n    flex: '0.35',\r\n    //? you can control width to 0 by setting flex=0 && width=0\r\n    //? for full screen remove width=0 && set flex=1\r\n    //? on large screens remove width=0 && set flex=0.35\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: '10px 0',\r\n    width: '100%',\r\n    height: '59px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    position: 'relative',\r\n    justifyContent: 'space-between',\r\n    backgroundColor: '#EDEDED',\r\n    zIndex: '10',\r\n  },\r\n  text: {\r\n    fontWeight: 'bold',\r\n    color: '#009688',\r\n  },\r\n  addChat: {\r\n    border: '1px solid #009688',\r\n    color: '#009688',\r\n  },\r\n  sidebarIcons: {\r\n    '& *': {\r\n      color: '#696969',\r\n    },\r\n  },\r\n  addChatDialogBtn: {\r\n    color: 'white',\r\n    backgroundColor: '#009688',\r\n    fontWeight: 'bold',\r\n    '&:hover': {\r\n      backgroundColor: 'rgba(0, 148, 133, 0.66)',\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import * as c from '../constants/roomConstants';\r\nimport * as urls from '../constants/urls';\r\nimport axios from 'axios';\r\n\r\nexport const getMyRoomsAction = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: c.GET_MY_ROOMS_REQUEST,\r\n    });\r\n    const token = `Bearer ${getState().loginUser.user.token}`;\r\n    const config = {\r\n      headers: {\r\n        authorization: token,\r\n      },\r\n    };\r\n\r\n    const {\r\n      data: { data },\r\n    } = await axios.get(`${urls.roomsUrl}/getMyRooms`, config);\r\n    dispatch({\r\n      type: c.GET_MY_ROOMS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.GET_MY_ROOMS_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createRoomAction = (otherUserEmail) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: c.CREATE_ROOM_REQUEST,\r\n    });\r\n    const token = `Bearer ${getState().loginUser.user.token}`;\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: token,\r\n      },\r\n    };\r\n\r\n    const {\r\n      data: { data },\r\n    } = await axios.post(\r\n      `${urls.roomsUrl}/createNewRoom`,\r\n      { otherUserEmail },\r\n      config\r\n    );\r\n    dispatch({\r\n      type: c.CREATE_ROOM_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.CREATE_ROOM_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const setCurrentOpenRoomAction = (currentRoomId) => (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  dispatch({\r\n    type: c.SET_CURRENT_OPEN_ROOM,\r\n    payload: currentRoomId,\r\n  });\r\n\r\n  localStorage.setItem('currentRoomId', currentRoomId);\r\n};\r\n","export const GET_MY_ROOMS_REQUEST = 'GET_MY_ROOMS_REQUEST';\r\nexport const GET_MY_ROOMS_SUCCESS = 'GET_MY_ROOMS_SUCCESS';\r\nexport const GET_MY_ROOMS_FAIL = 'GET_MY_ROOMS_FAIL';\r\n\r\nexport const CREATE_ROOM_REQUEST = 'CREATE_ROOM_REQUEST';\r\nexport const CREATE_ROOM_SUCCESS = 'CREATE_ROOM_SUCCESS';\r\nexport const CREATE_ROOM_FAIL = 'CREATE_ROOM_FAIL';\r\nexport const CREATE_ROOM_RESET = 'CREATE_ROOM_RESET';\r\n\r\nexport const SET_CURRENT_OPEN_ROOM = 'SET_CURRENT_OPEN_ROOM';\r\n\r\nexport const UPDATE_LAST_MESSAGE = 'UPDATE_LAST_MESSAGE';\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: '0 auto',\r\n    fontWeight: 'bold',\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport useStyle from './styles';\r\n\r\nconst Message = ({ severity, message }) => {\r\n  const classes = useStyle();\r\n  return (\r\n    <Alert className={classes.root} severity={severity || 'info'}>\r\n      {message}\r\n    </Alert>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  Avatar,\r\n  IconButton,\r\n  Badge,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  TextField,\r\n  DialogActions,\r\n  ThemeProvider,\r\n  Button,\r\n  CircularProgress,\r\n  createMuiTheme,\r\n} from '@material-ui/core';\r\nimport { Add } from '@material-ui/icons';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport { green } from '@material-ui/core/colors';\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport useStyle from './styles';\r\nimport {\r\n  createRoomAction,\r\n  getMyRoomsAction,\r\n} from '../../../actions/roomActions';\r\nimport Message from '../../global/Message/Message';\r\nimport * as c from '../../../constants/roomConstants';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: green,\r\n  },\r\n});\r\n\r\nconst Header = () => {\r\n  const classes = useStyle();\r\n  const dispatch = useDispatch();\r\n  const [open, setOpen] = useState(false);\r\n  const [email, setEmail] = useState('');\r\n\r\n  const createRoom = useSelector((s) => s.createRoom);\r\n  const {\r\n    loading: createRoomLoading,\r\n    success: createRoomSuccess,\r\n    err: createRoomErr,\r\n    room: createdRoom,\r\n  } = createRoom;\r\n\r\n  const loginUser = useSelector((s) => s.loginUser);\r\n  const { user } = loginUser;\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpen(false);\r\n    dispatch({\r\n      type: c.CREATE_ROOM_RESET,\r\n    });\r\n  };\r\n\r\n  const handleAddNewChat = (e) => {\r\n    e.preventDefault();\r\n    dispatch(createRoomAction(`${email}`.trim()));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (createRoomSuccess) {\r\n      setEmail('');\r\n      dispatch(getMyRoomsAction());\r\n    }\r\n  }, [createRoomSuccess, dispatch]);\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton>\r\n        <Avatar src={`${user.photo}`} />\r\n      </IconButton>\r\n      <div className={classes.sidebarIcons}>\r\n        {/* <IconButton>\r\n          <Badge\r\n            color='secondary'\r\n            variant='dot'\r\n            className={classes.customBadge}\r\n          >\r\n            <DonutLargeIcon />\r\n          </Badge>\r\n        </IconButton> */}\r\n        <Dialog\r\n          open={open}\r\n          onClose={handleCloseDialog}\r\n          //! on close handle dispatch create room reset\r\n          aria-labelledby='form-dialog-title'\r\n        >\r\n          {createRoomLoading ? (\r\n            <Message message='Creating new chat ...' />\r\n          ) : createRoomErr ? (\r\n            <Message severity='error' message={createRoomErr} />\r\n          ) : createRoomSuccess ? (\r\n            <Message severity='success' message='Room created successfully' />\r\n          ) : (\r\n            <DialogTitle id='form-dialog-title'>\r\n              Enter Other Person Email{' '}\r\n            </DialogTitle>\r\n          )}\r\n          <form onSubmit={handleAddNewChat}>\r\n            <DialogContent>\r\n              <ThemeProvider theme={theme}>\r\n                <TextField\r\n                  className={classes.text}\r\n                  autoFocus\r\n                  margin='dense'\r\n                  id='email'\r\n                  label='Email Address'\r\n                  type='email'\r\n                  fullWidth\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  value={email}\r\n                  disabled={createRoomLoading}\r\n                />\r\n              </ThemeProvider>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button\r\n                className={classes.addChatDialogBtn}\r\n                onClick={handleCloseDialog}\r\n                variant='contained'\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                className={classes.addChatDialogBtn}\r\n                disabled={email.length < 1 || createRoomLoading}\r\n                variant='contained'\r\n                type='submit'\r\n                endIcon={\r\n                  createRoomLoading && (\r\n                    <CircularProgress\r\n                      style={{ color: 'black', width: '20px', height: '20px' }}\r\n                    />\r\n                  )\r\n                }\r\n              >\r\n                Add Chat\r\n              </Button>\r\n            </DialogActions>\r\n          </form>\r\n        </Dialog>\r\n        <IconButton onClick={() => setOpen(true)} className={classes.addChat}>\r\n          <Add />\r\n        </IconButton>\r\n        <IconButton>\r\n          <ChatIcon />\r\n        </IconButton>\r\n        <IconButton>\r\n          <MoreVertIcon />\r\n        </IconButton>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '49px',\r\n    width: '100%',\r\n    backgroundColor: '#F6F6F6',\r\n    padding: '10px',\r\n    boxShadow: '0 1px 2px #ccc',\r\n    borderBottom: '1px solid #bbb',\r\n  },\r\n  main: {\r\n    background: 'white',\r\n    width: '100%',\r\n    height: '100%',\r\n    borderRadius: '20px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n    padding: '2px 10px',\r\n  },\r\n  searchBox: {\r\n    width: '100%',\r\n    height: '100%',\r\n    outline: '0',\r\n    border: 'none',\r\n  },\r\n  searchIcon: {\r\n    color: '#919191',\r\n    marginRight: '8px',\r\n    fontSize: '20px',\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport useStyle from './styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst SearchBox = () => {\r\n  const classes = useStyle();\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.main}>\r\n        <SearchIcon className={classes.searchIcon} />\r\n        <input\r\n          placeholder='Search chats...'\r\n          className={classes.searchBox}\r\n          type='text'\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flex: 1,\r\n    overflow: 'auto',\r\n    '&::-webkit-scrollbar': {\r\n      width: '5px',\r\n    },\r\n\r\n    '&::-webkit-scrollbar-thumb': {\r\n      background: '#CCCCCC',\r\n      borderRadius: '10px',\r\n    },\r\n\r\n    '&::-webkit-scrollbar-thumb:hover': {\r\n      background: '#aaa',\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  btnBase: {\r\n    padding: 0,\r\n    margin: 0,\r\n    width: '100%',\r\n    height: '72px',\r\n  },\r\n  root: {\r\n    width: '100%',\r\n    height: '72px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    cursor: 'pointer',\r\n    borderBottom: '1px solid #F5F5F5',\r\n    '&:hover': {\r\n      background: '#F5F5F5',\r\n    },\r\n    overflow: 'hidden',\r\n  },\r\n\r\n  avatarContainer: {\r\n    padding: '0 10px',\r\n  },\r\n  info: {\r\n    flex: 1,\r\n    padding: '15px 10px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  infoTop: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    marginBottom: '7px',\r\n    width: '100%',\r\n  },\r\n  name: {\r\n    flex: '0.60',\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    fontSize: '100%',\r\n    fontWeight: 'bold',\r\n    fontFamily: 'Noto Sans JP, sans-serif',\r\n    textAlign: 'left',\r\n    height: '100%',\r\n  },\r\n\r\n  date: {\r\n    flex: '0.40',\r\n    fontSize: '12px',\r\n    color: '#878787',\r\n    fontWeight: 'bold',\r\n    height: '100%',\r\n  },\r\n  lastMsg: {\r\n    width: '150px',\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    fontFamily: 'Noto Sans JP, sans-serif',\r\n    color: '#626262',\r\n    fontSize: '90%',\r\n    textAlign: 'left',\r\n  },\r\n  newChat: {\r\n    color: '#009688',\r\n    fontWeight: 'bold',\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport useStyle from './styles';\r\nimport { Avatar, ButtonBase } from '@material-ui/core';\r\nimport { setCurrentOpenRoomAction } from '../../../../actions/roomActions';\r\nimport moment from 'moment';\r\n\r\nconst ChatGo = ({ room }) => {\r\n  const classes = useStyle();\r\n  const dispatch = useDispatch();\r\n  const handleSetCurrentRoom = () => {\r\n    dispatch(setCurrentOpenRoomAction(room._id));\r\n  };\r\n  return (\r\n    <ButtonBase onClick={handleSetCurrentRoom} className={classes.btnBase}>\r\n      <div className={classes.root}>\r\n        <div className={classes.avatarContainer}>\r\n          <Avatar src={room.userToShowOnRoom.photo} />\r\n        </div>\r\n        <div className={classes.info}>\r\n          <div className={classes.infoTop}>\r\n            <div\r\n              className={classes.name}\r\n            >{`${room.userToShowOnRoom.firstName} ${room.userToShowOnRoom.lastName}`}</div>\r\n            <div className={classes.date}>\r\n              {moment(room.lastMessage.createdAt).format('hh:mm A')}\r\n            </div>\r\n          </div>\r\n\r\n          <div className={classes.lastMsg}>\r\n            {room.new ? (\r\n              <span className={classes.newChat}>New</span>\r\n            ) : (\r\n              <span>{room.lastMessage.messageTXT}</span>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ButtonBase>\r\n  );\r\n};\r\n\r\nexport default ChatGo;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useStyle from './styles';\r\nimport ChatGo from './ChatGo/ChatGo';\r\nimport { getMyRoomsAction } from '../../../actions/roomActions';\r\nimport Message from '../../global/Message/Message';\r\n\r\nconst ChatsContainer = () => {\r\n  const classes = useStyle();\r\n  const dispatch = useDispatch();\r\n  const myRooms = useSelector((s) => s.myRooms);\r\n  const {\r\n    loading: loadingMyRooms = true,\r\n    rooms,\r\n    err: errGettingMyRooms,\r\n  } = myRooms;\r\n\r\n  useEffect(() => {\r\n    dispatch(getMyRoomsAction());\r\n  }, [dispatch]);\r\n  return (\r\n    <>\r\n      <div className={classes.root}>\r\n        {loadingMyRooms ? (\r\n          <Message message='Loading Chats ...' />\r\n        ) : errGettingMyRooms ? (\r\n          <Message severity='error' message={errGettingMyRooms} />\r\n        ) : rooms.length < 1 ? (\r\n          <Message message=\"You don't have chats yet 😊\" />\r\n        ) : (\r\n          rooms.map((room) => <ChatGo key={room._id} room={room} />)\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatsContainer;\r\n","import React from 'react';\r\nimport useStyle from './styles';\r\nimport Header from './Header/Header';\r\nimport SearchBox from './SearchBox/SearchBox';\r\nimport ChatsContainer from './ChatsContainer/ChatsContainer';\r\nimport { Search } from '@material-ui/icons';\r\n\r\nconst Sidebar = () => {\r\n  const classes = useStyle();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Header />\r\n      <SearchBox />\r\n      <ChatsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    background: '#F8F9FA',\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    flex: '0.65',\r\n    //? you can control width to 0 by setting flex=0 && width=0\r\n    //? for full screen remove width=0 && set flex=1\r\n    //? on large screens remove width=0 && set flex=0.65\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    height: '100%',\r\n    backgroundColor: '#F8F9FA',\r\n    borderBottom: '10px solid #4ADF83',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n  },\r\n  mainLogo: {\r\n    width: '250px',\r\n    height: '250px',\r\n  },\r\n  mainText: {\r\n    marginTop: '28px',\r\n    fontSize: '32px',\r\n    color: '#525252',\r\n    fontWeight: '300',\r\n    fontFamily: 'Noto Sans JP, sans-serif',\r\n    textAlign: 'center',\r\n    padding: '0 20px',\r\n  },\r\n  subTitle: {\r\n    fontSize: '14px',\r\n    color: '#888989',\r\n    fontFamily: 'Noto Sans JP, sans-serif',\r\n    textAlign: 'center',\r\n    lineHeight: '20px',\r\n    marginTop: '25px',\r\n    padding: '0 50px',\r\n  },\r\n  contactMe: {\r\n    marginTop: '20px',\r\n    fontSize: '20px',\r\n    color: '#525252',\r\n    fontWeight: '300',\r\n    fontFamily: 'Noto Sans JP, sans-serif',\r\n    textAlign: 'center',\r\n    padding: '0 20px',\r\n    '&>a': {\r\n      color: '#009688',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport useStyle from './styles';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NoChat = () => {\r\n  const classes = useStyle();\r\n  return (\r\n    <div className={classes.root}>\r\n      <img\r\n        className={classes.mainLogo}\r\n        src='https://web.whatsapp.com/img/intro-connection-light_c98cc75f2aa905314d74375a975d2cf2.jpg'\r\n        alt='main logo'\r\n      />\r\n      <h1 className={classes.mainText}>Welcome to WhatsApp Clone</h1>\r\n      <div className={classes.subTitle}>\r\n        This is a testing WhatsApp version, not for profiting purposes. <br />\r\n      </div>\r\n      <h1 className={classes.contactMe}>\r\n        Fully programmed by Amr Mohammed Hassan{' '}\r\n        <Link to='/contactAmr'>Contact Me</Link>\r\n      </h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoChat;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    height: '100%',\r\n    flexDirection: 'column',\r\n    backgroundColor: '#E5DDD5',\r\n    position: 'relative',\r\n  },\r\n  bgObjects: {\r\n    backgroundImage:\r\n      'url(\"https://web.whatsapp.com/img/bg-chat-tile-light_04fcacde539c58cca6745483d4858c52.png\")',\r\n    backgroundSize: 'contain',\r\n    backgroundColor: '#E5DDD5',\r\n    backgroundPosition: 'fixed',\r\n    position: 'absolute',\r\n    zIndex: '0',\r\n    top: '0',\r\n    left: '0',\r\n    width: '100%',\r\n    height: '100%',\r\n    opacity: '0.1',\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: '10px 0',\r\n    width: '100%',\r\n    height: '59px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    position: 'relative',\r\n    justifyContent: 'space-between',\r\n    backgroundColor: '#EDEDED',\r\n    boxShadow: '0 1px 2px #ccc',\r\n    zIndex: '10',\r\n  },\r\n\r\n  sidebarIcons: {},\r\n  userInfoBtnBase: {},\r\n  userInfo: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '10px',\r\n  },\r\n  avatarContainer: {\r\n    marginRight: '10px',\r\n  },\r\n  info: {\r\n    textAlign: 'lef',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'center',\r\n  },\r\n  name: {\r\n    width: '100px',\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    fontSize: '100%',\r\n    fontWeight: 'bold',\r\n    fontFamily: 'Noto Sans JP, sans-serif',\r\n    textAlign: 'left',\r\n  },\r\n  status: {\r\n    width: '150px',\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    fontFamily: 'Noto Sans JP, sans-serif',\r\n    color: '#626262',\r\n    fontSize: '90%',\r\n    textAlign: 'left',\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Avatar, IconButton, Badge, ButtonBase } from '@material-ui/core';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport Search from '@material-ui/icons/Search';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport useStyle from './styles';\r\n\r\nconst Header = () => {\r\n  const classes = useStyle();\r\n\r\n  const [otherPerson, setOtherPerson] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    photo: '',\r\n  });\r\n\r\n  const { rooms } = useSelector((s) => s.myRooms);\r\n  const currentOpenRoom = useSelector((s) => s.currentOpenRoom);\r\n\r\n  useEffect(() => {\r\n    if (rooms) {\r\n      const roomData = rooms.find((room) => room._id === currentOpenRoom);\r\n      setOtherPerson(roomData.userToShowOnRoom);\r\n    }\r\n  }, [currentOpenRoom, rooms]);\r\n  return (\r\n    <div className={classes.root}>\r\n      <ButtonBase className={classes.userInfoBtnBase}>\r\n        <div className={classes.userInfo}>\r\n          <div className={classes.avatarContainer}>\r\n            <Avatar src={otherPerson.photo} />\r\n          </div>\r\n          <div className={classes.info}>\r\n            <div\r\n              className={classes.name}\r\n            >{`${otherPerson.firstName} ${otherPerson.lastName}`}</div>\r\n            <div className={classes.status}>Online</div>\r\n          </div>\r\n        </div>\r\n      </ButtonBase>\r\n\r\n      <div className={classes.sidebarIcons}>\r\n        <IconButton>\r\n          <Search />\r\n        </IconButton>\r\n\r\n        <IconButton>\r\n          <MoreVertIcon />\r\n        </IconButton>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flex: 1,\r\n    overflow: 'auto',\r\n    '&::-webkit-scrollbar': {\r\n      width: '5px',\r\n    },\r\n\r\n    '&::-webkit-scrollbar-thumb': {\r\n      background: '#CCCCCC',\r\n      borderRadius: '10px',\r\n    },\r\n\r\n    '&::-webkit-scrollbar-thumb:hover': {\r\n      background: '#aaa',\r\n    },\r\n    position: 'relative',\r\n    zIndex: 10,\r\n  },\r\n\r\n  earlierMessagesBtn: {\r\n    position: 'absolute',\r\n    right: '10px',\r\n    bottom: '70px',\r\n    zIndex: '1000',\r\n    backgroundColor: 'white',\r\n    borderRadius: '50%',\r\n    boxShadow: '0 1px 1px 0 rgba(0,0,0,.06),0 2px 5px 0 rgba(0,0,0,.2);',\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    padding: '10px 8%',\r\n    position: 'relative',\r\n    '&>div': {\r\n      maxWidth: '90%',\r\n    },\r\n  },\r\n  //? other person message\r\n  otherMessage: {\r\n    background: 'white',\r\n    padding: '6px 7px 8px 9px',\r\n    display: 'inline-block',\r\n    borderRadius: '0 10px 10px 10px ',\r\n    position: 'relative',\r\n    boxShadow: '0 1px .5px rgba(0, 0, 0,.13)',\r\n  },\r\n  otherMessageText: {\r\n    padding: '15px 0',\r\n  },\r\n  otherMessageDate: {\r\n    textAlign: 'right',\r\n    fontSize: '11px',\r\n    color: '#8C8C8C',\r\n  },\r\n  //? my message\r\n  myMessage: {\r\n    background: '#DCF8C6',\r\n    padding: '6px 7px 8px 9px',\r\n    display: 'inline-block',\r\n    borderRadius: '10px 0 10px 10px ',\r\n    position: 'relative',\r\n    boxShadow: '0 1px .5px rgba(0, 0, 0,.13)',\r\n  },\r\n  myMessageText: {\r\n    padding: '15px 0',\r\n  },\r\n  myMessageDate: {\r\n    textAlign: 'right',\r\n    fontSize: '11px',\r\n    color: '#8C8C8C',\r\n  },\r\n  msgStatus: {\r\n    paddingLeft: '5px',\r\n    '& > img': {\r\n      width: '15px',\r\n      height: 'auto',\r\n    },\r\n  },\r\n  //? Admin Message\r\n  adminMessage: {\r\n    display: 'inline-block',\r\n    backgroundColor: '#E3F6FE',\r\n    boxShadow: '0 1px .5px rgba(0, 0,0,.13)',\r\n    padding: '10px 12px',\r\n    borderRadius: '10px',\r\n    textTransform: 'uppercase',\r\n    color: '#1D1E1F',\r\n    fontSize: '12.5px',\r\n    fontFamily: \"'Roboto Condensed', sans-serif \",\r\n    fontWeight: 'bold',\r\n    userSelect: 'none',\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React, { useState, useEffect } from 'react';\r\nimport useStyle from './styles';\r\nimport moment from 'moment';\r\n\r\nconst Message = ({ message: msg, sender }) => {\r\n  const classes = useStyle();\r\n  const [messageDate, setMessageDate] = useState('');\r\n  useEffect(() => {\r\n    setMessageDate(msg.createdAt);\r\n  }, [msg.createdAt]);\r\n\r\n  return (\r\n    <div\r\n      className={classes.root}\r\n      style={\r\n        sender === 'other'\r\n          ? { textAlign: 'left' }\r\n          : sender === 'admin'\r\n          ? { textAlign: 'center' }\r\n          : { textAlign: 'right' }\r\n      }\r\n    >\r\n      {/* other person message */}\r\n      {sender === 'other' && (\r\n        <div className={classes.otherMessage + ' otherMessage'}>\r\n          <div className={classes.otherMessageText}>{msg.messageTXT}</div>\r\n          <div className={classes.otherMessageDate}>\r\n            {moment(messageDate).format('hh:mm A')}\r\n          </div>\r\n        </div>\r\n      )}\r\n      {/* my message */}\r\n      {sender === 'me' && (\r\n        <div className={classes.myMessage + ' myMessage'}>\r\n          <div className={classes.myMessageText}>{msg.messageTXT}</div>\r\n          <div className={classes.myMessageDate}>\r\n            {moment(messageDate).format('hh:mm A')}\r\n            <span className={classes.msgStatus}>\r\n              <img\r\n                src={\r\n                  msg.status === 'sent'\r\n                    ? 'images/message_status/sent.png'\r\n                    : msg.status === 'delivered'\r\n                    ? 'images/message_status/delivered.png'\r\n                    : 'images/message_status/read.png'\r\n                }\r\n                alt='read'\r\n              />\r\n            </span>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {/* admin messages */}\r\n      {sender === 'admin' && (\r\n        <div className={classes.adminMessage + ' adminMessage'}>\r\n          <div className={classes.adminMessageText}>{msg.messageTXT}</div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useStyle from './styles';\r\nimport Message from './Message/Message';\r\nimport { IconButton } from '@material-ui/core';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport { getRoomsMessagesAction } from '../../../../actions/messageActions';\r\nimport { CREATE_MESSAGE_RESET } from '../../../../constants/messagesConstants';\r\n\r\nconst MessagesContainer = () => {\r\n  const classes = useStyle();\r\n  const dispatch = useDispatch();\r\n\r\n  const roomMessages = useSelector((s) => s.roomMessages);\r\n  const {\r\n    loading: loadingMessages = true,\r\n    messages: messagesFromServer,\r\n    err: errGettingMessages,\r\n  } = roomMessages;\r\n\r\n  const currentOpenRoom = useSelector((s) => s.currentOpenRoom);\r\n  const { user } = useSelector((s) => s.loginUser);\r\n\r\n  const socket = useSelector((s) => s.socket);\r\n\r\n  const createMessage = useSelector((s) => s.createMessage);\r\n  const {\r\n    success: sendingMessageSuccess,\r\n    message: sentMessage,\r\n  } = createMessage;\r\n\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getRoomsMessagesAction(currentOpenRoom));\r\n  }, [currentOpenRoom, dispatch]);\r\n\r\n  //? for displaying messages after loading\r\n  useEffect(() => {\r\n    if (!loadingMessages && !errGettingMessages) {\r\n      if (messagesFromServer.length < 1) {\r\n        setMessages([\r\n          {\r\n            sender: 'admin',\r\n            messageTXT: 'No messages yet in this chat 😊',\r\n          },\r\n        ]);\r\n      } else {\r\n        setMessages([\r\n          {\r\n            sender: 'admin',\r\n            messageTXT: '🔐 Messages are encrypted',\r\n          },\r\n\r\n          ...messagesFromServer,\r\n        ]);\r\n      }\r\n    }\r\n  }, [errGettingMessages, loadingMessages, messagesFromServer, user._id]);\r\n\r\n  //? for handling success message sending\r\n  useEffect(() => {\r\n    if (sendingMessageSuccess) {\r\n      setMessages([...messages, sentMessage]);\r\n      dispatch({\r\n        type: CREATE_MESSAGE_RESET,\r\n      });\r\n    }\r\n  }, [dispatch, messages, sendingMessageSuccess, sentMessage]);\r\n\r\n  //? for scrolling to end of chat with each render\r\n\r\n  useEffect(() => {\r\n    document.getElementById('messages-container').scrollTo(\r\n      0,\r\n\r\n      document.getElementById('messages-container').scrollHeight\r\n    );\r\n  });\r\n\r\n  //? for listening for new messages\r\n  //! IMPORTANT => this message grabber will only work when user is opening the room\r\n  //! Any room\r\n  //! add new redux reducer for currently displayed messages\r\n  //! and it this component will get its messages from there\r\n  useEffect(() => {}, []);\r\n\r\n  useEffect(() => {\r\n    if (socket.on) {\r\n      console.log('Getting new message');\r\n      socket.on('server--user-send-message', (data) => {\r\n        //! IMPORTANT this trick is so important to use setMessages(messages=>[])\r\n        setMessages((messages) => [\r\n          ...messages,\r\n          {\r\n            sender: data.sender,\r\n            messageTXT: data.messageTXT,\r\n            date: new Date(),\r\n          },\r\n        ]);\r\n      });\r\n    }\r\n  }, [socket]);\r\n  return (\r\n    <>\r\n      <div id='messages-container' className={classes.root}>\r\n        {messages.map((msg) => (\r\n          <Message\r\n            key={Math.random()}\r\n            message={msg}\r\n            sender={\r\n              msg.sender === user._id\r\n                ? 'me'\r\n                : msg.sender === 'admin'\r\n                ? 'admin'\r\n                : 'other'\r\n            }\r\n          />\r\n        ))}\r\n      </div>\r\n      <div className={classes.earlierMessagesBtn}>\r\n        <IconButton style={{ width: '40px', height: '40px' }}>\r\n          <KeyboardArrowDownIcon style={{ fontSize: '25px' }} />\r\n        </IconButton>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MessagesContainer;\r\n","import * as c from '../constants/messagesConstants';\r\nimport axios from 'axios';\r\nimport * as urls from '../constants/urls';\r\n\r\nexport const getRoomsMessagesAction = (room) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: c.GET_ROOM_MESSAGES_REQUEST,\r\n    });\r\n\r\n    const token = `Bearer ${getState().loginUser.user.token}`;\r\n    const config = {\r\n      headers: {\r\n        authorization: token,\r\n      },\r\n    };\r\n\r\n    const {\r\n      data: { data },\r\n    } = await axios.get(`${urls.messagesUrl}/getRoomMessages/${room}`, config);\r\n    dispatch({\r\n      type: c.GET_ROOM_MESSAGES_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.GET_ROOM_MESSAGES_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\nexport const createMessageAction = (message) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: c.CREATE_MESSAGE_REQUEST,\r\n    });\r\n\r\n    const token = `Bearer ${getState().loginUser.user.token}`;\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: token,\r\n      },\r\n    };\r\n\r\n    const {\r\n      data: { data },\r\n    } = await axios.post(`${urls.messagesUrl}/createMessage`, message, config);\r\n    dispatch({\r\n      type: c.CREATE_MESSAGE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.CREATE_MESSAGE_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n","export const GET_ROOM_MESSAGES_REQUEST = 'GET_ROOM_MESSAGES_REQUEST';\r\nexport const GET_ROOM_MESSAGES_SUCCESS = 'GET_ROOM_MESSAGES_SUCCESS';\r\nexport const GET_ROOM_MESSAGES_FAIL = 'GET_ROOM_MESSAGES_FAIL';\r\n\r\nexport const CREATE_MESSAGE_REQUEST = 'CREATE_MESSAGE_REQUEST';\r\nexport const CREATE_MESSAGE_SUCCESS = 'CREATE_MESSAGE_SUCCESS';\r\nexport const CREATE_MESSAGE_FAIL = 'CREATE_MESSAGE_FAIL';\r\nexport const CREATE_MESSAGE_RESET = 'CREATE_MESSAGE_RESET';\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    minHeight: '62px',\r\n    backgroundColor: '#F0F0F0',\r\n    position: 'relative',\r\n    zIndex: '10',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  msgBox: {\r\n    flex: 1,\r\n    height: '100%',\r\n    padding: '10px 20px',\r\n    paddingRight: '0',\r\n  },\r\n  msgInput: {\r\n    width: '100%',\r\n    height: '100%',\r\n    outline: 'none',\r\n    border: 'none',\r\n    padding: '10px 15px',\r\n    borderRadius: '20px',\r\n    fontSize: '15px',\r\n    color: '#4A4A4A',\r\n    fontFamily: \"'Roboto', sans-serif\",\r\n    fontWeight: 'bold',\r\n    maxHeight: '200px',\r\n    resize: 'none',\r\n    overflow: 'hidden',\r\n    userSelect: 'none',\r\n  },\r\n  send: {\r\n    color: '#9B9B9B',\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { Send } from '@material-ui/icons';\r\nimport useStyle from './styles';\r\nimport { createMessageAction } from '../../../../actions/messageActions';\r\nimport { getMyRoomsAction } from '../../../../actions/roomActions';\r\n\r\nconst ChatController = () => {\r\n  const classes = useStyle();\r\n  const dispatch = useDispatch();\r\n\r\n  const [message, setMessage] = useState('');\r\n  const [typing, setTyping] = useState(false);\r\n  const [messageReceiver, setMessageReceiver] = useState('');\r\n\r\n  const { user } = useSelector((s) => s.loginUser);\r\n  const { rooms } = useSelector((s) => s.myRooms);\r\n  const currentOpenRoom = useSelector((s) => s.currentOpenRoom);\r\n  const socket = useSelector((s) => s.socket);\r\n\r\n  const handleSubmitMessage = (e) => {\r\n    e.preventDefault();\r\n    if (message) {\r\n      const messageObj = {\r\n        room: currentOpenRoom,\r\n        receiver: messageReceiver,\r\n        messageTXT: message,\r\n        sender: user._id,\r\n      };\r\n      dispatch(createMessageAction(messageObj));\r\n      setTyping(false);\r\n      socket.emit('user-send-message', messageObj);\r\n      setMessage('');\r\n    }\r\n  };\r\n\r\n  const handleTypingMessage = (e) => {\r\n    setMessage(e.target.value);\r\n  };\r\n\r\n  //? for setting typing variable when typing\r\n  useEffect(() => {\r\n    if (message) {\r\n      setTyping(true);\r\n    } else {\r\n      setTyping(false);\r\n    }\r\n  }, [message]);\r\n\r\n  //? for setting message receiver\r\n  useEffect(() => {\r\n    if (rooms) {\r\n      const roomData = rooms.find((room) => room._id === currentOpenRoom);\r\n      setMessageReceiver(roomData.userToShowOnRoom._id);\r\n    }\r\n  }, [currentOpenRoom, rooms]);\r\n\r\n  return (\r\n    <form className={classes.root} onSubmit={handleSubmitMessage}>\r\n      <div className={classes.msgBox}>\r\n        <input\r\n          autoFocus={true}\r\n          placeholder='Type a message'\r\n          type='text'\r\n          className={classes.msgInput}\r\n          rows='1'\r\n          value={message}\r\n          onChange={handleTypingMessage}\r\n        ></input>\r\n      </div>\r\n      <div className={classes.send}>\r\n        <IconButton disabled={!message && true} type='submit'>\r\n          <Send style={{ color: '#9B9B9B' }} />\r\n        </IconButton>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ChatController;\r\n","import React from 'react';\r\nimport useStyle from './styles';\r\nimport Header from './Header/Header';\r\nimport MessagesContainer from './MessagesContainer/MessagesContainer';\r\nimport ChatController from './ChatController/ChatController';\r\n\r\nconst ChatMsg = () => {\r\n  const classes = useStyle();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Header />\r\n      <MessagesContainer />\r\n      <ChatController />\r\n      <div className={classes.bgObjects}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatMsg;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useStyle from './styles';\r\nimport NoChat from './NoChat/NoChat';\r\nimport ChatMsg from './ChatMsg/ChatMsg';\r\n\r\nconst ChatBox = () => {\r\n  const currentOpenRoom = useSelector((s) => s.currentOpenRoom);\r\n\r\n  const classes = useStyle();\r\n  return (\r\n    <div className={classes.root}>\r\n      {currentOpenRoom ? <ChatMsg room={currentOpenRoom} /> : <NoChat />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBox;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport useStyles from './styles';\r\nimport Sidebar from '../../components/Sidebar/Sidebar';\r\nimport ChatBox from '../../components/ChatBox/ChatBox';\r\nimport { createSocketAction } from '../../actions/socketActions';\r\n\r\nconst App = ({ history }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const loginUser = useSelector((s) => s.loginUser);\r\n  const { user } = loginUser;\r\n\r\n  const socket = useSelector((s) => s.socket);\r\n  const myRooms = useSelector((s) => s.myRooms);\r\n  const { rooms } = myRooms;\r\n\r\n  useEffect(() => {\r\n    if (!user || !user.token) {\r\n      history.push('/login');\r\n    } else {\r\n      dispatch(createSocketAction());\r\n    }\r\n  }, [dispatch, history, user]);\r\n\r\n  //? set user online\r\n  useEffect(() => {\r\n    const { _id, firstName, lastName, email, photo } = user;\r\n    if (socket.emit) {\r\n      socket.emit('set-me-online', { _id, firstName, lastName, email, photo });\r\n    }\r\n  }, [rooms, socket, user]);\r\n\r\n  //? for joining all user rooms\r\n\r\n  useEffect(() => {\r\n    if (rooms && socket.emit) {\r\n      const { _id, firstName, lastName, email, photo } = user;\r\n      const roomsToJoin = rooms.map((room) => room._id);\r\n      socket.emit('user-join-his-rooms', {\r\n        rooms: roomsToJoin,\r\n        user: { _id, firstName, lastName, email, photo },\r\n      });\r\n    }\r\n  }, [rooms, socket, user]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Sidebar />\r\n      <ChatBox />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import * as c from '../constants/socketConstants';\r\nimport * as urls from '../constants/urls';\r\nimport socketIOClient from 'socket.io-client';\r\n\r\nexport const createSocketAction = () => (dispatch, getState) => {\r\n  const socket = socketIOClient(urls.host);\r\n\r\n  dispatch({\r\n    type: c.CREATE_SOCKET,\r\n    payload: socket,\r\n  });\r\n};\r\n\r\n//! this action isn't implemented yet\r\nexport const disconnectSocketAction = () => (dispatch, getState) => {\r\n  const socket = getState().socket;\r\n  socket.emit('disconnect-me');\r\n\r\n  dispatch({\r\n    type: c.DISCONNECT_SOCKET,\r\n  });\r\n};\r\n","export const CREATE_SOCKET = 'CREATE_SOCKET';\r\nexport const DISCONNECT_SOCKET = 'DISCONNECT_SOCKET';\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nfunction TransitionDown(props) {\r\n  return <Slide {...props} direction='down' />;\r\n}\r\n\r\nexport default function DirectionSnackbar() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClick = (Transition) => () => {\r\n    setOpen(true);\r\n  };\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant='filled' {...props} />;\r\n  }\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClick(TransitionDown)}>Down</Button>\r\n      <Snackbar\r\n        open={open}\r\n        autoHideDuration={2000}\r\n        onClose={handleClose}\r\n        anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n      >\r\n        <Alert onClose={handleClose} severity='success'>\r\n          Logged in successfully\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport LogIn from '../views/LogIn/LogIn';\r\nimport SignUp from '../views/SignUp/SignUp';\r\nimport ForgotPassword from '../views/ForgotPassword/ForgotPassword';\r\nimport ResetPassword from '../views/ResetPassword/ResetPassword';\r\nimport Home from '../views/Home/Home';\r\nimport Test from '../Tests/Test';\r\n\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Route path='/login' component={LogIn} />\r\n      <Route path='/signup' component={SignUp} />\r\n      <Route path='/home' component={Home} />\r\n      <Route path='/forgotPassword' component={ForgotPassword} />\r\n      <Route path='/resetPassword/:token' component={ResetPassword} />\r\n      <Route path='/test' component={Test} />\r\n      <Route path='/' component={Home} exact />\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport {\r\n  loginUserReducer,\r\n  userForgotPasswordReducer,\r\n  userResetPasswordReducer,\r\n  // signupUserReducer\r\n} from './reducers/userReducers';\r\nimport {\r\n  getMyRoomsReducer,\r\n  createRoomReducer,\r\n  currentOpenRoomReducer,\r\n} from './reducers/roomReducers';\r\n\r\nimport {\r\n  getRoomMessagesReducer,\r\n  createMessageReducer,\r\n} from './reducers/messageReducers';\r\n\r\nimport { createSocketReducer } from './reducers/socketReducers';\r\nconst reducer = combineReducers({\r\n  loginUser: loginUserReducer,\r\n  // signupUser: signupUserReducer,\r\n  myRooms: getMyRoomsReducer,\r\n  createRoom: createRoomReducer,\r\n  currentOpenRoom: currentOpenRoomReducer,\r\n  roomMessages: getRoomMessagesReducer,\r\n  createMessage: createMessageReducer,\r\n  socket: createSocketReducer,\r\n  userForgotPassword: userForgotPasswordReducer,\r\n  userResetPassword: userResetPasswordReducer,\r\n});\r\n\r\nconst loggedInUser = localStorage.getItem('loggedInUser')\r\n  ? JSON.parse(localStorage.getItem('loggedInUser'))\r\n  : {};\r\n\r\nconst currentRoomId = localStorage.getItem('currentRoomId') || '';\r\n\r\nlet initialState = {\r\n  loginUser: { user: loggedInUser },\r\n  currentOpenRoom: currentRoomId,\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import * as c from '../constants/userConstants';\r\n\r\nexport const loginUserReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case c.LOGIN_REQUEST:\r\n      return { loading: true };\r\n    case c.LOGIN_SUCCESS:\r\n      return { loading: false, user: action.payload, success: true };\r\n    case c.LOGIN_FAIL:\r\n      return { loading: false, err: action.payload };\r\n    case c.SIGNUP_REQUEST:\r\n      return { loading: true };\r\n    case c.SIGNUP_SUCCESS:\r\n      return { loading: false, user: action.payload, success: true };\r\n    case c.SIGNUP_FAIL:\r\n      return { loading: false, err: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// export const signupUserReducer = (state = {}, action) => {\r\n//   switch (action.type) {\r\n//     case c.SIGNUP_REQUEST:\r\n//       return { loading: true };\r\n//     case c.SIGNUP_SUCCESS:\r\n//       return { loading: false, user: action.payload, success: true };\r\n//     case c.SIGNUP_FAIL:\r\n//       return { loading: false, err: action.payload };\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nexport const userForgotPasswordReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case c.FORGOT_PASSWORD_REQUEST:\r\n      return { loading: true };\r\n    case c.FORGOT_PASSWORD_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case c.FORGOT_PASSWORD_FAIL:\r\n      return { loading: false, err: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const userResetPasswordReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case c.RESET_PASSWORD_REQUEST:\r\n      return { loading: true };\r\n    case c.RESET_PASSWORD_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case c.RESET_PASSWORD_FAIL:\r\n      return { loading: false, err: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as c from '../constants/roomConstants';\r\n\r\nexport const getMyRoomsReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case c.GET_MY_ROOMS_REQUEST:\r\n      return { loading: true };\r\n    case c.GET_MY_ROOMS_SUCCESS:\r\n      return { loading: false, rooms: action.payload };\r\n    case c.GET_MY_ROOMS_FAIL:\r\n      return { loading: false, err: action.payload };\r\n    // case c.UPDATE_LAST_MESSAGE:\r\n    //   return {rooms:{...rooms}}\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const createRoomReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case c.CREATE_ROOM_REQUEST:\r\n      return { loading: true };\r\n    case c.CREATE_ROOM_SUCCESS:\r\n      return { loading: false, room: action.payload, success: true };\r\n    case c.CREATE_ROOM_FAIL:\r\n      return { loading: false, err: action.payload };\r\n    case c.CREATE_ROOM_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const currentOpenRoomReducer = (state = '', action) => {\r\n  switch (action.type) {\r\n    case c.SET_CURRENT_OPEN_ROOM:\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as c from '../constants/messagesConstants';\r\n\r\n//! improvement => when user visit room and its content added to hist redux\r\n//! try not remove it when opening another room\r\n//! for better performance\r\n\r\nexport const getRoomMessagesReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case c.GET_ROOM_MESSAGES_REQUEST:\r\n      return { loading: true };\r\n    case c.GET_ROOM_MESSAGES_SUCCESS:\r\n      return { loading: false, messages: action.payload };\r\n    case c.GET_ROOM_MESSAGES_FAIL:\r\n      return { loading: false, err: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const createMessageReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case c.CREATE_MESSAGE_REQUEST:\r\n      return { loading: true };\r\n    case c.CREATE_MESSAGE_SUCCESS:\r\n      return { loading: false, message: action.payload, success: true };\r\n    case c.CREATE_MESSAGE_FAIL:\r\n      return { loading: false, err: action.payload };\r\n    case c.CREATE_MESSAGE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as c from '../constants/socketConstants';\r\n\r\nexport const createSocketReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case c.CREATE_SOCKET:\r\n      return action.payload;\r\n    case c.DISCONNECT_SOCKET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App/App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}