{"version":3,"sources":["views/LogIn/styles.js","constants/urls.js","actions/userActions.js","constants/userConstants.js","views/LogIn/LogIn.jsx","views/SignUp/styles.js","views/SignUp/SignUp.jsx","views/ForgotPassword/styles.js","views/ForgotPassword/ForgotPassword.jsx","views/ResetPassword/styles.js","views/ResetPassword/ResetPassword.jsx","views/Home/styles.js","components/Sidebar/styles.js","components/Sidebar/Header/styles.js","components/Sidebar/Header/AddFriends/styles.js","components/global/Message/styles.js","components/global/Message/Message.jsx","actions/roomActions.js","constants/roomConstants.js","components/Sidebar/Header/AddFriends/AddFriends.jsx","components/Sidebar/Header/Header.jsx","components/Sidebar/SearchBox/styles.js","components/Sidebar/SearchBox/SearchBox.jsx","components/Sidebar/ChatsContainer/styles.js","components/Sidebar/ChatsContainer/ChatGo/styles.js","components/Sidebar/ChatsContainer/ChatGo/ChatGo.jsx","components/Sidebar/ChatsContainer/ChatsContainer.jsx","components/Sidebar/Sidebar.jsx","components/ChatBox/styles.js","components/ChatBox/NoChat/styles.js","components/ChatBox/NoChat/NoChat.jsx","components/ChatBox/ChatMsg/styles.js","components/ChatBox/ChatMsg/Header/styles.js","components/ChatBox/ChatMsg/Header/Header.jsx","components/ChatBox/ChatMsg/MessagesContainer/styles.js","components/ChatBox/ChatMsg/MessagesContainer/Message/styles.js","components/ChatBox/ChatMsg/MessagesContainer/Message/Message.jsx","components/ChatBox/ChatMsg/MessagesContainer/MessagesContainer.jsx","components/ChatBox/ChatMsg/ChatController/styles.js","components/ChatBox/ChatMsg/ChatController/ChatController.jsx","actions/messageActions.js","constants/messagesConstants.js","components/global/MessageWrapper/styles.js","components/global/MessageWrapper/MessageWrapper.jsx","components/ChatBox/ChatMsg/AcceptChat/styles.js","components/ChatBox/ChatMsg/AcceptChat/AcceptChat.jsx","components/ChatBox/ChatMsg/Block/styles.js","components/ChatBox/ChatMsg/Block/Block.jsx","components/ChatBox/ChatMsg/ChatMsg.jsx","components/ChatBox/ChatBox.jsx","views/Home/Home.jsx","actions/socketActions.js","constants/socketConstants.js","Tests/Test.jsx","App/App.jsx","store.js","reducers/userReducers.js","reducers/roomReducers.js","reducers/messageReducers.js","reducers/socketReducers.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","height","background","position","zIndex","boxShadow","display","textAlign","paddingTop","emailInput","fontWeight","passwordInput","InputBorder","borderColor","loginBtn","backgroundColor","marginTop","notSignedUp","signUpLink","textDecoration","color","lonInTopHeader","margin","alignItems","justifyContent","loginLogo","host","usersUrl","roomsUrl","messagesUrl","blocksUrl","setCurrentChattingUserStatus","userObj","dispatch","getState","currentOpenRoom","userToShowOnRoom","userId","_id","type","payload","createMuiTheme","palette","primary","green","LogIn","history","useState","email","password","userData","setUserData","classes","useDispatch","loginUser","useSelector","s","logInLoading","loading","loggedInUser","user","logInError","err","successLogIn","success","Alert","props","elevation","variant","handleInputChange","e","target","name","value","useEffect","token","push","Snackbar","open","autoHideDuration","anchorOrigin","horizontal","vertical","severity","className","Container","maxWidth","Typography","style","src","alt","loginFrom","onSubmit","preventDefault","a","config","headers","axios","post","urls","data","localStorage","setItem","JSON","stringify","response","message","loginUserAction","ThemeProvider","TextField","fullWidth","label","required","id","disabled","autoComplete","onChange","InputProps","notchedOutline","inputProps","minLength","Button","endIcon","CircularProgress","to","SignUp","firstName","lastName","passwordConfirm","signupLoading","signupError","signupSuccess","signupUserAction","Grid","container","spacing","item","sm","xs","fontSize","ForgotPassword","setEmail","userForgotPassword","loadingForgotPassword","successForgotPassword","errForgotPassword","userForgotPasswordAction","ResetPassword","match","params","userResetPassword","loadingResetPassword","successResetPassword","errResetPassword","setTimeout","userResetPasswordAction","minWidth","flexDirection","overflow","borderRight","flex","padding","text","addChat","border","sidebarIcons","menuItem","addChatDialogBtn","Message","children","useStyle","setCurrentOpenRoomAction","currentRoomId","currentOpenRoomId","authorization","get","updateRoomAction","room","blockRoomAction","roomId","otherUser","unblockRoomAction","updateCurrentOpenRoomAction","acceptedRoomId","AddFriends","setOpen","createRoom","createRoomLoading","createRoomSuccess","createRoomErr","handleCloseDialog","Dialog","test","onClose","aria-labelledby","DialogTitle","otherUserEmail","trim","DialogContent","autoFocus","DialogActions","onClick","length","Header","handleLogout","removeItem","socket","disconnect","React","anchorEl","setAnchorEl","openMenu","Boolean","handleCloseMenu","IconButton","Avatar","photo","Add","aria-label","aria-controls","aria-haspopup","event","currentTarget","Menu","keepMounted","PaperProps","maxHeight","ITEM_HEIGHT","MenuItem","borderBottom","main","borderRadius","searchBox","outline","searchIcon","marginRight","SearchBox","placeholder","btnBase","cursor","avatarContainer","info","infoTop","marginBottom","whiteSpace","textOverflow","fontFamily","date","lastMsg","newChat","ChatGo","ButtonBase","moment","lastMessage","createdAt","format","new","messageTXT","ChatsContainer","myRooms","loadingMyRooms","rooms","errGettingMyRooms","map","key","Sidebar","mainLogo","mainText","subTitle","lineHeight","contactMe","NoChat","bgObjects","backgroundImage","backgroundSize","backgroundPosition","top","left","opacity","acceptChat","userInfoBtnBase","userInfo","status","openDialog","setOpenDialog","userStatus","currentChattingUserStatus","handleDeleteChat","delete","lastSeenAt","onlineId","myBlock","aria-describedby","DialogContentText","earlierMessagesBtn","right","bottom","otherMessage","otherMessageText","otherMessageDate","myMessage","myMessageText","myMessageDate","msgStatus","paddingLeft","adminMessage","textTransform","userSelect","msg","sender","messageDate","setMessageDate","adminMessageText","MessagesContainer","displayedMessages","scrollToEnd","document","getElementById","scrollTo","scrollHeight","scrollTop","clientHeight","downArrow","onscroll","Math","random","minHeight","msgBox","paddingRight","msgInput","resize","send","ChatController","setMessage","typing","setTyping","otherUserOnlineId","typingUserOnlineId","emit","typingUserId","onlineUserId","messageObj","receiver","createMessageAction","rows","Send","MessageWrapper","AcceptChat","onAccept","onBlock","Block","onUnBlock","ChatMsg","roomMessages","loadingMessages","messages","errGettingMessages","otherUserBlock","accepted","fullName","ChatBox","currentOpenRoomData","App","socketIOClient","connect","query","replace","on","messageRoomId","updateRoomAfterOneDeletedAction","block","appBar","title","marginLeft","Transition","forwardRef","ref","Slide","direction","FullScreenDialog","handleClose","fullScreen","TransitionComponent","AppBar","Toolbar","edge","List","ListItem","button","ListItemText","secondary","Divider","path","component","Home","Test","exact","reducer","combineReducers","state","action","filter","unshift","roomIdToDelete","roomsAfterDeleting","createMessage","initialState","getItem","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render"],"mappings":"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","file":"static/js/main.2903ee05.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '90vw',\r\n    height: '90vh',\r\n    background: 'white',\r\n    position: 'relative',\r\n    zIndex: '2',\r\n    boxShadow: ' -2px -2px 10px grey',\r\n    display: 'flex',\r\n    textAlign: 'center',\r\n    paddingTop: '30px',\r\n  },\r\n  emailInput: {\r\n    fontWeight: 'bold',\r\n    '& >.MuiInputLabel-outlined': {\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  passwordInput: {\r\n    '& >.MuiInputLabel-outlined': {\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  InputBorder: {\r\n    borderColor: '#019688',\r\n  },\r\n  loginBtn: {\r\n    backgroundColor: '#019688',\r\n    fontWeight: 'bold',\r\n    marginTop: '25px',\r\n    '&:hover': {\r\n      backgroundColor: '#008276',\r\n    },\r\n  },\r\n  notSignedUp: {\r\n    paddingTop: '20px',\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n  },\r\n  signUpLink: {\r\n    textDecoration: 'none',\r\n    color: '#019688',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n  lonInTopHeader: {\r\n    display: 'inline-flex',\r\n    margin: 'auto',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  loginLogo: {\r\n    textAlign: 'center',\r\n    display: 'inline-block',\r\n    width: '75px',\r\n    height: '75px',\r\n    margin: 'auto',\r\n    '&>img': {\r\n      width: '100%',\r\n      height: '100%',\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","export const host = 'https://amh-whatapp-clone.herokuapp.com';\r\n// export const host = 'http://localhost:5000';\r\n\r\nexport const usersUrl = `${host}/api/v1/users`;\r\nexport const roomsUrl = `${host}/api/v1/rooms`;\r\nexport const messagesUrl = `${host}/api/v1/messages`;\r\nexport const blocksUrl = `${host}/api/v1/blocks`;\r\n","import * as c from '../constants/userConstants';\r\nimport {\r\n  CURRENT_OPEN_ROOM_RESET,\r\n  UPDATE_CURRENT_OPEN_ROOM,\r\n} from '../constants/roomConstants';\r\nimport * as urls from '../constants/urls';\r\nimport {\r\n  TYPING_MESSAGE,\r\n  STOP_TYPING_MESSAGE,\r\n} from '../constants/roomConstants';\r\nimport axios from 'axios';\r\n\r\nexport const loginUserAction = (userData) => async (dispatch, getState) => {\r\n  try {\r\n    // const isToken = typeof userData === 'string';\r\n    dispatch({\r\n      type: c.LOGIN_REQUEST,\r\n    });\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      `${urls.usersUrl}/login`,\r\n      userData,\r\n      config\r\n    );\r\n\r\n    const { token, user } = data;\r\n    const payload = { ...user, token };\r\n\r\n    dispatch({\r\n      type: c.LOGIN_SUCCESS,\r\n      payload,\r\n    });\r\n\r\n    localStorage.setItem('loggedInUser', JSON.stringify(payload));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.LOGIN_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logoutUser = () => (dispatch, getState) => {\r\n  dispatch({\r\n    type: c.LOGOUT_USER,\r\n  });\r\n  dispatch({\r\n    type: CURRENT_OPEN_ROOM_RESET,\r\n  });\r\n  localStorage.removeItem('loggedInUser');\r\n  localStorage.removeItem('currentRoom');\r\n  const socket = getState().socket;\r\n  socket.disconnect();\r\n};\r\n\r\nexport const signupUserAction = (userData) => async (dispatch, getState) => {\r\n  try {\r\n    // const isToken = typeof userData === 'string';\r\n    dispatch({\r\n      type: c.SIGNUP_REQUEST,\r\n    });\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n    const { data } = await axios.post(\r\n      `${urls.usersUrl}/signup`,\r\n      userData,\r\n      config\r\n    );\r\n\r\n    const { token, user } = data;\r\n    const payload = { ...user, token };\r\n\r\n    dispatch({\r\n      type: c.SIGNUP_SUCCESS,\r\n      payload,\r\n    });\r\n\r\n    localStorage.setItem('loggedInUser', JSON.stringify(payload));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.SIGNUP_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const userForgotPasswordAction = (email) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    // const isToken = typeof userData === 'string';\r\n    dispatch({\r\n      type: c.FORGOT_PASSWORD_REQUEST,\r\n    });\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    await axios.post(`${urls.usersUrl}/forgotPassword`, { email }, config);\r\n\r\n    dispatch({\r\n      type: c.FORGOT_PASSWORD_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.FORGOT_PASSWORD_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const userResetPasswordAction = (token, userData) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    // const isToken = typeof userData === 'string';\r\n    dispatch({\r\n      type: c.RESET_PASSWORD_REQUEST,\r\n    });\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    await axios.post(\r\n      `${urls.usersUrl}/resetPassword/${token}`,\r\n      userData,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: c.RESET_PASSWORD_SUCCESS,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.RESET_PASSWORD_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUserStatus = (userObj) => async (dispatch, getState) => {\r\n  let currentOpenRoom = getState().currentOpenRoom.currentOpenRoom || {};\r\n  if (\r\n    !currentOpenRoom.userToShowOnRoom ||\r\n    userObj.userId !== currentOpenRoom.userToShowOnRoom._id\r\n  ) {\r\n    return;\r\n  }\r\n\r\n  let userToShowOnRoom = currentOpenRoom.userToShowOnRoom;\r\n\r\n  let onlineId = '';\r\n  let lastSeenAt = '';\r\n\r\n  if (userObj.onlineId) {\r\n    onlineId = userObj.onlineId;\r\n  } else if (userObj.lastSeenAt) {\r\n    lastSeenAt = userObj.lastSeenAt;\r\n  }\r\n\r\n  userToShowOnRoom = {\r\n    ...userToShowOnRoom,\r\n    onlineId,\r\n    lastSeenAt,\r\n  };\r\n  currentOpenRoom = { ...currentOpenRoom, userToShowOnRoom };\r\n  dispatch({\r\n    type: UPDATE_CURRENT_OPEN_ROOM,\r\n    payload: currentOpenRoom,\r\n  });\r\n};\r\n\r\nexport const setUserTyping = (userObj) => (dispatch, getState) => {\r\n  let currentOpenRoom = getState().currentOpenRoom.currentOpenRoom || {};\r\n  if (\r\n    !currentOpenRoom.userToShowOnRoom ||\r\n    userObj.userId !== currentOpenRoom.userToShowOnRoom._id\r\n  ) {\r\n    return;\r\n  }\r\n\r\n  let typing = '';\r\n  if (userObj.typing) {\r\n    typing = 'typing';\r\n  } else {\r\n    typing = '';\r\n  }\r\n\r\n  dispatch({\r\n    type: TYPING_MESSAGE,\r\n    payload: typing,\r\n  });\r\n};\r\n\r\nexport const setCurrentChattingUserStatus = (userObj) => (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  let currentOpenRoom = getState().currentOpenRoom.currentOpenRoom || {};\r\n  if (\r\n    !currentOpenRoom.userToShowOnRoom ||\r\n    userObj.userId !== currentOpenRoom.userToShowOnRoom._id\r\n  ) {\r\n    return;\r\n  }\r\n\r\n  //? status      | => the userObj content\r\n  //? ------------|-----------------------------------------------\r\n  //? online      | => userId, onlineId\r\n  //? offline     | => userId, lastSeenAt\r\n  //? startTyping | => userId, typing:true , typingUserOnlineId\r\n  //? stopTyping  | => userId, typing:false, typingUserOnlineId\r\n\r\n  dispatch({\r\n    type: c.CURRENT_USER_STATUS,\r\n    payload: userObj,\r\n  });\r\n};\r\n","export const LOGIN_REQUEST = 'LOGIN_REQUEST';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\n\r\nexport const SIGNUP_REQUEST = 'SIGNUP_REQUEST';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\r\n\r\nexport const FORGOT_PASSWORD_REQUEST = 'FORGOT_PASSWORD_REQUEST';\r\nexport const FORGOT_PASSWORD_SUCCESS = 'FORGOT_PASSWORD_SUCCESS';\r\nexport const FORGOT_PASSWORD_FAIL = 'FORGOT_PASSWORD_FAIL';\r\n\r\nexport const RESET_PASSWORD_REQUEST = 'RESET_PASSWORD_REQUEST';\r\nexport const RESET_PASSWORD_SUCCESS = 'RESET_PASSWORD_SUCCESS';\r\nexport const RESET_PASSWORD_FAIL = 'RESET_PASSWORD_FAIL';\r\n\r\nexport const CURRENT_USER_STATUS = 'CURRENT_USER_STATUS';\r\nexport const CURRENT_USER_STATUS_RESET = 'CURRENT_USER_STATUS_RESET';\r\n\r\nexport const LOGOUT_USER = 'LOGOUT_USER';\r\n","import React, { useEffect, useState } from 'react';\r\nimport useStyles from './styles';\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Container,\r\n  createMuiTheme,\r\n  ThemeProvider,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { Link } from 'react-router-dom';\r\nimport { loginUserAction } from '../../actions/userActions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: green,\r\n  },\r\n});\r\n\r\nconst LogIn = ({ history }) => {\r\n  //? setting local state\r\n  const [userData, setUserData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  //? defining some variables\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  //? getting user data from redux\r\n  const loginUser = useSelector((s) => s.loginUser);\r\n  const {\r\n    loading: logInLoading,\r\n    user: loggedInUser,\r\n    err: logInError,\r\n    success: successLogIn,\r\n  } = loginUser;\r\n\r\n  //? some functions\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant='filled' {...props} />;\r\n  }\r\n  const handleLoginSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(loginUserAction(userData));\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUserData({\r\n      ...userData,\r\n      [name]: value,\r\n    });\r\n  };\r\n  //? some useEffect functions\r\n  useEffect(() => {\r\n    if (loggedInUser && loggedInUser.token) {\r\n      history.push('/home');\r\n    }\r\n    //! try applying this in the main App.jsx to login every time with userToken\r\n    //! else if (loggedInUser && loggedInUser.token) {\r\n    //! add here the code to log user in with his token\r\n    //! to check if the token is expired or not\r\n    //! add this to backend too , to login with token\r\n    //! dispatch(loginUserAction(loggedInUser.token));\r\n    //! }\r\n  }, [dispatch, history, loggedInUser, successLogIn]);\r\n  return (\r\n    <>\r\n      {successLogIn ? (\r\n        <Snackbar\r\n          open={successLogIn}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='success'>Logged in successfully</Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {logInLoading ? (\r\n        <Snackbar\r\n          open={logInLoading}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='info'>Logging in</Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {logInError ? (\r\n        <Snackbar\r\n          open={logInError && true}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='error'>{logInError}</Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      <div className={classes.root}>\r\n        <Container maxWidth='xs'>\r\n          <Typography\r\n            className={classes.lonInTopHeader}\r\n            style={{ textAlign: 'center' }}\r\n            variant='h2'\r\n          >\r\n            Login\r\n            <div className={classes.loginLogo}>\r\n              <img src='images/login/loginLogo.png' alt='Login Logo' />\r\n            </div>\r\n          </Typography>\r\n          <form className={classes.loginFrom} onSubmit={handleLoginSubmit}>\r\n            <ThemeProvider theme={theme}>\r\n              <TextField\r\n                fullWidth\r\n                margin='normal'\r\n                variant='outlined'\r\n                label='Email'\r\n                required\r\n                name='email'\r\n                type='email'\r\n                id='email'\r\n                disabled={logInLoading}\r\n                autoComplete='current-email'\r\n                onChange={handleInputChange}\r\n                value={userData.email}\r\n                className={classes.emailInput}\r\n                InputProps={{\r\n                  className: classes.emailInput,\r\n                  classes: {\r\n                    notchedOutline: classes.InputBorder,\r\n                  },\r\n                }}\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                margin='normal'\r\n                variant='outlined'\r\n                label='Password'\r\n                required\r\n                name='password'\r\n                type='password'\r\n                id='password'\r\n                disabled={logInLoading}\r\n                autoComplete='current-password'\r\n                onChange={handleInputChange}\r\n                value={userData.password}\r\n                inputProps={{\r\n                  minLength: 8,\r\n                }}\r\n                className={classes.passwordInput}\r\n                InputProps={{\r\n                  className: classes.passwordInput,\r\n                  classes: {\r\n                    notchedOutline: classes.InputBorder,\r\n                  },\r\n                }}\r\n              />\r\n            </ThemeProvider>\r\n\r\n            <Button\r\n              type='submit'\r\n              variant='contained'\r\n              color='primary'\r\n              className={classes.loginBtn}\r\n              fullWidth\r\n              disabled={logInLoading}\r\n              endIcon={\r\n                logInLoading && (\r\n                  <CircularProgress\r\n                    style={{ color: 'black', width: '20px', height: '20px' }}\r\n                  />\r\n                )\r\n              }\r\n            >\r\n              Login\r\n            </Button>\r\n          </form>\r\n          <Typography className={classes.notSignedUp}>\r\n            Don't have email ?{' '}\r\n            <Link className={classes.signUpLink} to='/signup'>\r\n              {' '}\r\n              Signup\r\n            </Link>\r\n          </Typography>\r\n          <Typography className={classes.notSignedUp}>\r\n            <Link className={classes.signUpLink} to='/forgotPassword'>\r\n              Forgot password\r\n            </Link>{' '}\r\n            ?\r\n          </Typography>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LogIn;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '90vw',\r\n    height: '90vh',\r\n    background: 'white',\r\n    position: 'relative',\r\n    zIndex: '2',\r\n    boxShadow: ' -2px -2px 10px grey',\r\n    display: 'flex',\r\n    textAlign: 'center',\r\n    paddingTop: '30px',\r\n  },\r\n  emailInput: {\r\n    fontWeight: 'bold',\r\n    '& >.MuiInputLabel-outlined': {\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  passwordInput: {\r\n    '& >.MuiInputLabel-outlined': {\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  InputBorder: {\r\n    borderColor: '#019688',\r\n  },\r\n  loginBtn: {\r\n    backgroundColor: '#019688',\r\n    fontWeight: 'bold',\r\n    marginTop: '25px',\r\n    '&:hover': {\r\n      backgroundColor: '#008276',\r\n    },\r\n  },\r\n  notSignedUp: {\r\n    paddingTop: '20px',\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n  },\r\n  signUpLink: {\r\n    textDecoration: 'none',\r\n    color: '#019688',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n  lonInTopHeader: {\r\n    display: 'inline-flex',\r\n    margin: 'auto',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  loginLogo: {\r\n    textAlign: 'center',\r\n    display: 'inline-block',\r\n    width: '75px',\r\n    height: '75px',\r\n    margin: 'auto',\r\n    '&>img': {\r\n      width: '100%',\r\n      height: '100%',\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React, { useEffect, useState } from 'react';\r\nimport useStyles from './styles';\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Container,\r\n  createMuiTheme,\r\n  ThemeProvider,\r\n  Typography,\r\n  Grid,\r\n} from '@material-ui/core';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { Link } from 'react-router-dom';\r\nimport { signupUserAction } from '../../actions/userActions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: green,\r\n  },\r\n});\r\n\r\nconst SignUp = ({ history }) => {\r\n  //? setting local state\r\n  const [userData, setUserData] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    password: '',\r\n    passwordConfirm: '',\r\n  });\r\n\r\n  //? defining some variables\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  //? getting user data from redux\r\n  const loginUser = useSelector((s) => s.loginUser);\r\n  const {\r\n    loading: signupLoading,\r\n    user: loggedInUser,\r\n    err: signupError,\r\n    success: signupSuccess,\r\n  } = loginUser;\r\n\r\n  //? some functions\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant='filled' {...props} />;\r\n  }\r\n  const handleSignupSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(signupUserAction(userData));\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUserData({\r\n      ...userData,\r\n      [name]: value,\r\n    });\r\n  };\r\n  //? some useEffect functions\r\n  useEffect(() => {\r\n    if (loggedInUser && loggedInUser.token) {\r\n      history.push('/home');\r\n    }\r\n    //! try applying this in the main App.jsx to login every time with userToken\r\n    //! else if (loggedInUser && loggedInUser.token) {\r\n    //! add here the code to log user in with his token\r\n    //! to check if the token is expired or not\r\n    //! add this to backend too , to login with token\r\n    //! dispatch(loginUserAction(loggedInUser.token));\r\n    //! }\r\n  }, [dispatch, history, loggedInUser]);\r\n  return (\r\n    <>\r\n      {signupSuccess ? (\r\n        <Snackbar\r\n          open={signupSuccess}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='success'>Signed up successfully</Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {signupLoading ? (\r\n        <Snackbar\r\n          open={signupLoading}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='info'>Signing up</Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {signupError ? (\r\n        <Snackbar\r\n          open={signupError && true}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='error'>{signupError}</Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      <div className={classes.root}>\r\n        <Container maxWidth='xs'>\r\n          <Typography\r\n            className={classes.lonInTopHeader}\r\n            style={{ textAlign: 'center' }}\r\n            variant='h2'\r\n          >\r\n            Signup\r\n            <div className={classes.loginLogo}>\r\n              <img src='images/login/loginLogo.png' alt='Login Logo' />\r\n            </div>\r\n          </Typography>\r\n          <form className={classes.loginFrom} onSubmit={handleSignupSubmit}>\r\n            <ThemeProvider theme={theme}>\r\n              <Grid container spacing={2}>\r\n                <Grid item sm={6} xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    margin='normal'\r\n                    variant='outlined'\r\n                    label='First Name'\r\n                    required\r\n                    name='firstName'\r\n                    type='text'\r\n                    id='firstName'\r\n                    disabled={signupLoading}\r\n                    autoComplete='first-name'\r\n                    onChange={handleInputChange}\r\n                    value={userData.firstName}\r\n                    className={classes.emailInput}\r\n                    InputProps={{\r\n                      className: classes.emailInput,\r\n                      classes: {\r\n                        notchedOutline: classes.InputBorder,\r\n                      },\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item sm={6} xs={12}>\r\n                  <TextField\r\n                    fullWidth\r\n                    margin='normal'\r\n                    variant='outlined'\r\n                    label='Last Name'\r\n                    required\r\n                    name='lastName'\r\n                    disabled={signupLoading}\r\n                    type='text'\r\n                    id='lastName'\r\n                    autoComplete='last-name'\r\n                    onChange={handleInputChange}\r\n                    value={userData.lastName}\r\n                    className={classes.emailInput}\r\n                    InputProps={{\r\n                      className: classes.emailInput,\r\n                      classes: {\r\n                        notchedOutline: classes.InputBorder,\r\n                      },\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n              <TextField\r\n                fullWidth\r\n                margin='normal'\r\n                variant='outlined'\r\n                label='Email'\r\n                required\r\n                disabled={signupLoading}\r\n                name='email'\r\n                type='email'\r\n                id='email'\r\n                autoComplete='current-email'\r\n                onChange={handleInputChange}\r\n                value={userData.email}\r\n                className={classes.emailInput}\r\n                InputProps={{\r\n                  className: classes.emailInput,\r\n                  classes: {\r\n                    notchedOutline: classes.InputBorder,\r\n                  },\r\n                }}\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                margin='normal'\r\n                variant='outlined'\r\n                label='Password'\r\n                required\r\n                name='password'\r\n                disabled={signupLoading}\r\n                type='password'\r\n                id='password'\r\n                autoComplete='current-password'\r\n                onChange={handleInputChange}\r\n                value={userData.password}\r\n                inputProps={{\r\n                  minLength: 8,\r\n                }}\r\n                className={classes.passwordInput}\r\n                InputProps={{\r\n                  className: classes.passwordInput,\r\n                  classes: {\r\n                    notchedOutline: classes.InputBorder,\r\n                  },\r\n                }}\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                margin='normal'\r\n                variant='outlined'\r\n                label='Password Confirmation'\r\n                required\r\n                name='passwordConfirm'\r\n                disabled={signupLoading}\r\n                type='password'\r\n                id='passwordConfirm'\r\n                autoComplete='current-passwordConfirm'\r\n                onChange={handleInputChange}\r\n                value={userData.passwordConfirm}\r\n                inputProps={{\r\n                  minLength: 8,\r\n                }}\r\n                className={classes.passwordInput}\r\n                InputProps={{\r\n                  className: classes.passwordInput,\r\n                  classes: {\r\n                    notchedOutline: classes.InputBorder,\r\n                  },\r\n                }}\r\n              />\r\n            </ThemeProvider>\r\n\r\n            <Button\r\n              type='submit'\r\n              variant='contained'\r\n              color='primary'\r\n              className={classes.loginBtn}\r\n              fullWidth\r\n              disabled={signupLoading}\r\n              endIcon={\r\n                signupLoading && (\r\n                  <CircularProgress\r\n                    style={{ color: 'black', width: '20px', height: '20px' }}\r\n                  />\r\n                )\r\n              }\r\n            >\r\n              Signup\r\n            </Button>\r\n          </form>\r\n          <Typography className={classes.notSignedUp}>\r\n            Have an account ?{' '}\r\n            <Link className={classes.signUpLink} to='/login'>\r\n              {' '}\r\n              Login\r\n            </Link>\r\n          </Typography>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '90vw',\r\n    height: '90vh',\r\n    background: 'white',\r\n    position: 'relative',\r\n    zIndex: '2',\r\n    boxShadow: ' -2px -2px 10px grey',\r\n    display: 'flex',\r\n    textAlign: 'center',\r\n    paddingTop: '30px',\r\n  },\r\n  emailInput: {\r\n    fontWeight: 'bold',\r\n    '& >.MuiInputLabel-outlined': {\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  passwordInput: {\r\n    '& >.MuiInputLabel-outlined': {\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  InputBorder: {\r\n    borderColor: '#019688',\r\n  },\r\n  loginBtn: {\r\n    backgroundColor: '#019688',\r\n    fontWeight: 'bold',\r\n    marginTop: '25px',\r\n    '&:hover': {\r\n      backgroundColor: '#008276',\r\n    },\r\n  },\r\n  notSignedUp: {\r\n    paddingTop: '20px',\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n  },\r\n  signUpLink: {\r\n    textDecoration: 'none',\r\n    color: '#019688',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n  lonInTopHeader: {\r\n    display: 'inline-flex',\r\n    margin: 'auto',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    fontSize: '30px',\r\n  },\r\n  loginLogo: {\r\n    textAlign: 'center',\r\n    display: 'inline-block',\r\n    width: '75px',\r\n    height: '75px',\r\n    margin: 'auto',\r\n    '&>img': {\r\n      width: '100%',\r\n      height: '100%',\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React, { useEffect, useState } from 'react';\r\nimport useStyles from './styles';\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Container,\r\n  createMuiTheme,\r\n  ThemeProvider,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { userForgotPasswordAction } from '../../actions/userActions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: green,\r\n  },\r\n});\r\n\r\nconst ForgotPassword = ({ history }) => {\r\n  //? setting local state\r\n  const [email, setEmail] = useState('');\r\n\r\n  //? defining some variables\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  //? getting user data from redux\r\n  const { user } = useSelector((s) => s.loginUser);\r\n  const userForgotPassword = useSelector((s) => s.userForgotPassword);\r\n  const {\r\n    loading: loadingForgotPassword,\r\n    success: successForgotPassword,\r\n    err: errForgotPassword,\r\n  } = userForgotPassword;\r\n\r\n  //? some functions\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant='filled' {...props} />;\r\n  }\r\n\r\n  const handleForgotPasswordSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(userForgotPasswordAction(email));\r\n  };\r\n\r\n  //? some useEffect functions\r\n  useEffect(() => {\r\n    if (user && user.token) {\r\n      history.push('/home');\r\n    }\r\n    //! try applying this in the main App.jsx to login every time with userToken\r\n    //! else if (loggedInUser && loggedInUser.token) {\r\n    //! add here the code to log user in with his token\r\n    //! to check if the token is expired or not\r\n    //! add this to backend too , to login with token\r\n    //! dispatch(loginUserAction(loggedInUser.token));\r\n    //! }\r\n  }, [dispatch, history, user]);\r\n  return (\r\n    <>\r\n      {/* //? edit from here */}\r\n      {successForgotPassword ? (\r\n        <Snackbar\r\n          open={successForgotPassword}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='success'>\r\n            Please check you email for resetting password link <br />\r\n            You can close this window now\r\n          </Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {loadingForgotPassword ? (\r\n        <Snackbar\r\n          open={loadingForgotPassword}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='info'>Sending your request</Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {errForgotPassword ? (\r\n        <Snackbar\r\n          open={errForgotPassword && true}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='error'>{errForgotPassword}</Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {/* //? to here */}\r\n      <div className={classes.root}>\r\n        <Container maxWidth='xs'>\r\n          <Typography\r\n            className={classes.lonInTopHeader}\r\n            style={{ textAlign: 'center' }}\r\n            variant='h2'\r\n          >\r\n            Enter your email\r\n          </Typography>\r\n          <form\r\n            className={classes.loginFrom}\r\n            onSubmit={handleForgotPasswordSubmit}\r\n          >\r\n            <ThemeProvider theme={theme}>\r\n              <TextField\r\n                fullWidth\r\n                margin='normal'\r\n                variant='outlined'\r\n                label='Email'\r\n                required\r\n                name='email'\r\n                type='email'\r\n                id='email'\r\n                disabled={loadingForgotPassword}\r\n                autoComplete='current-email'\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                value={email}\r\n                className={classes.emailInput}\r\n                InputProps={{\r\n                  className: classes.emailInput,\r\n                  classes: {\r\n                    notchedOutline: classes.InputBorder,\r\n                  },\r\n                }}\r\n              />\r\n            </ThemeProvider>\r\n\r\n            <Button\r\n              type='submit'\r\n              variant='contained'\r\n              color='primary'\r\n              className={classes.loginBtn}\r\n              fullWidth\r\n              disabled={loadingForgotPassword}\r\n              endIcon={\r\n                loadingForgotPassword && (\r\n                  <CircularProgress\r\n                    style={{ color: 'black', width: '20px', height: '20px' }}\r\n                  />\r\n                )\r\n              }\r\n            >\r\n              Send\r\n            </Button>\r\n          </form>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '90vw',\r\n    height: '90vh',\r\n    background: 'white',\r\n    position: 'relative',\r\n    zIndex: '2',\r\n    boxShadow: ' -2px -2px 10px grey',\r\n    display: 'flex',\r\n    textAlign: 'center',\r\n    paddingTop: '30px',\r\n  },\r\n  emailInput: {\r\n    fontWeight: 'bold',\r\n    '& >.MuiInputLabel-outlined': {\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  passwordInput: {\r\n    '& >.MuiInputLabel-outlined': {\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n  InputBorder: {\r\n    borderColor: '#019688',\r\n  },\r\n  loginBtn: {\r\n    backgroundColor: '#019688',\r\n    fontWeight: 'bold',\r\n    marginTop: '25px',\r\n    '&:hover': {\r\n      backgroundColor: '#008276',\r\n    },\r\n  },\r\n  notSignedUp: {\r\n    paddingTop: '20px',\r\n    textAlign: 'center',\r\n    fontWeight: 'bold',\r\n  },\r\n  signUpLink: {\r\n    textDecoration: 'none',\r\n    color: '#019688',\r\n    '&:hover': {\r\n      textDecoration: 'underline',\r\n    },\r\n  },\r\n  lonInTopHeader: {\r\n    display: 'inline-flex',\r\n    margin: 'auto',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    fontSize: '30px',\r\n  },\r\n  loginLogo: {\r\n    textAlign: 'center',\r\n    display: 'inline-block',\r\n    width: '75px',\r\n    height: '75px',\r\n    margin: 'auto',\r\n    '&>img': {\r\n      width: '100%',\r\n      height: '100%',\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React, { useEffect, useState } from 'react';\r\nimport useStyles from './styles';\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Container,\r\n  createMuiTheme,\r\n  ThemeProvider,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { userResetPasswordAction } from '../../actions/userActions';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: green,\r\n  },\r\n});\r\n\r\nconst ResetPassword = ({ history, match }) => {\r\n  const token = match.params.token;\r\n  //? setting local state\r\n  const [userData, setUserData] = useState({\r\n    email: '',\r\n    password: '',\r\n    passwordConfirm: '',\r\n  });\r\n\r\n  //? defining some variables\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  //? getting user data from redux\r\n  const { user } = useSelector((s) => s.loginUser);\r\n  const userResetPassword = useSelector((s) => s.userResetPassword);\r\n  const {\r\n    loading: loadingResetPassword,\r\n    success: successResetPassword,\r\n    err: errResetPassword,\r\n  } = userResetPassword;\r\n\r\n  //? some functions\r\n  function Alert(props) {\r\n    return <MuiAlert elevation={6} variant='filled' {...props} />;\r\n  }\r\n  const handleResetPasswordSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(userResetPasswordAction(token, userData));\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUserData({\r\n      ...userData,\r\n      [name]: value,\r\n    });\r\n  };\r\n  //? some useEffect functions\r\n  useEffect(() => {\r\n    if (user && user.token) {\r\n      history.push('/home');\r\n    }\r\n    //! try applying this in the main App.jsx to login every time with userToken\r\n    //! else if (loggedInUser && loggedInUser.token) {\r\n    //! add here the code to log user in with his token\r\n    //! to check if the token is expired or not\r\n    //! add this to backend too , to login with token\r\n    //! dispatch(loginUserAction(loggedInUser.token));\r\n    //! }\r\n  }, [dispatch, history, user]);\r\n\r\n  useEffect(() => {\r\n    if (successResetPassword) {\r\n      setTimeout(() => {\r\n        history.push('/login');\r\n      }, 2000);\r\n    }\r\n  }, [history, successResetPassword]);\r\n  return (\r\n    <>\r\n      {successResetPassword ? (\r\n        <Snackbar\r\n          open={successResetPassword}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='success'>Password updated successfully</Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {loadingResetPassword ? (\r\n        <Snackbar\r\n          open={loadingResetPassword}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='info'>Sending Your Request</Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      {errResetPassword ? (\r\n        <Snackbar\r\n          open={errResetPassword && true}\r\n          autoHideDuration={1000}\r\n          anchorOrigin={{ horizontal: 'center', vertical: 'top' }}\r\n        >\r\n          <Alert severity='error'>{errResetPassword}</Alert>\r\n        </Snackbar>\r\n      ) : (\r\n        ''\r\n      )}\r\n      <div className={classes.root}>\r\n        <Container maxWidth='xs'>\r\n          <Typography\r\n            className={classes.lonInTopHeader}\r\n            style={{ textAlign: 'center' }}\r\n            variant='h2'\r\n          >\r\n            Reset your password password\r\n          </Typography>\r\n          <form\r\n            className={classes.loginFrom}\r\n            onSubmit={handleResetPasswordSubmit}\r\n          >\r\n            <ThemeProvider theme={theme}>\r\n              <TextField\r\n                fullWidth\r\n                margin='normal'\r\n                variant='outlined'\r\n                label='Email'\r\n                required\r\n                name='email'\r\n                type='email'\r\n                id='email'\r\n                disabled={loadingResetPassword}\r\n                autoComplete='current-email'\r\n                onChange={handleInputChange}\r\n                value={userData.email}\r\n                className={classes.emailInput}\r\n                InputProps={{\r\n                  className: classes.emailInput,\r\n                  classes: {\r\n                    notchedOutline: classes.InputBorder,\r\n                  },\r\n                }}\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                margin='normal'\r\n                variant='outlined'\r\n                label='New Password'\r\n                required\r\n                name='password'\r\n                type='password'\r\n                id='password'\r\n                disabled={loadingResetPassword}\r\n                autoComplete='current-password'\r\n                onChange={handleInputChange}\r\n                value={userData.password}\r\n                inputProps={{\r\n                  minLength: 8,\r\n                }}\r\n                className={classes.passwordInput}\r\n                InputProps={{\r\n                  className: classes.passwordInput,\r\n                  classes: {\r\n                    notchedOutline: classes.InputBorder,\r\n                  },\r\n                }}\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                margin='normal'\r\n                variant='outlined'\r\n                label='New Password Again'\r\n                required\r\n                name='passwordConfirm'\r\n                type='password'\r\n                id='passwordConfirm'\r\n                disabled={loadingResetPassword}\r\n                autoComplete='current-password'\r\n                onChange={handleInputChange}\r\n                value={userData.passwordConfirm}\r\n                inputProps={{\r\n                  minLength: 8,\r\n                }}\r\n                className={classes.passwordInput}\r\n                InputProps={{\r\n                  className: classes.passwordInput,\r\n                  classes: {\r\n                    notchedOutline: classes.InputBorder,\r\n                  },\r\n                }}\r\n              />\r\n            </ThemeProvider>\r\n\r\n            <Button\r\n              type='submit'\r\n              variant='contained'\r\n              color='primary'\r\n              className={classes.loginBtn}\r\n              fullWidth\r\n              disabled={loadingResetPassword}\r\n              endIcon={\r\n                loadingResetPassword && (\r\n                  <CircularProgress\r\n                    style={{ color: 'black', width: '20px', height: '20px' }}\r\n                  />\r\n                )\r\n              }\r\n            >\r\n              Send\r\n            </Button>\r\n          </form>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '90vw',\r\n    height: '90vh',\r\n    minWidth: '650px',\r\n    background: 'white',\r\n    position: 'relative',\r\n    zIndex: '2',\r\n    boxShadow: ' -2px -2px 10px grey',\r\n    display: 'flex',\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    overflow: 'hidden',\r\n    borderRight: '2px solid #E5E5E6',\r\n    flex: '0.35',\r\n    //? you can control width to 0 by setting flex=0 && width=0\r\n    //? for full screen remove width=0 && set flex=1\r\n    //? on large screens remove width=0 && set flex=0.35\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: '10px 0',\r\n    width: '100%',\r\n    height: '59px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    position: 'relative',\r\n    justifyContent: 'space-between',\r\n    backgroundColor: '#EDEDED',\r\n    zIndex: '10',\r\n  },\r\n  text: {\r\n    fontWeight: 'bold',\r\n    color: '#009688',\r\n  },\r\n  addChat: {\r\n    border: '1px solid #009688',\r\n    color: '#009688',\r\n  },\r\n  sidebarIcons: {\r\n    '& *': {\r\n      color: '#696969',\r\n    },\r\n  },\r\n\r\n  menuItem: {\r\n    fontWeight: 'bold',\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '90vw',\r\n    height: '90vh',\r\n  },\r\n\r\n  addChatDialogBtn: {\r\n    color: 'white',\r\n    backgroundColor: '#009688',\r\n    fontWeight: 'bold',\r\n    '&:hover': {\r\n      backgroundColor: 'rgba(0, 148, 133, 0.66)',\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    margin: '0 auto',\r\n    fontWeight: 'bold',\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport useStyle from './styles';\r\n\r\nconst Message = ({ severity, message, children }) => {\r\n  const classes = useStyle();\r\n\r\n  return (\r\n    <>\r\n      <Alert className={classes.root} severity={severity || 'info'}>\r\n        {message}\r\n      </Alert>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import * as c from '../constants/roomConstants';\r\nimport * as urls from '../constants/urls';\r\nimport axios from 'axios';\r\n\r\nexport const getMyRoomsAction = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: c.GET_MY_ROOMS_REQUEST,\r\n    });\r\n    const token = `Bearer ${getState().loginUser.user.token}`;\r\n    const config = {\r\n      headers: {\r\n        authorization: token,\r\n      },\r\n    };\r\n\r\n    const {\r\n      data: { data },\r\n    } = await axios.get(`${urls.roomsUrl}/getMyRooms`, config);\r\n    dispatch({\r\n      type: c.GET_MY_ROOMS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.GET_MY_ROOMS_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createRoomAction = (otherUserEmail) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: c.CREATE_ROOM_REQUEST,\r\n    });\r\n    const token = `Bearer ${getState().loginUser.user.token}`;\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: token,\r\n      },\r\n    };\r\n\r\n    const {\r\n      data: { data },\r\n    } = await axios.post(\r\n      `${urls.roomsUrl}/createNewRoom`,\r\n      { otherUserEmail },\r\n      config\r\n    );\r\n    dispatch({\r\n      type: c.CREATE_ROOM_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.CREATE_ROOM_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const setCurrentOpenRoomAction = (currentRoomId) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const currentOpenRoomId = getState().currentOpenRoom.currentOpenRoomId;\r\n  const currentOpenRoom = getState().currentOpenRoom.currentOpenRoom;\r\n  if (currentRoomId === currentOpenRoomId && currentOpenRoom) {\r\n    return;\r\n  }\r\n  try {\r\n    // dispatch({\r\n    //   type: c.CURRENT_OPEN_ROOM_REQUEST,\r\n    // });\r\n\r\n    const token = `Bearer ${getState().loginUser.user.token}`;\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: token,\r\n      },\r\n    };\r\n\r\n    const {\r\n      data: { data },\r\n    } = await axios.get(`${urls.roomsUrl}/${currentRoomId}`, config);\r\n    dispatch({\r\n      type: c.CURRENT_OPEN_ROOM_SUCCESS,\r\n      payload: data,\r\n    });\r\n    localStorage.setItem('currentOpenRoomId', currentRoomId);\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.CURRENT_OPEN_ROOM_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\n//? when any user send message we will get rooms from server again\r\nexport const updateRoomAction = (room) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: c.UPDATE_ROOM_PUT_UP,\r\n      payload: room,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.GET_MY_ROOMS_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const acceptRoomAction = (roomId) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: c.HANDLE_ACCEPT_ROOM_REQUEST,\r\n    });\r\n    const token = `Bearer ${getState().loginUser.user.token}`;\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: token,\r\n      },\r\n    };\r\n\r\n    const {\r\n      data: { data },\r\n    } = await axios.post(\r\n      `${urls.roomsUrl}/acceptRoom`,\r\n      { room: roomId },\r\n      config\r\n    );\r\n    dispatch({\r\n      type: c.HANDLE_ACCEPT_ROOM_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.HANDLE_ACCEPT_ROOM_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const blockRoomAction = (roomId, otherUser) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: c.HANDLE_BLOCK_ROOM_REQUEST,\r\n    });\r\n    const token = `Bearer ${getState().loginUser.user.token}`;\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: token,\r\n      },\r\n    };\r\n\r\n    const {\r\n      data: { data },\r\n    } = await axios.post(\r\n      `${urls.blocksUrl}`,\r\n      { room: roomId, otherUser: otherUser },\r\n      config\r\n    );\r\n    dispatch({\r\n      type: c.HANDLE_BLOCK_ROOM_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.HANDLE_BLOCK_ROOM_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const unblockRoomAction = (roomId, otherUser) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: c.HANDLE_UNBLOCK_ROOM_REQUEST,\r\n    });\r\n    const token = `Bearer ${getState().loginUser.user.token}`;\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: token,\r\n      },\r\n    };\r\n\r\n    const {\r\n      data: { data },\r\n    } = await axios.post(\r\n      `${urls.blocksUrl}/deleteBlock`,\r\n      { room: roomId, otherUser: otherUser },\r\n      config\r\n    );\r\n    dispatch({\r\n      type: c.HANDLE_UNBLOCK_ROOM_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.HANDLE_UNBLOCK_ROOM_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateRoomWithIdAction = (roomId) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    const token = `Bearer ${getState().loginUser.user.token}`;\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: token,\r\n      },\r\n    };\r\n\r\n    const {\r\n      data: { data },\r\n    } = await axios.get(`${urls.roomsUrl}/${roomId}`, config);\r\n    dispatch({\r\n      type: c.UPDATE_ROOM_PUT_UP,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.HANDLE_ACCEPT_ROOM_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateCurrentOpenRoomAction = (acceptedRoomId) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const currentOpenRoom = getState().currentOpenRoom.currentOpenRoom;\r\n\r\n  if (currentOpenRoom._id !== acceptedRoomId) {\r\n    return;\r\n  }\r\n  try {\r\n    const token = `Bearer ${getState().loginUser.user.token}`;\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: token,\r\n      },\r\n    };\r\n\r\n    const {\r\n      data: { data },\r\n    } = await axios.get(`${urls.roomsUrl}/${acceptedRoomId}`, config);\r\n    dispatch({\r\n      type: c.UPDATE_CURRENT_OPEN_ROOM,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem('currentRoom', JSON.stringify(data));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.HANDLE_ACCEPT_ROOM_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteRoomAction = (roomId) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: c.DELETE_ROOM_REQUEST,\r\n    });\r\n    const token = `Bearer ${getState().loginUser.user.token}`;\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: token,\r\n      },\r\n    };\r\n\r\n    const {\r\n      data: { data },\r\n    } = await axios.delete(`${urls.roomsUrl}/${roomId}`, config);\r\n    dispatch({\r\n      type: c.DELETE_ROOM_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.DELETE_ROOM_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateRoomAfterOneDeletedAction = (roomId) => (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const currentOpenRoomId = getState().currentOpenRoom.currentOpenRoom._id;\r\n  if (currentOpenRoomId === roomId) {\r\n    localStorage.removeItem('currentRoom');\r\n    dispatch({\r\n      type: c.CURRENT_OPEN_ROOM_RESET,\r\n      payload: roomId,\r\n    });\r\n  }\r\n\r\n  dispatch({\r\n    type: c.UPDATE_ROOMS_AFTER_DELETING,\r\n    payload: roomId,\r\n  });\r\n};\r\n","export const GET_MY_ROOMS_REQUEST = 'GET_MY_ROOMS_REQUEST';\r\nexport const GET_MY_ROOMS_SUCCESS = 'GET_MY_ROOMS_SUCCESS';\r\nexport const GET_MY_ROOMS_FAIL = 'GET_MY_ROOMS_FAIL';\r\n\r\nexport const CREATE_ROOM_REQUEST = 'CREATE_ROOM_REQUEST';\r\nexport const CREATE_ROOM_SUCCESS = 'CREATE_ROOM_SUCCESS';\r\nexport const CREATE_ROOM_FAIL = 'CREATE_ROOM_FAIL';\r\nexport const CREATE_ROOM_RESET = 'CREATE_ROOM_RESET';\r\n\r\nexport const HANDLE_ACCEPT_ROOM_REQUEST = 'HANDLE_ACCEPT_ROOM_REQUEST';\r\nexport const HANDLE_ACCEPT_ROOM_SUCCESS = 'HANDLE_ACCEPT_ROOM_SUCCESS';\r\nexport const HANDLE_ACCEPT_ROOM_FAIL = 'HANDLE_ACCEPT_ROOM_FAIL';\r\n\r\nexport const HANDLE_BLOCK_ROOM_REQUEST = 'HANDLE_BLOCK_ROOM_REQUEST';\r\nexport const HANDLE_BLOCK_ROOM_SUCCESS = 'HANDLE_BLOCK_ROOM_SUCCESS';\r\nexport const HANDLE_BLOCK_ROOM_FAIL = 'HANDLE_BLOCK_ROOM_FAIL';\r\nexport const HANDLE_BLOCK_ROOM_RESET = 'HANDLE_BLOCK_ROOM_RESET';\r\n\r\nexport const HANDLE_UNBLOCK_ROOM_REQUEST = 'HANDLE_UNBLOCK_ROOM_REQUEST';\r\nexport const HANDLE_UNBLOCK_ROOM_SUCCESS = 'HANDLE_UNBLOCK_ROOM_SUCCESS';\r\nexport const HANDLE_UNBLOCK_ROOM_FAIL = 'HANDLE_UNBLOCK_ROOM_FAIL';\r\nexport const HANDLE_UNBLOCK_ROOM_RESET = 'HANDLE_UNBLOCK_ROOM_RESET';\r\n\r\nexport const DELETE_ROOM_REQUEST = 'DELETE_ROOM_REQUEST';\r\nexport const DELETE_ROOM_SUCCESS = 'DELETE_ROOM_SUCCESS';\r\nexport const DELETE_ROOM_FAIL = 'DELETE_ROOM_FAIL';\r\nexport const DELETE_ROOM_RESET = 'DELETE_ROOM_RESET';\r\n\r\nexport const CURRENT_OPEN_ROOM_REQUEST = 'CURRENT_OPEN_ROOM_REQUEST';\r\nexport const CURRENT_OPEN_ROOM_SUCCESS = 'CURRENT_OPEN_ROOM_SUCCESS';\r\nexport const CURRENT_OPEN_ROOM_FAIL = 'CURRENT_OPEN_ROOM_REQUEST';\r\nexport const CURRENT_OPEN_ROOM_RESET = 'CURRENT_OPEN_ROOM_RESET3';\r\n\r\n//? non related constants\r\nexport const UPDATE_ROOM_PUT_UP = 'UPDATE_ROOM_PUT_UP';\r\nexport const UPDATE_ROOM_WITHOUT_PUT_UP = 'UPDATE_ROOM_WITHOUT_PUT_UP';\r\nexport const UPDATE_CURRENT_OPEN_ROOM = 'UPDATE_CURRENT_OPEN_ROOM';\r\nexport const UPDATE_ROOMS_AFTER_DELETING = 'UPDATE_ROOMS_AFTER_DELETING';\r\nexport const TYPING_MESSAGE = 'TYPING_MESSAGE';\r\n//? non related constants\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useStyle from './styles.js';\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  TextField,\r\n  createMuiTheme,\r\n  DialogActions,\r\n  ThemeProvider,\r\n  Button,\r\n  CircularProgress,\r\n} from '@material-ui/core';\r\nimport Message from '../../../global/Message/Message';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { createRoomAction } from '../../../../actions/roomActions';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: green,\r\n  },\r\n});\r\n\r\nconst AddFriends = ({ open, setOpen }) => {\r\n  const classes = useStyle();\r\n  const dispatch = useDispatch();\r\n\r\n  const [email, setEmail] = useState('');\r\n\r\n  const createRoom = useSelector((s) => s.createRoom);\r\n  const {\r\n    loading: createRoomLoading,\r\n    success: createRoomSuccess,\r\n    err: createRoomErr,\r\n  } = createRoom;\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpen(false);\r\n    setEmail('');\r\n  };\r\n\r\n  const handleAddNewChat = (e) => {\r\n    e.preventDefault();\r\n    dispatch(createRoomAction(`${email}`.trim()));\r\n  };\r\n\r\n  useEffect(() => {\r\n    createRoomSuccess && setEmail('');\r\n  }, [createRoomSuccess]);\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth={true}\r\n      maxWidth='md'\r\n      className={classes.test}\r\n      open={open}\r\n      onClose={handleCloseDialog}\r\n      aria-labelledby='form-dialog-title'\r\n    >\r\n      {createRoomLoading ? (\r\n        <Message message='Creating new chat ...' />\r\n      ) : createRoomErr ? (\r\n        <Message severity='error' message={createRoomErr} />\r\n      ) : createRoomSuccess ? (\r\n        <Message severity='success' message='Room created successfully' />\r\n      ) : (\r\n        <DialogTitle id='form-dialog-title'>\r\n          Enter Other Person Email{' '}\r\n        </DialogTitle>\r\n      )}\r\n      <form onSubmit={handleAddNewChat}>\r\n        <DialogContent>\r\n          <ThemeProvider theme={theme}>\r\n            <TextField\r\n              className={classes.text}\r\n              autoFocus\r\n              margin='dense'\r\n              id='email'\r\n              label='Email Address'\r\n              type='email'\r\n              fullWidth\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              value={email}\r\n              disabled={createRoomLoading}\r\n            />\r\n          </ThemeProvider>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            className={classes.addChatDialogBtn}\r\n            onClick={handleCloseDialog}\r\n            variant='contained'\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            className={classes.addChatDialogBtn}\r\n            disabled={email.length < 1 || createRoomLoading}\r\n            variant='contained'\r\n            type='submit'\r\n            endIcon={\r\n              createRoomLoading && (\r\n                <CircularProgress\r\n                  style={{ color: 'black', width: '20px', height: '20px' }}\r\n                />\r\n              )\r\n            }\r\n          >\r\n            Add Chat\r\n          </Button>\r\n        </DialogActions>\r\n      </form>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AddFriends;\r\n","import React, { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Avatar, IconButton, Menu, MenuItem } from '@material-ui/core';\r\nimport { Add } from '@material-ui/icons';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport useStyle from './styles';\r\nimport { logoutUser } from '../../../actions/userActions';\r\nimport AddFriends from './AddFriends/AddFriends.jsx';\r\n\r\nconst Header = () => {\r\n  const classes = useStyle();\r\n  const dispatch = useDispatch();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const loginUser = useSelector((s) => s.loginUser);\r\n  const { user } = loginUser;\r\n\r\n  const handleLogout = () => {\r\n    dispatch(logoutUser());\r\n    // window.location.pathname = '/login';\r\n  };\r\n\r\n  //? for 3 dots menu\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const openMenu = Boolean(anchorEl);\r\n  const ITEM_HEIGHT = 48;\r\n\r\n  const handleOpenMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseMenu = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  //? end for 3 dots menu\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton>\r\n        <Avatar src={`${user.photo}`} />\r\n      </IconButton>\r\n      <span>{user.firstName}</span>\r\n      <div className={classes.sidebarIcons}>\r\n        <AddFriends open={open} setOpen={setOpen} />\r\n\r\n        <IconButton onClick={() => setOpen(true)} className={classes.addChat}>\r\n          <Add />\r\n        </IconButton>\r\n        <IconButton>\r\n          <ChatIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          aria-label='more'\r\n          aria-controls='long-menu'\r\n          aria-haspopup='true'\r\n          onClick={handleOpenMenu}\r\n        >\r\n          <MoreVertIcon />\r\n        </IconButton>\r\n        <div>\r\n          <Menu\r\n            id='long-menu'\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={openMenu}\r\n            onClose={handleCloseMenu}\r\n            PaperProps={{\r\n              style: {\r\n                maxHeight: ITEM_HEIGHT * 4.5,\r\n                width: '20ch',\r\n              },\r\n            }}\r\n          >\r\n            <MenuItem\r\n              onClick={() => {\r\n                handleLogout();\r\n                handleCloseMenu();\r\n              }}\r\n              className={classes.menuItem}\r\n            >\r\n              Logout\r\n            </MenuItem>\r\n          </Menu>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '49px',\r\n    width: '100%',\r\n    backgroundColor: '#F6F6F6',\r\n    padding: '10px',\r\n    boxShadow: '0 1px 2px #ccc',\r\n    borderBottom: '1px solid #bbb',\r\n  },\r\n  main: {\r\n    background: 'white',\r\n    width: '100%',\r\n    height: '100%',\r\n    borderRadius: '20px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    overflow: 'hidden',\r\n    padding: '2px 10px',\r\n  },\r\n  searchBox: {\r\n    width: '100%',\r\n    height: '100%',\r\n    outline: '0',\r\n    border: 'none',\r\n  },\r\n  searchIcon: {\r\n    color: '#919191',\r\n    marginRight: '8px',\r\n    fontSize: '20px',\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport useStyle from './styles';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst SearchBox = () => {\r\n  const classes = useStyle();\r\n  return (\r\n    <div className={classes.root}>\r\n      <div className={classes.main}>\r\n        <SearchIcon className={classes.searchIcon} />\r\n        <input\r\n          placeholder='Search chats...'\r\n          className={classes.searchBox}\r\n          type='text'\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flex: 1,\r\n    overflow: 'auto',\r\n    '&::-webkit-scrollbar': {\r\n      width: '5px',\r\n    },\r\n\r\n    '&::-webkit-scrollbar-thumb': {\r\n      background: '#CCCCCC',\r\n      borderRadius: '10px',\r\n    },\r\n\r\n    '&::-webkit-scrollbar-thumb:hover': {\r\n      background: '#aaa',\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  btnBase: {\r\n    padding: 0,\r\n    margin: 0,\r\n    width: '100%',\r\n    height: '72px',\r\n  },\r\n  root: {\r\n    width: '100%',\r\n    height: '72px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    cursor: 'pointer',\r\n    borderBottom: '1px solid #F5F5F5',\r\n    '&:hover': {\r\n      background: '#F5F5F5',\r\n    },\r\n    overflow: 'hidden',\r\n  },\r\n\r\n  avatarContainer: {\r\n    padding: '0 10px',\r\n  },\r\n  info: {\r\n    flex: 1,\r\n    padding: '15px 10px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  infoTop: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    marginBottom: '7px',\r\n    width: '100%',\r\n  },\r\n  name: {\r\n    flex: '0.60',\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    fontSize: '100%',\r\n    fontWeight: 'bold',\r\n    fontFamily: 'Noto Sans JP, sans-serif',\r\n    textAlign: 'left',\r\n    height: '100%',\r\n  },\r\n\r\n  date: {\r\n    flex: '0.40',\r\n    fontSize: '12px',\r\n    color: '#878787',\r\n    fontWeight: 'bold',\r\n    height: '100%',\r\n  },\r\n  lastMsg: {\r\n    width: '150px',\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    fontFamily: 'Noto Sans JP, sans-serif',\r\n    color: '#626262',\r\n    fontSize: '90%',\r\n    textAlign: 'left',\r\n  },\r\n  newChat: {\r\n    color: '#009688',\r\n    fontWeight: 'bold',\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useStyle from './styles';\r\nimport { Avatar, ButtonBase } from '@material-ui/core';\r\nimport { setCurrentOpenRoomAction } from '../../../../actions/roomActions';\r\nimport moment from 'moment';\r\nimport { CURRENT_USER_STATUS } from '../../../../constants/userConstants';\r\n\r\nconst ChatGo = ({ room }) => {\r\n  const classes = useStyle();\r\n  const dispatch = useDispatch();\r\n  const handleSetCurrentRoom = () => {\r\n    dispatch({\r\n      type: CURRENT_USER_STATUS,\r\n    });\r\n    dispatch(setCurrentOpenRoomAction(room._id));\r\n  };\r\n  return (\r\n    <ButtonBase onClick={handleSetCurrentRoom} className={classes.btnBase}>\r\n      <div className={classes.root}>\r\n        <div className={classes.avatarContainer}>\r\n          <Avatar src={room.userToShowOnRoom.photo} />\r\n        </div>\r\n        <div className={classes.info}>\r\n          <div className={classes.infoTop}>\r\n            <div\r\n              className={classes.name}\r\n            >{`${room.userToShowOnRoom.firstName} ${room.userToShowOnRoom.lastName}`}</div>\r\n            <div className={classes.date}>\r\n              {moment(room.lastMessage.createdAt).format('hh:mm A')}\r\n            </div>\r\n          </div>\r\n\r\n          <div className={classes.lastMsg}>\r\n            {room.new ? (\r\n              <span className={classes.newChat}>New</span>\r\n            ) : (\r\n              <span>{room.lastMessage.messageTXT}</span>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ButtonBase>\r\n  );\r\n};\r\n\r\nexport default ChatGo;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useStyle from './styles';\r\nimport ChatGo from './ChatGo/ChatGo';\r\nimport { getMyRoomsAction } from '../../../actions/roomActions';\r\nimport Message from '../../global/Message/Message';\r\n\r\nconst ChatsContainer = () => {\r\n  const classes = useStyle();\r\n  const dispatch = useDispatch();\r\n  const myRooms = useSelector((s) => s.myRooms);\r\n  const {\r\n    loading: loadingMyRooms = true,\r\n    rooms,\r\n    err: errGettingMyRooms,\r\n  } = myRooms;\r\n\r\n  useEffect(() => {\r\n    dispatch(getMyRoomsAction());\r\n  }, [dispatch]);\r\n  return (\r\n    <>\r\n      <div className={classes.root}>\r\n        {loadingMyRooms ? (\r\n          <Message message='Loading Chats ...' />\r\n        ) : errGettingMyRooms ? (\r\n          <Message severity='error' message={errGettingMyRooms} />\r\n        ) : rooms.length < 1 ? (\r\n          <Message message=\"You don't have chats yet 😊\" />\r\n        ) : (\r\n          rooms.map((room) => <ChatGo key={room._id} room={room} />)\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatsContainer;\r\n","import React from 'react';\r\nimport useStyle from './styles';\r\nimport Header from './Header/Header';\r\nimport SearchBox from './SearchBox/SearchBox';\r\nimport ChatsContainer from './ChatsContainer/ChatsContainer';\r\n\r\nconst Sidebar = () => {\r\n  const classes = useStyle();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Header />\r\n      <SearchBox />\r\n      <ChatsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    background: '#F8F9FA',\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    flex: '0.65',\r\n    //? you can control width to 0 by setting flex=0 && width=0\r\n    //? for full screen remove width=0 && set flex=1\r\n    //? on large screens remove width=0 && set flex=0.65\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    height: '100%',\r\n    backgroundColor: '#F8F9FA',\r\n    borderBottom: '10px solid #4ADF83',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n  },\r\n  mainLogo: {\r\n    width: '250px',\r\n    height: '250px',\r\n  },\r\n  mainText: {\r\n    marginTop: '28px',\r\n    fontSize: '32px',\r\n    color: '#525252',\r\n    fontWeight: '300',\r\n    fontFamily: 'Noto Sans JP, sans-serif',\r\n    textAlign: 'center',\r\n    padding: '0 20px',\r\n  },\r\n  subTitle: {\r\n    fontSize: '14px',\r\n    color: '#888989',\r\n    fontFamily: 'Noto Sans JP, sans-serif',\r\n    textAlign: 'center',\r\n    lineHeight: '20px',\r\n    marginTop: '25px',\r\n    padding: '0 50px',\r\n  },\r\n  contactMe: {\r\n    marginTop: '20px',\r\n    fontSize: '20px',\r\n    color: '#525252',\r\n    fontWeight: '300',\r\n    fontFamily: 'Noto Sans JP, sans-serif',\r\n    textAlign: 'center',\r\n    padding: '0 20px',\r\n    '&>a': {\r\n      color: '#009688',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport useStyle from './styles';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NoChat = () => {\r\n  const classes = useStyle();\r\n  return (\r\n    <div className={classes.root}>\r\n      <img\r\n        className={classes.mainLogo}\r\n        src='https://web.whatsapp.com/img/intro-connection-light_c98cc75f2aa905314d74375a975d2cf2.jpg'\r\n        alt='main logo'\r\n      />\r\n      <h1 className={classes.mainText}>Welcome to WhatsApp Clone</h1>\r\n      <div className={classes.subTitle}>\r\n        This is a testing WhatsApp version, not for profiting purposes. <br />\r\n      </div>\r\n      <h1 className={classes.contactMe}>\r\n        Fully programmed by Amr Mohammed Hassan{' '}\r\n        <Link to='/contactAmr'>Contact Me</Link>\r\n      </h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoChat;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    height: '100%',\r\n    flexDirection: 'column',\r\n    backgroundColor: '#E5DDD5',\r\n    position: 'relative',\r\n  },\r\n  bgObjects: {\r\n    backgroundImage:\r\n      'url(\"https://web.whatsapp.com/img/bg-chat-tile-light_04fcacde539c58cca6745483d4858c52.png\")',\r\n    backgroundSize: 'contain',\r\n    backgroundColor: '#E5DDD5',\r\n    backgroundPosition: 'fixed',\r\n    position: 'absolute',\r\n    zIndex: '0',\r\n    top: '0',\r\n    left: '0',\r\n    width: '100%',\r\n    height: '100%',\r\n    opacity: '0.1',\r\n  },\r\n  acceptChat: {\r\n    width: '100%',\r\n    textAlign: 'center',\r\n    padding: '10px 15px',\r\n    '&>button': {\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: '10px 0',\r\n    width: '100%',\r\n    height: '59px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    position: 'relative',\r\n    justifyContent: 'space-between',\r\n    backgroundColor: '#EDEDED',\r\n    boxShadow: '0 1px 2px #ccc',\r\n    zIndex: '10',\r\n  },\r\n\r\n  sidebarIcons: {},\r\n  userInfoBtnBase: {},\r\n  userInfo: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: '10px',\r\n  },\r\n  avatarContainer: {\r\n    marginRight: '10px',\r\n  },\r\n  info: {\r\n    textAlign: 'lef',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'flex-start',\r\n    justifyContent: 'center',\r\n  },\r\n  name: {\r\n    width: '100px',\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    fontSize: '100%',\r\n    fontWeight: 'bold',\r\n    fontFamily: 'Noto Sans JP, sans-serif',\r\n    textAlign: 'left',\r\n  },\r\n  status: {\r\n    width: '150px',\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n    fontFamily: 'Noto Sans JP, sans-serif',\r\n    color: '#626262',\r\n    fontSize: '90%',\r\n    textAlign: 'left',\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Avatar,\r\n  IconButton,\r\n  ButtonBase,\r\n  Menu,\r\n  MenuItem,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  DialogContentText,\r\n} from '@material-ui/core';\r\nimport Search from '@material-ui/icons/Search';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport useStyle from './styles';\r\nimport moment from 'moment';\r\nimport {\r\n  deleteRoomAction,\r\n  blockRoomAction,\r\n  unblockRoomAction,\r\n} from '../../../../actions/roomActions';\r\n\r\nconst Header = ({ currentOpenRoom }) => {\r\n  const classes = useStyle();\r\n  const dispatch = useDispatch();\r\n\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n\r\n  const userStatus = useSelector((s) => s.currentChattingUserStatus);\r\n  const { status } = userStatus;\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  const handleDeleteChat = () => {\r\n    dispatch(deleteRoomAction(currentOpenRoom._id));\r\n  };\r\n\r\n  const handleBlock = () => {\r\n    dispatch(\r\n      blockRoomAction(currentOpenRoom._id, currentOpenRoom.userToShowOnRoom._id)\r\n    );\r\n    handleCloseMenu();\r\n  };\r\n  const handleUnblock = () => {\r\n    dispatch(\r\n      unblockRoomAction(\r\n        currentOpenRoom._id,\r\n        currentOpenRoom.userToShowOnRoom._id\r\n      )\r\n    );\r\n    handleCloseMenu();\r\n  };\r\n\r\n  //? for 3 dots menu\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const openMenu = Boolean(anchorEl);\r\n  const ITEM_HEIGHT = 48;\r\n\r\n  const handleOpenMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseMenu = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  //? end for 3 dots menu\r\n  return (\r\n    <>\r\n      <div className={classes.root}>\r\n        <ButtonBase className={classes.userInfoBtnBase}>\r\n          <div className={classes.userInfo}>\r\n            <div className={classes.avatarContainer}>\r\n              <Avatar src={currentOpenRoom.userToShowOnRoom.photo} />\r\n            </div>\r\n            <div className={classes.info}>\r\n              <div\r\n                className={classes.name}\r\n              >{`${currentOpenRoom.userToShowOnRoom.firstName} ${currentOpenRoom.userToShowOnRoom.lastName}`}</div>\r\n              <div className={classes.status}>\r\n                {status\r\n                  ? status === 'startTyping'\r\n                    ? 'Typing ...'\r\n                    : status === 'online'\r\n                    ? 'Online'\r\n                    : status === 'offline'\r\n                    ? `Last seen at ${moment(userStatus.lastSeenAt).format(\r\n                        'hh:mm A'\r\n                      )}`\r\n                    : status === 'stopTyping'\r\n                    ? 'Online'\r\n                    : ''\r\n                  : ''}\r\n\r\n                {!status\r\n                  ? currentOpenRoom.userToShowOnRoom.onlineId\r\n                    ? 'Online'\r\n                    : currentOpenRoom.userToShowOnRoom.lastSeenAt\r\n                    ? `Last seen at ${moment(\r\n                        currentOpenRoom.userToShowOnRoom.lastSeenAt\r\n                      ).format('hh:mm A')}`\r\n                    : ''\r\n                  : ''}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </ButtonBase>\r\n\r\n        <div className={classes.sidebarIcons}>\r\n          <IconButton>\r\n            <Search />\r\n          </IconButton>\r\n\r\n          <IconButton onClick={handleOpenMenu}>\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n          <div>\r\n            <Menu\r\n              id='long-menu'\r\n              anchorEl={anchorEl}\r\n              keepMounted\r\n              open={openMenu}\r\n              onClose={handleCloseMenu}\r\n              PaperProps={{\r\n                style: {\r\n                  maxHeight: ITEM_HEIGHT * 4.5,\r\n                  width: '20ch',\r\n                },\r\n              }}\r\n            >\r\n              <MenuItem\r\n                onClick={() => {\r\n                  setOpenDialog(true);\r\n                  handleCloseMenu();\r\n                }}\r\n                className={classes.menuItem}\r\n              >\r\n                Delete Chat\r\n              </MenuItem>\r\n              <MenuItem\r\n                onClick={currentOpenRoom.myBlock ? handleUnblock : handleBlock}\r\n                className={classes.menuItem}\r\n              >\r\n                {currentOpenRoom.myBlock ? 'Unblock' : 'Block'}\r\n              </MenuItem>\r\n            </Menu>\r\n          </div>\r\n\r\n          <Dialog\r\n            open={openDialog}\r\n            keepMounted\r\n            onClose={handleCloseDialog}\r\n            aria-labelledby='alert-dialog-slide-title'\r\n            aria-describedby='alert-dialog-slide-description'\r\n          >\r\n            <DialogTitle id='alert-dialog-slide-title'>\r\n              Delete Chat with{' '}\r\n              {currentOpenRoom.userToShowOnRoom.firstName +\r\n                ' ' +\r\n                currentOpenRoom.userToShowOnRoom.lastName}\r\n            </DialogTitle>\r\n            <DialogContent>\r\n              <DialogContentText id='alert-dialog-slide-description'>\r\n                Are you sure you want to deleted this chat.\r\n                <Button variant='text' color='secondary'>\r\n                  Block\r\n                </Button>\r\n                Instead?\r\n              </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleCloseDialog} color='primary'>\r\n                No\r\n              </Button>\r\n              <Button\r\n                onClick={() => {\r\n                  handleDeleteChat();\r\n                  handleCloseDialog();\r\n                }}\r\n                color='secondary'\r\n              >\r\n                Yes\r\n              </Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flex: 1,\r\n    overflow: 'auto',\r\n    '&::-webkit-scrollbar': {\r\n      width: '5px',\r\n    },\r\n\r\n    '&::-webkit-scrollbar-thumb': {\r\n      background: '#CCCCCC',\r\n      borderRadius: '10px',\r\n    },\r\n\r\n    '&::-webkit-scrollbar-thumb:hover': {\r\n      background: '#aaa',\r\n    },\r\n    position: 'relative',\r\n    zIndex: 10,\r\n  },\r\n\r\n  earlierMessagesBtn: {\r\n    position: 'absolute',\r\n    right: '10px',\r\n    bottom: '70px',\r\n    zIndex: '1000',\r\n    backgroundColor: 'white',\r\n    borderRadius: '50%',\r\n    boxShadow: '0 1px 1px 0 rgba(0,0,0,.06),0 2px 5px 0 rgba(0,0,0,.2);',\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    padding: '10px 8%',\r\n    position: 'relative',\r\n    '&>div': {\r\n      maxWidth: '90%',\r\n    },\r\n  },\r\n  //? other person message\r\n  otherMessage: {\r\n    background: 'white',\r\n    padding: '6px 7px 8px 9px',\r\n    display: 'inline-block',\r\n    borderRadius: '0 10px 10px 10px ',\r\n    position: 'relative',\r\n    boxShadow: '0 1px .5px rgba(0, 0, 0,.13)',\r\n  },\r\n  otherMessageText: {\r\n    padding: '15px 0',\r\n  },\r\n  otherMessageDate: {\r\n    textAlign: 'right',\r\n    fontSize: '11px',\r\n    color: '#8C8C8C',\r\n  },\r\n  //? my message\r\n  myMessage: {\r\n    background: '#DCF8C6',\r\n    padding: '6px 7px 8px 9px',\r\n    display: 'inline-block',\r\n    borderRadius: '10px 0 10px 10px ',\r\n    position: 'relative',\r\n    boxShadow: '0 1px .5px rgba(0, 0, 0,.13)',\r\n  },\r\n  myMessageText: {\r\n    padding: '15px 0',\r\n  },\r\n  myMessageDate: {\r\n    textAlign: 'right',\r\n    fontSize: '11px',\r\n    color: '#8C8C8C',\r\n  },\r\n  msgStatus: {\r\n    paddingLeft: '5px',\r\n    '& > img': {\r\n      width: '15px',\r\n      height: 'auto',\r\n    },\r\n  },\r\n  //? Admin Message\r\n  adminMessage: {\r\n    display: 'inline-block',\r\n    backgroundColor: '#E3F6FE',\r\n    boxShadow: '0 1px .5px rgba(0, 0,0,.13)',\r\n    padding: '10px 12px',\r\n    borderRadius: '10px',\r\n    textTransform: 'uppercase',\r\n    color: '#1D1E1F',\r\n    fontSize: '12.5px',\r\n    fontFamily: \"'Roboto Condensed', sans-serif \",\r\n    fontWeight: 'bold',\r\n    userSelect: 'none',\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React, { useState, useEffect } from 'react';\r\nimport useStyle from './styles';\r\nimport moment from 'moment';\r\n\r\nconst Message = ({ message: msg, sender }) => {\r\n  const classes = useStyle();\r\n  const [messageDate, setMessageDate] = useState('');\r\n  useEffect(() => {\r\n    setMessageDate(msg.createdAt);\r\n  }, [msg.createdAt]);\r\n\r\n  return (\r\n    <div\r\n      className={classes.root}\r\n      style={\r\n        sender === 'other'\r\n          ? { textAlign: 'left' }\r\n          : sender === 'admin'\r\n          ? { textAlign: 'center' }\r\n          : { textAlign: 'right' }\r\n      }\r\n    >\r\n      {/* other person message */}\r\n      {sender === 'other' && (\r\n        <div className={classes.otherMessage + ' otherMessage'}>\r\n          <div className={classes.otherMessageText}>{msg.messageTXT}</div>\r\n          <div className={classes.otherMessageDate}>\r\n            {moment(messageDate).format('hh:mm A')}\r\n          </div>\r\n        </div>\r\n      )}\r\n      {/* my message */}\r\n      {sender === 'me' && (\r\n        <div className={classes.myMessage + ' myMessage'}>\r\n          <div className={classes.myMessageText}>{msg.messageTXT}</div>\r\n          <div className={classes.myMessageDate}>\r\n            {moment(messageDate).format('hh:mm A')}\r\n            <span className={classes.msgStatus}>\r\n              <img\r\n                src={\r\n                  msg.status === 'sent'\r\n                    ? 'images/message_status/sent.png'\r\n                    : msg.status === 'delivered'\r\n                    ? 'images/message_status/delivered.png'\r\n                    : 'images/message_status/read.png'\r\n                }\r\n                alt='read'\r\n              />\r\n            </span>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {/* admin messages */}\r\n      {sender === 'admin' && (\r\n        <div className={classes.adminMessage + ' adminMessage'}>\r\n          <div className={classes.adminMessageText}>{msg.messageTXT}</div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","import React, { useEffect } from 'react';\r\nimport useStyle from './styles';\r\nimport Message from './Message/Message';\r\nimport { IconButton } from '@material-ui/core';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\n\r\nconst MessagesContainer = ({ displayedMessages, user }) => {\r\n  const classes = useStyle();\r\n\r\n  const scrollToEnd = () => {\r\n    document\r\n      .getElementById('messages-container')\r\n      .scrollTo(0, document.getElementById('messages-container').scrollHeight);\r\n  };\r\n\r\n  //? for scrolling to end of chat with each render\r\n\r\n  useEffect(() => {\r\n    const container = document.getElementById('messages-container');\r\n    //? scrollTop = 0  means it is opening for the first time\r\n    //? and check if the container.scrollHeight -\r\n    //? (container.scrollTop + container.clientHeight)\r\n    //? is greater than 300 because if the other user send a message when this user scrolling to top\r\n    //? we don't want to scroll him to bottom\r\n    if (\r\n      container.scrollTop === 0 ||\r\n      container.scrollHeight - (container.scrollTop + container.clientHeight) <\r\n        300\r\n    ) {\r\n      scrollToEnd();\r\n    }\r\n  }, [displayedMessages]);\r\n\r\n  //? for adding scroll event\r\n\r\n  useEffect(() => {\r\n    const container = document.getElementById('messages-container');\r\n    const downArrow = document.getElementById('down-arrow');\r\n    container.onscroll = () => {\r\n      if (\r\n        container.scrollHeight -\r\n          (container.scrollTop + container.clientHeight) <\r\n        300\r\n      ) {\r\n        downArrow.style.display = 'none';\r\n      } else {\r\n        downArrow.style.display = 'inline-flex';\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div id='messages-container' className={classes.root}>\r\n        {displayedMessages.map((msg) => (\r\n          <Message\r\n            key={Math.random()}\r\n            message={msg}\r\n            sender={\r\n              msg.sender === user._id\r\n                ? 'me'\r\n                : msg.sender === 'admin'\r\n                ? 'admin'\r\n                : 'other'\r\n            }\r\n          />\r\n        ))}\r\n      </div>\r\n      <div className={classes.earlierMessagesBtn}>\r\n        <IconButton\r\n          onClick={scrollToEnd}\r\n          style={{\r\n            width: '40px',\r\n            height: '40px',\r\n            display: 'none',\r\n          }}\r\n          id='down-arrow'\r\n        >\r\n          <KeyboardArrowDownIcon style={{ fontSize: '25px' }} />\r\n        </IconButton>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MessagesContainer;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    minHeight: '62px',\r\n    backgroundColor: '#F0F0F0',\r\n    position: 'relative',\r\n    zIndex: '10',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  msgBox: {\r\n    flex: 1,\r\n    height: '100%',\r\n    padding: '10px 20px',\r\n    paddingRight: '0',\r\n  },\r\n  msgInput: {\r\n    width: '100%',\r\n    height: '100%',\r\n    outline: 'none',\r\n    border: 'none',\r\n    padding: '10px 15px',\r\n    borderRadius: '20px',\r\n    fontSize: '15px',\r\n    color: '#4A4A4A',\r\n    fontFamily: \"'Roboto', sans-serif\",\r\n    fontWeight: 'bold',\r\n    maxHeight: '200px',\r\n    resize: 'none',\r\n    overflow: 'hidden',\r\n    userSelect: 'none',\r\n  },\r\n  send: {\r\n    color: '#9B9B9B',\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { Send } from '@material-ui/icons';\r\nimport useStyle from './styles';\r\nimport { createMessageAction } from '../../../../actions/messageActions';\r\n\r\nconst ChatController = ({ currentOpenRoom, user }) => {\r\n  const classes = useStyle();\r\n  const dispatch = useDispatch();\r\n\r\n  const [message, setMessage] = useState('');\r\n  const [typing, setTyping] = useState(false);\r\n\r\n  const socket = useSelector((s) => s.socket);\r\n\r\n  const userStatus = useSelector((s) => s.currentChattingUserStatus);\r\n  const { status } = userStatus;\r\n\r\n  const handleSubmitMessage = (e) => {\r\n    e.preventDefault();\r\n    if (message) {\r\n      const messageObj = {\r\n        room: currentOpenRoom._id,\r\n        receiver: currentOpenRoom.userToShowOnRoom._id,\r\n        messageTXT: message,\r\n      };\r\n      dispatch(createMessageAction(messageObj));\r\n      setTyping(false);\r\n      setMessage('');\r\n    }\r\n  };\r\n\r\n  const handleTypingMessage = (e) => {\r\n    setMessage(e.target.value);\r\n  };\r\n\r\n  //? for setting typing variable when typing\r\n  useEffect(() => {\r\n    if (message.trim()) {\r\n      setTyping(true);\r\n    } else {\r\n      setTyping(false);\r\n    }\r\n  }, [message]);\r\n  //! search how to get your socket id then\r\n  //! send it to the user with emitting\r\n  //? for emitting typing event\r\n  useEffect(() => {\r\n    //? here i will set myOnlineId, otherUserOnlineId\r\n    //?\r\n    let otherUserOnlineId;\r\n    if (status) {\r\n      //? here means the change happened while i am online\r\n      if (status === 'online') {\r\n        otherUserOnlineId = userStatus.onlineId;\r\n      } else {\r\n        otherUserOnlineId = userStatus.typingUserOnlineId;\r\n      }\r\n    } else {\r\n      //? here means i became online and i found it\r\n      otherUserOnlineId = currentOpenRoom.userToShowOnRoom.onlineId;\r\n    }\r\n    if (currentOpenRoom.userToShowOnRoom.onlineId && socket.id) {\r\n      if (typing) {\r\n        socket.emit('user-currently-typing', {\r\n          typingUserId: user._id,\r\n          onlineUserId: otherUserOnlineId,\r\n          typingUserOnlineId: socket.id,\r\n        });\r\n      } else {\r\n        socket.emit('user-stopped-typing', {\r\n          typingUserId: user._id,\r\n          onlineUserId: otherUserOnlineId,\r\n          typingUserOnlineId: socket.id,\r\n        });\r\n      }\r\n    }\r\n  }, [currentOpenRoom, socket, status, typing, user, userStatus.onlineId]);\r\n\r\n  return (\r\n    <form className={classes.root} onSubmit={handleSubmitMessage}>\r\n      <div className={classes.msgBox}>\r\n        <input\r\n          autoFocus={true}\r\n          placeholder='Type a message'\r\n          type='text'\r\n          className={classes.msgInput}\r\n          rows='1'\r\n          value={message}\r\n          onChange={handleTypingMessage}\r\n        ></input>\r\n      </div>\r\n      <div className={classes.send}>\r\n        <IconButton disabled={!message && true} type='submit'>\r\n          <Send style={{ color: '#9B9B9B' }} />\r\n        </IconButton>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ChatController;\r\n","import * as c from '../constants/messagesConstants';\r\nimport axios from 'axios';\r\nimport * as urls from '../constants/urls';\r\n\r\nexport const getRoomsMessagesAction = (room) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: c.GET_ROOM_MESSAGES_REQUEST,\r\n    });\r\n\r\n    const token = `Bearer ${getState().loginUser.user.token}`;\r\n    const config = {\r\n      headers: {\r\n        authorization: token,\r\n      },\r\n    };\r\n\r\n    const {\r\n      data: { data },\r\n    } = await axios.get(`${urls.messagesUrl}/getRoomMessages/${room}`, config);\r\n    dispatch({\r\n      type: c.GET_ROOM_MESSAGES_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.GET_ROOM_MESSAGES_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createMessageAction = (messageObj) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: c.CREATE_MESSAGE_REQUEST,\r\n    });\r\n\r\n    const token = `Bearer ${getState().loginUser.user.token}`;\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        authorization: token,\r\n      },\r\n    };\r\n\r\n    const {\r\n      data: { data },\r\n    } = await axios.post(\r\n      `${urls.messagesUrl}/createMessage`,\r\n      messageObj,\r\n      config\r\n    );\r\n    dispatch({\r\n      type: c.CREATE_MESSAGE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: c.CREATE_MESSAGE_FAIL,\r\n      payload:\r\n        err.response && err.response.data.message\r\n          ? err.response.data.message\r\n          : err.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateRoomMessagesAction = (message) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  const currentOpenRoomId = getState().currentOpenRoom.currentOpenRoomId;\r\n  const messageRoomId = message.room;\r\n\r\n  if (currentOpenRoomId === messageRoomId) {\r\n    dispatch({\r\n      type: c.UPDATE_DISPLAYED_MESSAGES,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n","export const GET_ROOM_MESSAGES_REQUEST = 'GET_ROOM_MESSAGES_REQUEST';\r\nexport const GET_ROOM_MESSAGES_SUCCESS = 'GET_ROOM_MESSAGES_SUCCESS';\r\nexport const GET_ROOM_MESSAGES_FAIL = 'GET_ROOM_MESSAGES_FAIL';\r\n\r\nexport const CREATE_MESSAGE_REQUEST = 'CREATE_MESSAGE_REQUEST';\r\nexport const CREATE_MESSAGE_SUCCESS = 'CREATE_MESSAGE_SUCCESS';\r\nexport const CREATE_MESSAGE_FAIL = 'CREATE_MESSAGE_FAIL';\r\nexport const CREATE_MESSAGE_RESET = 'CREATE_MESSAGE_RESET';\r\n\r\nexport const UPDATE_DISPLAYED_MESSAGES = 'UPDATE_DISPLAYED_MESSAGES';\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flex: 1,\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport Message from '../Message/Message';\r\nimport useStyle from './styles';\r\n\r\nconst MessageWrapper = ({ message, severity, children }) => {\r\n  const classes = useStyle();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Message message={message} severity={severity} />\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageWrapper;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    height: '100px',\r\n    position: 'relative',\r\n    zIndex: '10',\r\n    textAlign: 'center',\r\n    '&>button': {\r\n      marginTop: '10px',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport useStyle from './styles';\r\nimport Message from '../../../global/Message/Message';\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst AcceptChat = ({ message, onAccept, onBlock }) => {\r\n  const classes = useStyle();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Message message={message} />\r\n      <Button\r\n        style={{ marginRight: '10px' }}\r\n        variant='outlined'\r\n        margin='normal'\r\n        onClick={onAccept}\r\n      >\r\n        Accept\r\n      </Button>\r\n      <Button variant='outlined' margin='normal' onClick={onBlock}>\r\n        Block\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AcceptChat;\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    position: 'relative',\r\n    zIndex: '10',\r\n    textAlign: 'center',\r\n    '&>button': {\r\n      marginTop: '10px',\r\n      fontWeight: 'bold',\r\n    },\r\n  },\r\n}));\r\nexport default useStyles;\r\n","import React from 'react';\r\nimport useStyle from './styles';\r\nimport Message from '../../../global/Message/Message';\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst Block = ({ severity, message, onUnBlock }) => {\r\n  const classes = useStyle();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Message severity={severity} message={message} />\r\n      {onUnBlock && (\r\n        <Button\r\n          style={{ marginRight: '10px' }}\r\n          variant='outlined'\r\n          margin='normal'\r\n          onClick={onUnBlock}\r\n        >\r\n          UnBlock\r\n        </Button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Block;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useStyle from './styles';\r\nimport Header from './Header/Header';\r\nimport MessagesContainer from './MessagesContainer/MessagesContainer';\r\nimport ChatController from './ChatController/ChatController';\r\nimport { getRoomsMessagesAction } from '../../../actions/messageActions';\r\nimport {\r\n  acceptRoomAction,\r\n  blockRoomAction,\r\n  unblockRoomAction,\r\n} from '../../../actions/roomActions';\r\nimport MessageWrapper from '../../global/MessageWrapper/MessageWrapper';\r\nimport AcceptChat from './AcceptChat/AcceptChat';\r\nimport Block from './Block/Block';\r\n\r\nconst ChatMsg = ({ currentOpenRoom, currentOpenRoomId }) => {\r\n  const classes = useStyle();\r\n  const dispatch = useDispatch();\r\n\r\n  const roomMessages = useSelector((s) => s.roomMessages);\r\n  const {\r\n    loading: loadingMessages = true,\r\n    messages: displayedMessages,\r\n    err: errGettingMessages,\r\n  } = roomMessages;\r\n\r\n  const { user } = useSelector((s) => s.loginUser);\r\n\r\n  useEffect(() => {\r\n    dispatch(getRoomsMessagesAction(currentOpenRoomId));\r\n  }, [currentOpenRoomId, dispatch]);\r\n\r\n  const handleAcceptChat = () => {\r\n    dispatch(acceptRoomAction(currentOpenRoomId));\r\n  };\r\n  const handleBlockChat = () => {\r\n    dispatch(\r\n      blockRoomAction(currentOpenRoomId, currentOpenRoom.userToShowOnRoom._id)\r\n    );\r\n  };\r\n  const handleUnBlockChat = () => {\r\n    dispatch(\r\n      unblockRoomAction(currentOpenRoomId, currentOpenRoom.userToShowOnRoom._id)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {currentOpenRoomId && <Header currentOpenRoom={currentOpenRoom} />}\r\n      {/* //? for showing accepting or blocking messages */}\r\n      {currentOpenRoom.myBlock ||\r\n      currentOpenRoom.otherUserBlock ? null : currentOpenRoomId &&\r\n        !currentOpenRoom.accepted ? (\r\n        currentOpenRoom.otherUser === user._id ? (\r\n          <AcceptChat\r\n            onAccept={handleAcceptChat}\r\n            onBlock={handleBlockChat}\r\n            message={`${currentOpenRoom.userToShowOnRoom.firstName} wants to chat you`}\r\n          ></AcceptChat>\r\n        ) : (\r\n          <MessageWrapper\r\n            message={`Wait until ${currentOpenRoom.userToShowOnRoom.firstName} accept your request`}\r\n          />\r\n        )\r\n      ) : null}\r\n      {/* //? for showing you are blocked or you blocked */}\r\n      {currentOpenRoom.myBlock ? (\r\n        <Block\r\n          message={`You blocked ${currentOpenRoom.userToShowOnRoom.fullName}`}\r\n          onUnBlock={handleUnBlockChat}\r\n        ></Block>\r\n      ) : currentOpenRoom.otherUserBlock ? (\r\n        <Block\r\n          message={`You are blocked from ${currentOpenRoom.userToShowOnRoom.fullName}`}\r\n          severity='error'\r\n        ></Block>\r\n      ) : null}\r\n\r\n      {/* //? for showing messages if it is accepted even if it is blocked messages will appear */}\r\n\r\n      {!currentOpenRoom.accepted ? null : loadingMessages ? (\r\n        <MessageWrapper message='Getting messages ...' />\r\n      ) : errGettingMessages ? (\r\n        <MessageWrapper severity='error' message={errGettingMessages} />\r\n      ) : (\r\n        <>\r\n          <MessagesContainer\r\n            user={user}\r\n            displayedMessages={displayedMessages}\r\n          />\r\n        </>\r\n      )}\r\n      {currentOpenRoomId &&\r\n        currentOpenRoom.accepted &&\r\n        !currentOpenRoom.myBlock &&\r\n        !currentOpenRoom.otherUserBlock && (\r\n          <ChatController currentOpenRoom={currentOpenRoom} user={user} />\r\n        )}\r\n\r\n      <div className={classes.bgObjects}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatMsg;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport useStyle from './styles';\r\nimport NoChat from './NoChat/NoChat';\r\nimport ChatMsg from './ChatMsg/ChatMsg';\r\nimport { setCurrentOpenRoomAction } from '../../actions/roomActions';\r\n\r\nconst ChatBox = () => {\r\n  const dispatch = useDispatch();\r\n  const currentOpenRoom = useSelector((s) => s.currentOpenRoom);\r\n  const {\r\n    currentOpenRoomId,\r\n    currentOpenRoom: currentOpenRoomData = {},\r\n  } = currentOpenRoom;\r\n  //! here add\r\n\r\n  useEffect(() => {\r\n    if (currentOpenRoomId && !currentOpenRoomData._id) {\r\n      dispatch(setCurrentOpenRoomAction(currentOpenRoomId));\r\n    }\r\n  }, [currentOpenRoomData, currentOpenRoomId, dispatch]);\r\n\r\n  const classes = useStyle();\r\n  return (\r\n    <div className={classes.root}>\r\n      {currentOpenRoomId && currentOpenRoomData._id ? (\r\n        <ChatMsg\r\n          currentOpenRoomId={currentOpenRoomId}\r\n          currentOpenRoom={currentOpenRoomData}\r\n        />\r\n      ) : (\r\n        <NoChat />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBox;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport useStyles from './styles';\r\nimport Sidebar from '../../components/Sidebar/Sidebar';\r\nimport ChatBox from '../../components/ChatBox/ChatBox';\r\nimport { createSocketAction } from '../../actions/socketActions';\r\nimport { updateRoomMessagesAction } from '../../actions/messageActions';\r\nimport {\r\n  updateRoomAction,\r\n  updateRoomWithIdAction,\r\n  updateCurrentOpenRoomAction,\r\n  updateRoomAfterOneDeletedAction,\r\n} from '../../actions/roomActions';\r\nimport {\r\n  updateUserStatus,\r\n  setUserTyping,\r\n  setCurrentChattingUserStatus,\r\n} from '../../actions/userActions';\r\nimport { CREATE_ROOM_RESET } from '../../constants/roomConstants';\r\n\r\nconst App = ({ history }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const loginUser = useSelector((s) => s.loginUser);\r\n  const { user } = loginUser;\r\n\r\n  const socket = useSelector((s) => s.socket);\r\n\r\n  //? check if user isn't logged in\r\n  useEffect(() => {\r\n    if (!user || !user.token) {\r\n      history.replace('/login');\r\n    } else {\r\n      dispatch(createSocketAction());\r\n    }\r\n  }, [dispatch, history, user]);\r\n\r\n  //? for displaying room messages if there is a currentOpenRoom\r\n  useEffect(() => {\r\n    if (socket.on) {\r\n      socket.on('server--user-send-message', (data) => {\r\n        //! add get room with id =>DONE\r\n        //! then add action to get room with id and its constant will be update room and put up => DONE\r\n        //! then the payload will be the fetched room by action =>DONE\r\n        //! and then update it => DONE\r\n        //! IMPORTANT this trick is so important to use setMessages(messages=>[])\r\n        //! dispatching updateMessages\r\n        //? this for updating the rooms on the room container\r\n        dispatch(updateRoomWithIdAction(data.room));\r\n\r\n        //! add updateDisplayedMessagesAction\r\n        //! the action will check if there is currentOpenRoom and message room is the currentOpenRoom\r\n        //! then the constant will be UPDATE_DISPLAYED_MESSAGES\r\n        //! the reducer will push the new message to the displayed messages\r\n        dispatch(updateRoomMessagesAction(data));\r\n      });\r\n\r\n      socket.on('server--user-added-new-room', (room) => {\r\n        dispatch(updateRoomAction(room));\r\n        dispatch({\r\n          type: CREATE_ROOM_RESET,\r\n        });\r\n      });\r\n\r\n      socket.on('server--user-accept-new-room', (room) => {\r\n        dispatch(updateRoomAction(room));\r\n        dispatch(updateCurrentOpenRoomAction(room._id));\r\n      });\r\n\r\n      socket.on('server--user-delete-chat', (roomId) => {\r\n        dispatch(updateRoomAfterOneDeletedAction(roomId));\r\n      });\r\n\r\n      socket.on('server--user-block-room', (block) => {\r\n        dispatch(updateCurrentOpenRoomAction(block.room));\r\n      });\r\n\r\n      socket.on('server--user-unblock-room', (block) => {\r\n        dispatch(updateCurrentOpenRoomAction(block.room));\r\n      });\r\n      socket.on('server--user-online', ({ userId, onlineId }) => {\r\n        //? dispatch(updateUserStatus({ status: 'online', userId, onlineId }));\r\n        dispatch(\r\n          setCurrentChattingUserStatus({ status: 'online', userId, onlineId })\r\n        );\r\n      });\r\n      socket.on('server--user-offline', ({ userId, lastSeenAt }) => {\r\n        //? dispatch(updateUserStatus({ status: 'offline', userId, lastSeenAt }));\r\n        dispatch(\r\n          setCurrentChattingUserStatus({\r\n            status: 'offline',\r\n            userId,\r\n            lastSeenAt,\r\n          })\r\n        );\r\n      });\r\n      socket.on(\r\n        'server--user-currently-typing',\r\n        ({ userId, typingUserOnlineId }) => {\r\n          //? dispatch(\r\n          //?   setUserTyping({\r\n          //?     status: 'startTyping',\r\n          //?     userId,\r\n          //?     typing: true,\r\n          //?     typingUserOnlineId,\r\n          //?   })\r\n          //? );\r\n          dispatch(\r\n            setCurrentChattingUserStatus({\r\n              status: 'startTyping',\r\n              userId,\r\n              typing: true,\r\n              typingUserOnlineId,\r\n            })\r\n          );\r\n        }\r\n      );\r\n\r\n      socket.on(\r\n        'server--user-stopped-typing',\r\n        ({ userId, typingUserOnlineId }) => {\r\n          //? dispatch(\r\n          //?   setUserTyping({\r\n          //?     status: 'stopTyping',\r\n          //?     userId,\r\n          //?     typing: false,\r\n          //?     typingUserOnlineId,\r\n          //?   })\r\n          //? );\r\n          dispatch(\r\n            setCurrentChattingUserStatus({\r\n              status: 'stopTyping',\r\n              userId,\r\n              typing: false,\r\n              typingUserOnlineId,\r\n            })\r\n          );\r\n        }\r\n      );\r\n\r\n      //! theOtherStatus will be typing...\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [dispatch, socket]);\r\n\r\n  return user && user.token ? (\r\n    <div className={classes.root}>\r\n      <Sidebar />\r\n      <ChatBox />\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default App;\r\n","import * as c from '../constants/socketConstants';\r\nimport * as urls from '../constants/urls';\r\nimport socketIOClient from 'socket.io-client';\r\n\r\nexport const createSocketAction = () => (dispatch, getState) => {\r\n  const loginUser = getState().loginUser.user;\r\n  const socket = socketIOClient.connect(urls.host, {\r\n    query: { id: loginUser._id },\r\n  });\r\n\r\n  dispatch({\r\n    type: c.CREATE_SOCKET,\r\n    payload: socket,\r\n  });\r\n};\r\n","export const CREATE_SOCKET = 'CREATE_SOCKET';\r\nexport const DISCONNECT_SOCKET = 'DISCONNECT_SOCKET';\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction='up' ref={ref} {...props} />;\r\n});\r\n\r\nexport default function FullScreenDialog() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant='outlined' color='primary' onClick={handleClickOpen}>\r\n        Open full-screen dialog\r\n      </Button>\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge='start'\r\n              color='inherit'\r\n              onClick={handleClose}\r\n              aria-label='close'\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant='h6' className={classes.title}>\r\n              Sound\r\n            </Typography>\r\n            <Button autoFocus color='inherit' onClick={handleClose}>\r\n              save\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <List>\r\n          <ListItem button>\r\n            <ListItemText primary='Phone ringtone' secondary='Titania' />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem button>\r\n            <ListItemText\r\n              primary='Default notification ringtone'\r\n              secondary='Tethys'\r\n            />\r\n          </ListItem>\r\n        </List>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport LogIn from '../views/LogIn/LogIn';\r\nimport SignUp from '../views/SignUp/SignUp';\r\nimport ForgotPassword from '../views/ForgotPassword/ForgotPassword';\r\nimport ResetPassword from '../views/ResetPassword/ResetPassword';\r\nimport Home from '../views/Home/Home';\r\nimport Test from '../Tests/Test';\r\n\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Route path='/login' component={LogIn} />\r\n      <Route path='/signup' component={SignUp} />\r\n      <Route path='/home' component={Home} />\r\n      <Route path='/forgotPassword' component={ForgotPassword} />\r\n      <Route path='/resetPassword/:token' component={ResetPassword} />\r\n      <Route path='/test' component={Test} />\r\n      <Route path='/' component={Home} exact />\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport {\r\n  loginUserReducer,\r\n  userForgotPasswordReducer,\r\n  userResetPasswordReducer,\r\n  setCurrentChattingUserStatusReducer,\r\n  // signupUserReducer\r\n} from './reducers/userReducers';\r\nimport {\r\n  getMyRoomsReducer,\r\n  createRoomReducer,\r\n  currentOpenRoomReducer,\r\n} from './reducers/roomReducers';\r\n\r\nimport {\r\n  getRoomMessagesReducer,\r\n  createMessageReducer,\r\n} from './reducers/messageReducers';\r\n\r\nimport { createSocketReducer } from './reducers/socketReducers';\r\nconst reducer = combineReducers({\r\n  loginUser: loginUserReducer,\r\n  myRooms: getMyRoomsReducer,\r\n  createRoom: createRoomReducer,\r\n  currentOpenRoom: currentOpenRoomReducer,\r\n  roomMessages: getRoomMessagesReducer,\r\n  createMessage: createMessageReducer,\r\n  socket: createSocketReducer,\r\n  userForgotPassword: userForgotPasswordReducer,\r\n  userResetPassword: userResetPasswordReducer,\r\n  currentChattingUserStatus: setCurrentChattingUserStatusReducer,\r\n});\r\n\r\nconst loggedInUser = localStorage.getItem('loggedInUser')\r\n  ? JSON.parse(localStorage.getItem('loggedInUser'))\r\n  : {};\r\n\r\nconst currentRoomId = localStorage.getItem('currentOpenRoomId') || '';\r\n\r\nlet initialState = {\r\n  loginUser: { user: loggedInUser },\r\n  currentOpenRoom: {\r\n    currentOpenRoomId: currentRoomId,\r\n    currentOpenRoomData: {},\r\n  },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import * as c from '../constants/userConstants';\r\n\r\nexport const loginUserReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case c.LOGIN_REQUEST:\r\n      return { loading: true };\r\n    case c.LOGIN_SUCCESS:\r\n      return { loading: false, user: action.payload, success: true };\r\n    case c.LOGIN_FAIL:\r\n      return { loading: false, err: action.payload };\r\n    case c.SIGNUP_REQUEST:\r\n      return { loading: true };\r\n    case c.SIGNUP_SUCCESS:\r\n      return { loading: false, user: action.payload, success: true };\r\n    case c.SIGNUP_FAIL:\r\n      return { loading: false, err: action.payload };\r\n    case c.LOGOUT_USER:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setCurrentChattingUserStatusReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case c.CURRENT_USER_STATUS:\r\n      return { ...action.payload };\r\n    case c.CURRENT_USER_STATUS_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userForgotPasswordReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case c.FORGOT_PASSWORD_REQUEST:\r\n      return { loading: true };\r\n    case c.FORGOT_PASSWORD_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case c.FORGOT_PASSWORD_FAIL:\r\n      return { loading: false, err: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const userResetPasswordReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case c.RESET_PASSWORD_REQUEST:\r\n      return { loading: true };\r\n    case c.RESET_PASSWORD_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case c.RESET_PASSWORD_FAIL:\r\n      return { loading: false, err: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as c from '../constants/roomConstants';\r\n\r\nexport const getMyRoomsReducer = (state = { rooms: [] }, action) => {\r\n  switch (action.type) {\r\n    case c.GET_MY_ROOMS_REQUEST:\r\n      return { loading: true };\r\n    case c.GET_MY_ROOMS_SUCCESS:\r\n      return { loading: false, rooms: action.payload };\r\n    case c.GET_MY_ROOMS_FAIL:\r\n      return { loading: false, err: action.payload };\r\n    case c.UPDATE_ROOM_PUT_UP:\r\n      let roomId = action.payload._id;\r\n      let rooms = [...state.rooms].filter((room) => room._id !== roomId);\r\n      rooms.unshift(action.payload);\r\n      return { ...state, rooms };\r\n    case c.UPDATE_ROOMS_AFTER_DELETING:\r\n      const roomIdToDelete = action.payload;\r\n\r\n      const roomsAfterDeleting = [...state.rooms].filter(\r\n        (room) => room._id !== roomIdToDelete\r\n      );\r\n      return { ...state, rooms: roomsAfterDeleting };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const createRoomReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case c.CREATE_ROOM_REQUEST:\r\n      return { loading: true };\r\n    case c.CREATE_ROOM_SUCCESS:\r\n      return { loading: false, room: action.payload, success: true };\r\n    case c.CREATE_ROOM_FAIL:\r\n      return { loading: false, err: action.payload };\r\n    case c.CREATE_ROOM_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport const acceptRoomReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case c.HANDLE_ACCEPT_ROOM_REQUEST:\r\n      return { loading: true };\r\n    case c.HANDLE_ACCEPT_ROOM_SUCCESS:\r\n      return { loading: false, room: action.payload, success: true };\r\n    case c.HANDLE_ACCEPT_ROOM_FAIL:\r\n      return { loading: false, err: action.payload };\r\n    case c.HANDLE_BLOCK_ROOM_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const currentOpenRoomReducer = (\r\n  state = { currentOpenRoomId: '', currentOpenRoom: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case c.CURRENT_OPEN_ROOM_REQUEST:\r\n      return { loading: true };\r\n    case c.CURRENT_OPEN_ROOM_SUCCESS:\r\n      return {\r\n        currentOpenRoom: action.payload,\r\n        loading: false,\r\n        success: true,\r\n        currentOpenRoomId: action.payload._id,\r\n      };\r\n    case c.CURRENT_OPEN_ROOM_FAIL:\r\n      return { loading: false, err: action.payload };\r\n    case c.CURRENT_OPEN_ROOM_RESET:\r\n      return {};\r\n    case c.UPDATE_CURRENT_OPEN_ROOM:\r\n      return { ...state, currentOpenRoom: action.payload };\r\n    case c.TYPING_MESSAGE:\r\n      return { ...state, typing: action.payload };\r\n    //   let currentOpenRoom = { ...state.currentOpenRoom };\r\n    //   let userToShowOnRoom = { ...currentOpenRoom }.userToShowOnRoom;\r\n    //   userToShowOnRoom = { ...userToShowOnRoom, typing: action.payload };\r\n    //   currentOpenRoom = { ...currentOpenRoom, userToShowOnRoom };\r\n    //   return { ...state, currentOpenRoom };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const deleteRoomReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case c.DELETE_ROOM_REQUEST:\r\n      return { loading: true };\r\n    case c.DELETE_ROOM_SUCCESS:\r\n      return { loading: false, room: action.payload, success: true };\r\n    case c.DELETE_ROOM_FAIL:\r\n      return { loading: false, err: action.payload };\r\n    case c.DELETE_ROOM_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as c from '../constants/messagesConstants';\r\n\r\n//! improvement => when user visit room and its content added to hist redux\r\n//! try not remove it when opening another room\r\n//! for better performance\r\n\r\nexport const getRoomMessagesReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case c.GET_ROOM_MESSAGES_REQUEST:\r\n      return { loading: true };\r\n    case c.GET_ROOM_MESSAGES_SUCCESS:\r\n      return { loading: false, messages: action.payload };\r\n    case c.GET_ROOM_MESSAGES_FAIL:\r\n      return { loading: false, err: action.payload };\r\n    case c.UPDATE_DISPLAYED_MESSAGES:\r\n      let messages = [...state.messages];\r\n      messages.push(action.payload);\r\n\r\n      return { ...state, messages };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const createMessageReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case c.CREATE_MESSAGE_REQUEST:\r\n      return { loading: true };\r\n    case c.CREATE_MESSAGE_SUCCESS:\r\n      return { loading: false, message: action.payload, success: true };\r\n    case c.CREATE_MESSAGE_FAIL:\r\n      return { loading: false, err: action.payload };\r\n    case c.CREATE_MESSAGE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as c from '../constants/socketConstants';\r\n\r\nexport const createSocketReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case c.CREATE_SOCKET:\r\n      return action.payload;\r\n    case c.DISCONNECT_SOCKET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App/App';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}